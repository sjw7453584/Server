// Generated by the protocol buffer compiler.  DO NOT EDIT!

#ifndef PROTOBUF_IGame_2eproto__INCLUDED
#define PROTOBUF_IGame_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>

namespace IGameProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IGame_2eproto();
void protobuf_AssignDesc_IGame_2eproto();
void protobuf_ShutdownFile_IGame_2eproto();

class MsgHeartBeat;
class MsgLoginReq;
class RoleInfo;
class ServerInfo;
class MsgLoginAck;
class MsgCreateRoleReq;
class MsgCreateRoleAck;
class MsgSelectRoleReq;
class MsgSelectRoleAck;
class MsgEnterSceneNtf;
class MsgEnterSceneReq;
class MsgJumpSceneReq;
class MsgJumpSceneNtf;
class SceneRoleInfo;
class MsgRoleIntoVisionNtf;
class MsgRoleOutofVisionNtf;
class Pos;
class MsgActionReq;
class MsgActionNtf;
class HeroInfo;
class FightAttr;
class BaseAttr;
class MsgHeroAttr;
class TaskState;
class MsgTaskListNfy;
class MsgAcceptTaskReq;
class MsgAcceptTaskAck;
class MsgCommitTaskReq;
class MsgCommitTaskAck;
class MsgDropTaskReq;
class MsgDropTaskAck;
class MsgTaskChangeNfy;
class MsgGmCmdReq;
class MsgGmCmdAck;
class FormPair;
class Formation;
class MsgSaveFormation;
class MsgSaveFormationAck;
class MsgFormationNty;
class MsgAttrChangeNfy;
class MonsterUnit;
class MsgKillMonster;
class ItemBaseInfo;
class ItemExtraInfo;
class ItemInfo;
class MsgGetBagItemsNfy;
class MsgItemsChangedNfy;
class MsgUseBagItemReq;
class MsgUseBagItemAck;
class FightSide;
class MsgMonsterAgainstReq;
class MsgMonsterAgainstAck;
class MsgPvpReq;
class MsgPvpAck;
class MsgPvpCancelReq;
class MsgPvpNtf;
class MsgLoadFightResProgressReq;
class MsgLoadFightResProgressNtf;
class MsgFightStartReq;
class MsgFightStartNtf;
class MsgFightEndReq;
class MsgFightEndNtf;
class SkillInfo;
class DamageInfo;
class BuffInfo;
class AttackInfo;
class MsgAttackReq;
class MsgAttackAck;
class MsgAttackNtf;
class MsgRoundStartReq;
class MsgRoundEndReq;
class MsgBuildInfoNtf;
class MsgGetBuildCoppperReq;
class MsgGetBuildCoppperAck;
class MsgUpgradeInteriorBuildReq;
class MsgUpgradeInteriorBuildAck;
class MsgInteriorTaskFinishedNtf;
class MsgDispatchTaskReq;
class MsgDispatchTaskAck;
class MsgRefreshTaskReq;
class MsgRefreshTaskAck;
class MsgUpgradeTaskStarLevelReq;
class MsgUpgradeTaskStarLevelAck;
class MsgGetInteriorRewardReq;
class MsgGetInteriorRewardAck;
class MsgCompleteInteriorTaskReq;
class MsgCompleteInteriorTaskAck;
class MsgCreateArmyReq;
class MsgCreateArmyAck;
class MsgJoinArmyReq;
class MsgJoinArmyAck;
class MsgApproveJoinArmyReq;
class MsgApproveJoinArmyAck;
class MsgLeaveArmyReq;
class MsgJoinCountryReq;
class MsgLeaveCountryReq;
class MsgCountryAssignReq;
class MsgArmyAssignReq;
class officer;
class ArmyInfo;
class CountryInfo;
class MsgCountryInofNtf;
class MsgCallWarReq;
class MsgCallWarAck;
class CallWarInfo;
class MsgCallWarInfoReq;
class MsgCallWarInfoAck;
class MsgExchangeMoneyReq;
class MsgExchangeMoneyAck;
class HpInfo;
class CityInfo;
class MsgEnterCityVisionNtf;
class MsgOutofCityVisionNtf;
class MsgCityInfoNtf;
class MsgEnterCityReq;
class MsgEnterCityAck;
class MsgCountryBattleEndNtf;
class MsgCountryBattleStartNtf;
class MsgSystemHintNtf;
class MsgReconnectReq;
class MsgReconnectAck;
class MsgTransReq;
class MsgTransAck;
class MsgTriggerMonsterNtf;
class MsgChangeRoleModeReq;
class RoleAttr;
class MsgRoleAttrChangeNtf;
class MonsterId;
class MsgMonsterListNtf;
class MsgReleaseSkillReq;
class MsgReleaseSkillAck;
class MsgReleaseSkillNtf;
class MsgChangeModeReq;
class MsgChangeModeAck;
class MsgChangeModeNtf;
class MsgPlayerKillReq;
class MsgPlayerKillAck;
class MsgPlayerKillNtf;
class MsgCancelPlayerKillReq;
class MsgCancelPlayerKillAck;
class MsgCancelPlayerKillNtf;
class MsgPlayerKillAnswerReq;
class MsgPlayerKillAnswerAck;
class MsgPlayerKillAnswerNtf;
class MsgEnterFightReq;
class MsgEnterFightAck;
class MsgQueryAgainstReq;
class MsgQueryAgainstAck;
class MsgAreaIdNtf;
class MsgMonsterLanguageNtf;
class MsgDeadNtf;
class MsgRiviveReq;
class MsgRiviveNtf;

enum ServerState {
  NOT_INIT = 0,
  NORMAL = 1,
  BUSY = 2,
  MAINTAINING = 3
};
bool ServerState_IsValid(int value);
const ServerState ServerState_MIN = NOT_INIT;
const ServerState ServerState_MAX = MAINTAINING;

const ::google::protobuf::EnumDescriptor* ServerState_descriptor();
inline const ::std::string& ServerState_Name(ServerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServerState_descriptor(), value);
}
inline bool ServerState_Parse(
    const ::std::string& name, ServerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServerState>(
    ServerState_descriptor(), name, value);
}
enum EM_PK_MODE {
  PK_PEACE = 1,
  PK_SLAUGHTER = 2,
  PK_ARMY = 3,
  PK_COUNTRY = 4
};
bool EM_PK_MODE_IsValid(int value);
const EM_PK_MODE EM_PK_MODE_MIN = PK_PEACE;
const EM_PK_MODE EM_PK_MODE_MAX = PK_COUNTRY;

const ::google::protobuf::EnumDescriptor* EM_PK_MODE_descriptor();
inline const ::std::string& EM_PK_MODE_Name(EM_PK_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    EM_PK_MODE_descriptor(), value);
}
inline bool EM_PK_MODE_Parse(
    const ::std::string& name, EM_PK_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EM_PK_MODE>(
    EM_PK_MODE_descriptor(), name, value);
}
enum ActionType {
  UNINIT = 0,
  MOVE = 1,
  WALK = 2,
  ATTACK = 3
};
bool ActionType_IsValid(int value);
const ActionType ActionType_MIN = UNINIT;
const ActionType ActionType_MAX = ATTACK;

const ::google::protobuf::EnumDescriptor* ActionType_descriptor();
inline const ::std::string& ActionType_Name(ActionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ActionType_descriptor(), value);
}
inline bool ActionType_Parse(
    const ::std::string& name, ActionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ActionType>(
    ActionType_descriptor(), name, value);
}
enum OFFICER_TYPE {
  OFFICER_TYPE_NONE = 0,
  OFFICER_TYPE_KING = 1,
  OFFICER_TYPE_GENERAL = 2,
  OFFICER_TYPE_PRIME_MINISTER = 3,
  OFFICER_TYPE_AGILE_CAVALRY_GENERAL = 4,
  OFFICER_TYPE_CHIEF_SECRETARIAT = 5,
  OFFICER_TYPE_CHIEF_CAPITAL_GUARD = 6,
  OFFICER_TYPE_LEFT_GENERAL = 7,
  OFFICER_TYPE_RIGHT_GENERAL = 8
};
bool OFFICER_TYPE_IsValid(int value);
const OFFICER_TYPE OFFICER_TYPE_MIN = OFFICER_TYPE_NONE;
const OFFICER_TYPE OFFICER_TYPE_MAX = OFFICER_TYPE_RIGHT_GENERAL;

const ::google::protobuf::EnumDescriptor* OFFICER_TYPE_descriptor();
inline const ::std::string& OFFICER_TYPE_Name(OFFICER_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OFFICER_TYPE_descriptor(), value);
}
inline bool OFFICER_TYPE_Parse(
    const ::std::string& name, OFFICER_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OFFICER_TYPE>(
    OFFICER_TYPE_descriptor(), name, value);
}
enum ArmyOfficerType {
  ARMY_OFFICER_TYPE_NONE = 0,
  ARMY_OFFICER_TYPE_GENERAL = 1,
  ARMY_OFFICER_TYPE_VICE_GENERAL = 2,
  ARMY_OFFICER_TYPE_ELIT = 3
};
bool ArmyOfficerType_IsValid(int value);
const ArmyOfficerType ArmyOfficerType_MIN = ARMY_OFFICER_TYPE_NONE;
const ArmyOfficerType ArmyOfficerType_MAX = ARMY_OFFICER_TYPE_ELIT;

const ::google::protobuf::EnumDescriptor* ArmyOfficerType_descriptor();
inline const ::std::string& ArmyOfficerType_Name(ArmyOfficerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ArmyOfficerType_descriptor(), value);
}
inline bool ArmyOfficerType_Parse(
    const ::std::string& name, ArmyOfficerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ArmyOfficerType>(
    ArmyOfficerType_descriptor(), name, value);
}
enum COUNTRY_STATE {
  COUNTRY_STATE_LOCKED = 0,
  COUNTRY_STATE_UNLOCKED = 1,
  COUNTRY_STATE_SYSTERM = 2
};
bool COUNTRY_STATE_IsValid(int value);
const COUNTRY_STATE COUNTRY_STATE_MIN = COUNTRY_STATE_LOCKED;
const COUNTRY_STATE COUNTRY_STATE_MAX = COUNTRY_STATE_SYSTERM;

const ::google::protobuf::EnumDescriptor* COUNTRY_STATE_descriptor();
inline const ::std::string& COUNTRY_STATE_Name(COUNTRY_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    COUNTRY_STATE_descriptor(), value);
}
inline bool COUNTRY_STATE_Parse(
    const ::std::string& name, COUNTRY_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<COUNTRY_STATE>(
    COUNTRY_STATE_descriptor(), name, value);
}
enum MONEY_TYPE {
  MONEY_TYPE_GOLD = 1,
  MONEY_TYPE_SILVER = 2,
  MONEY_TYPE_COPPER = 3
};
bool MONEY_TYPE_IsValid(int value);
const MONEY_TYPE MONEY_TYPE_MIN = MONEY_TYPE_GOLD;
const MONEY_TYPE MONEY_TYPE_MAX = MONEY_TYPE_COPPER;

const ::google::protobuf::EnumDescriptor* MONEY_TYPE_descriptor();
inline const ::std::string& MONEY_TYPE_Name(MONEY_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MONEY_TYPE_descriptor(), value);
}
inline bool MONEY_TYPE_Parse(
    const ::std::string& name, MONEY_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MONEY_TYPE>(
    MONEY_TYPE_descriptor(), name, value);
}
enum CITY_STATE {
  CITY_STATE_INVINCIBLE = 1,
  CITY_STATE_DESTROYED = 2,
  CITY_STATE_ATTACKER = 3,
  CITY_STATE_ATTACKEE = 4
};
bool CITY_STATE_IsValid(int value);
const CITY_STATE CITY_STATE_MIN = CITY_STATE_INVINCIBLE;
const CITY_STATE CITY_STATE_MAX = CITY_STATE_ATTACKEE;

const ::google::protobuf::EnumDescriptor* CITY_STATE_descriptor();
inline const ::std::string& CITY_STATE_Name(CITY_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    CITY_STATE_descriptor(), value);
}
inline bool CITY_STATE_Parse(
    const ::std::string& name, CITY_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CITY_STATE>(
    CITY_STATE_descriptor(), name, value);
}
enum ROLE_MODE {
  ROLE_MODE_USER = 1,
  ROLE_MODE_VEHICHE = 2,
  ROLE_MODE_BIRD = 3,
  ROLE_MODE_RIDE = 4
};
bool ROLE_MODE_IsValid(int value);
const ROLE_MODE ROLE_MODE_MIN = ROLE_MODE_USER;
const ROLE_MODE ROLE_MODE_MAX = ROLE_MODE_RIDE;

const ::google::protobuf::EnumDescriptor* ROLE_MODE_descriptor();
inline const ::std::string& ROLE_MODE_Name(ROLE_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ROLE_MODE_descriptor(), value);
}
inline bool ROLE_MODE_Parse(
    const ::std::string& name, ROLE_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ROLE_MODE>(
    ROLE_MODE_descriptor(), name, value);
}
enum ROLE_ATTR_TYPE {
  ROLE_ATTR_TYPE_ROLE_MODE = 1,
  ROLE_ATTR_TYPE_PK_MODE = 2,
  ROLE_ATTR_TYPE_RIDE_SPEED = 3
};
bool ROLE_ATTR_TYPE_IsValid(int value);
const ROLE_ATTR_TYPE ROLE_ATTR_TYPE_MIN = ROLE_ATTR_TYPE_ROLE_MODE;
const ROLE_ATTR_TYPE ROLE_ATTR_TYPE_MAX = ROLE_ATTR_TYPE_RIDE_SPEED;

const ::google::protobuf::EnumDescriptor* ROLE_ATTR_TYPE_descriptor();
inline const ::std::string& ROLE_ATTR_TYPE_Name(ROLE_ATTR_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ROLE_ATTR_TYPE_descriptor(), value);
}
inline bool ROLE_ATTR_TYPE_Parse(
    const ::std::string& name, ROLE_ATTR_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ROLE_ATTR_TYPE>(
    ROLE_ATTR_TYPE_descriptor(), name, value);
}
enum TARGET_TYPE {
  TARGET_TYPE_ROLE = 1,
  TARGET_TYPE_CITY = 2,
  TARGET_TYPE_BOSS = 3
};
bool TARGET_TYPE_IsValid(int value);
const TARGET_TYPE TARGET_TYPE_MIN = TARGET_TYPE_ROLE;
const TARGET_TYPE TARGET_TYPE_MAX = TARGET_TYPE_BOSS;

const ::google::protobuf::EnumDescriptor* TARGET_TYPE_descriptor();
inline const ::std::string& TARGET_TYPE_Name(TARGET_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    TARGET_TYPE_descriptor(), value);
}
inline bool TARGET_TYPE_Parse(
    const ::std::string& name, TARGET_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TARGET_TYPE>(
    TARGET_TYPE_descriptor(), name, value);
}
enum EM_PKRESULT {
  PKRESULT_SUCC = 0,
  PKRESULT_INBATTLE = 1,
  PKRESULT_INSAFETYZONE = 2,
  PKRESULT_NOPROPS = 3,
  PKRESULT_NOTARGET = 4,
  PKRESULT_ERRMODE = 5
};
bool EM_PKRESULT_IsValid(int value);
const EM_PKRESULT EM_PKRESULT_MIN = PKRESULT_SUCC;
const EM_PKRESULT EM_PKRESULT_MAX = PKRESULT_ERRMODE;

const ::google::protobuf::EnumDescriptor* EM_PKRESULT_descriptor();
inline const ::std::string& EM_PKRESULT_Name(EM_PKRESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    EM_PKRESULT_descriptor(), value);
}
inline bool EM_PKRESULT_Parse(
    const ::std::string& name, EM_PKRESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EM_PKRESULT>(
    EM_PKRESULT_descriptor(), name, value);
}
enum RIVIVE_MODE {
  RIVIVE_MODE_NO_MOVE = 1,
  RIVIVE_MODE_RIVIVE_POS = 2,
  RIVIVE_MODE_REVENGE = 3
};
bool RIVIVE_MODE_IsValid(int value);
const RIVIVE_MODE RIVIVE_MODE_MIN = RIVIVE_MODE_NO_MOVE;
const RIVIVE_MODE RIVIVE_MODE_MAX = RIVIVE_MODE_REVENGE;

const ::google::protobuf::EnumDescriptor* RIVIVE_MODE_descriptor();
inline const ::std::string& RIVIVE_MODE_Name(RIVIVE_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    RIVIVE_MODE_descriptor(), value);
}
inline bool RIVIVE_MODE_Parse(
    const ::std::string& name, RIVIVE_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RIVIVE_MODE>(
    RIVIVE_MODE_descriptor(), name, value);
}
// ===================================================================

class MsgHeartBeat : public ::google::protobuf::Message {
 public:
  MsgHeartBeat();
  virtual ~MsgHeartBeat();
  
  MsgHeartBeat(const MsgHeartBeat& from);
  
  inline MsgHeartBeat& operator=(const MsgHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeartBeat& default_instance();
  void Swap(MsgHeartBeat* other);
  
  // implements Message ----------------------------------------------
  
  MsgHeartBeat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHeartBeat& from);
  void MergeFrom(const MsgHeartBeat& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional float lastSendTime = 1;
  inline bool has_lastsendtime() const;
  inline void clear_lastsendtime();
  static const int kLastSendTimeFieldNumber = 1;
  inline float lastsendtime() const;
  inline void set_lastsendtime(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  float lastsendtime_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgHeartBeat* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginReq : public ::google::protobuf::Message {
 public:
  MsgLoginReq();
  virtual ~MsgLoginReq();
  
  MsgLoginReq(const MsgLoginReq& from);
  
  inline MsgLoginReq& operator=(const MsgLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginReq& default_instance();
  void Swap(MsgLoginReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgLoginReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginReq& from);
  void MergeFrom(const MsgLoginReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string loginName = 1;
  inline bool has_loginname() const;
  inline void clear_loginname();
  static const int kLoginNameFieldNumber = 1;
  inline const ::std::string& loginname() const;
  inline void set_loginname(const ::std::string& value);
  inline void set_loginname(const char* value);
  inline void set_loginname(const char* value, size_t size);
  inline ::std::string* mutable_loginname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* loginname_;
  static const ::std::string _default_loginname_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLoginReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfo : public ::google::protobuf::Message {
 public:
  RoleInfo();
  virtual ~RoleInfo();
  
  RoleInfo(const RoleInfo& from);
  
  inline RoleInfo& operator=(const RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfo& default_instance();
  void Swap(RoleInfo* other);
  
  // implements Message ----------------------------------------------
  
  RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfo& from);
  void MergeFrom(const RoleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // required string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // required int32 roleType = 3;
  inline bool has_roletype() const;
  inline void clear_roletype();
  static const int kRoleTypeFieldNumber = 3;
  inline ::google::protobuf::int32 roletype() const;
  inline void set_roletype(::google::protobuf::int32 value);
  
  // required uint32 speed = 4;
  inline bool has_speed() const;
  inline void clear_speed();
  static const int kSpeedFieldNumber = 4;
  inline ::google::protobuf::uint32 speed() const;
  inline void set_speed(::google::protobuf::uint32 value);
  
  // optional uint32 level = 5;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 5;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint64 gold = 6;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 6;
  inline ::google::protobuf::uint64 gold() const;
  inline void set_gold(::google::protobuf::uint64 value);
  
  // optional uint64 silver = 7;
  inline bool has_silver() const;
  inline void clear_silver();
  static const int kSilverFieldNumber = 7;
  inline ::google::protobuf::uint64 silver() const;
  inline void set_silver(::google::protobuf::uint64 value);
  
  // optional uint64 copper = 8;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 8;
  inline ::google::protobuf::uint64 copper() const;
  inline void set_copper(::google::protobuf::uint64 value);
  
  // optional uint32 country_id = 9;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 9;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);
  
  // optional uint32 army_id = 10;
  inline bool has_army_id() const;
  inline void clear_army_id();
  static const int kArmyIdFieldNumber = 10;
  inline ::google::protobuf::uint32 army_id() const;
  inline void set_army_id(::google::protobuf::uint32 value);
  
  // optional uint32 army_member_type = 11;
  inline bool has_army_member_type() const;
  inline void clear_army_member_type();
  static const int kArmyMemberTypeFieldNumber = 11;
  inline ::google::protobuf::uint32 army_member_type() const;
  inline void set_army_member_type(::google::protobuf::uint32 value);
  
  // optional uint32 army_officer_type = 12;
  inline bool has_army_officer_type() const;
  inline void clear_army_officer_type();
  static const int kArmyOfficerTypeFieldNumber = 12;
  inline ::google::protobuf::uint32 army_officer_type() const;
  inline void set_army_officer_type(::google::protobuf::uint32 value);
  
  // repeated uint32 offices = 13;
  inline int offices_size() const;
  inline void clear_offices();
  static const int kOfficesFieldNumber = 13;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& offices() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_offices();
  inline ::google::protobuf::uint32 offices(int index) const;
  inline void set_offices(int index, ::google::protobuf::uint32 value);
  inline void add_offices(::google::protobuf::uint32 value);
  
  // optional .IGameProto.EM_PK_MODE pkmode = 14;
  inline bool has_pkmode() const;
  inline void clear_pkmode();
  static const int kPkmodeFieldNumber = 14;
  inline IGameProto::EM_PK_MODE pkmode() const;
  inline void set_pkmode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  ::google::protobuf::int32 roletype_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 gold_;
  ::google::protobuf::uint64 silver_;
  ::google::protobuf::uint64 copper_;
  ::google::protobuf::uint32 country_id_;
  ::google::protobuf::uint32 army_id_;
  ::google::protobuf::uint32 army_member_type_;
  ::google::protobuf::uint32 army_officer_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > offices_;
  int pkmode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class ServerInfo : public ::google::protobuf::Message {
 public:
  ServerInfo();
  virtual ~ServerInfo();
  
  ServerInfo(const ServerInfo& from);
  
  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerInfo& default_instance();
  void Swap(ServerInfo* other);
  
  // implements Message ----------------------------------------------
  
  ServerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ServerInfo& from);
  void MergeFrom(const ServerInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string zoneName = 1;
  inline bool has_zonename() const;
  inline void clear_zonename();
  static const int kZoneNameFieldNumber = 1;
  inline const ::std::string& zonename() const;
  inline void set_zonename(const ::std::string& value);
  inline void set_zonename(const char* value);
  inline void set_zonename(const char* value, size_t size);
  inline ::std::string* mutable_zonename();
  
  // required uint32 zoneId = 2;
  inline bool has_zoneid() const;
  inline void clear_zoneid();
  static const int kZoneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 zoneid() const;
  inline void set_zoneid(::google::protobuf::uint32 value);
  
  // required .IGameProto.ServerState serverState = 3;
  inline bool has_serverstate() const;
  inline void clear_serverstate();
  static const int kServerStateFieldNumber = 3;
  inline IGameProto::ServerState serverstate() const;
  inline void set_serverstate(IGameProto::ServerState value);
  
  // required string ip = 4;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 4;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  
  // required int32 port = 5;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 5;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);
  
  // repeated .IGameProto.RoleInfo rolesList = 6;
  inline int roleslist_size() const;
  inline void clear_roleslist();
  static const int kRolesListFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleInfo >& roleslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleInfo >* mutable_roleslist();
  inline const ::IGameProto::RoleInfo& roleslist(int index) const;
  inline ::IGameProto::RoleInfo* mutable_roleslist(int index);
  inline ::IGameProto::RoleInfo* add_roleslist();
  
  // optional uint64 lastUpdateTime = 99;
  inline bool has_lastupdatetime() const;
  inline void clear_lastupdatetime();
  static const int kLastUpdateTimeFieldNumber = 99;
  inline ::google::protobuf::uint64 lastupdatetime() const;
  inline void set_lastupdatetime(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* zonename_;
  static const ::std::string _default_zonename_;
  ::google::protobuf::uint32 zoneid_;
  int serverstate_;
  ::std::string* ip_;
  static const ::std::string _default_ip_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleInfo > roleslist_;
  ::google::protobuf::uint64 lastupdatetime_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ServerInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoginAck : public ::google::protobuf::Message {
 public:
  MsgLoginAck();
  virtual ~MsgLoginAck();
  
  MsgLoginAck(const MsgLoginAck& from);
  
  inline MsgLoginAck& operator=(const MsgLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginAck& default_instance();
  void Swap(MsgLoginAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgLoginAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoginAck& from);
  void MergeFrom(const MsgLoginAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // repeated .IGameProto.ServerInfo serversList = 2;
  inline int serverslist_size() const;
  inline void clear_serverslist();
  static const int kServersListFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ServerInfo >& serverslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ServerInfo >* mutable_serverslist();
  inline const ::IGameProto::ServerInfo& serverslist(int index) const;
  inline ::IGameProto::ServerInfo* mutable_serverslist(int index);
  inline ::IGameProto::ServerInfo* add_serverslist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::ServerInfo > serverslist_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLoginAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCreateRoleReq : public ::google::protobuf::Message {
 public:
  MsgCreateRoleReq();
  virtual ~MsgCreateRoleReq();
  
  MsgCreateRoleReq(const MsgCreateRoleReq& from);
  
  inline MsgCreateRoleReq& operator=(const MsgCreateRoleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateRoleReq& default_instance();
  void Swap(MsgCreateRoleReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCreateRoleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCreateRoleReq& from);
  void MergeFrom(const MsgCreateRoleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required .IGameProto.RoleInfo role = 2;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 2;
  inline const ::IGameProto::RoleInfo& role() const;
  inline ::IGameProto::RoleInfo* mutable_role();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 userid_;
  ::IGameProto::RoleInfo* role_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCreateRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCreateRoleAck : public ::google::protobuf::Message {
 public:
  MsgCreateRoleAck();
  virtual ~MsgCreateRoleAck();
  
  MsgCreateRoleAck(const MsgCreateRoleAck& from);
  
  inline MsgCreateRoleAck& operator=(const MsgCreateRoleAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateRoleAck& default_instance();
  void Swap(MsgCreateRoleAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCreateRoleAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCreateRoleAck& from);
  void MergeFrom(const MsgCreateRoleAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.RoleInfo role = 1;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 1;
  inline const ::IGameProto::RoleInfo& role() const;
  inline ::IGameProto::RoleInfo* mutable_role();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::RoleInfo* role_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCreateRoleAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgSelectRoleReq : public ::google::protobuf::Message {
 public:
  MsgSelectRoleReq();
  virtual ~MsgSelectRoleReq();
  
  MsgSelectRoleReq(const MsgSelectRoleReq& from);
  
  inline MsgSelectRoleReq& operator=(const MsgSelectRoleReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSelectRoleReq& default_instance();
  void Swap(MsgSelectRoleReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgSelectRoleReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSelectRoleReq& from);
  void MergeFrom(const MsgSelectRoleReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 userId = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 userid() const;
  inline void set_userid(::google::protobuf::uint32 value);
  
  // required uint32 roleId = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSelectRoleReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgSelectRoleAck : public ::google::protobuf::Message {
 public:
  MsgSelectRoleAck();
  virtual ~MsgSelectRoleAck();
  
  MsgSelectRoleAck(const MsgSelectRoleAck& from);
  
  inline MsgSelectRoleAck& operator=(const MsgSelectRoleAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSelectRoleAck& default_instance();
  void Swap(MsgSelectRoleAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgSelectRoleAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSelectRoleAck& from);
  void MergeFrom(const MsgSelectRoleAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.RoleInfo role = 1;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 1;
  inline const ::IGameProto::RoleInfo& role() const;
  inline ::IGameProto::RoleInfo* mutable_role();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::RoleInfo* role_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSelectRoleAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterSceneNtf : public ::google::protobuf::Message {
 public:
  MsgEnterSceneNtf();
  virtual ~MsgEnterSceneNtf();
  
  MsgEnterSceneNtf(const MsgEnterSceneNtf& from);
  
  inline MsgEnterSceneNtf& operator=(const MsgEnterSceneNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterSceneNtf& default_instance();
  void Swap(MsgEnterSceneNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterSceneNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterSceneNtf& from);
  void MergeFrom(const MsgEnterSceneNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // required .IGameProto.SceneRoleInfo roleInfo = 2;
  inline bool has_roleinfo() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 2;
  inline const ::IGameProto::SceneRoleInfo& roleinfo() const;
  inline ::IGameProto::SceneRoleInfo* mutable_roleinfo();
  
  // optional uint32 mapId = 3;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 3;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sceneid_;
  ::IGameProto::SceneRoleInfo* roleinfo_;
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterSceneNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterSceneReq : public ::google::protobuf::Message {
 public:
  MsgEnterSceneReq();
  virtual ~MsgEnterSceneReq();
  
  MsgEnterSceneReq(const MsgEnterSceneReq& from);
  
  inline MsgEnterSceneReq& operator=(const MsgEnterSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterSceneReq& default_instance();
  void Swap(MsgEnterSceneReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterSceneReq& from);
  void MergeFrom(const MsgEnterSceneReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sceneId = 1;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 1;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sceneid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgJumpSceneReq : public ::google::protobuf::Message {
 public:
  MsgJumpSceneReq();
  virtual ~MsgJumpSceneReq();
  
  MsgJumpSceneReq(const MsgJumpSceneReq& from);
  
  inline MsgJumpSceneReq& operator=(const MsgJumpSceneReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgJumpSceneReq& default_instance();
  void Swap(MsgJumpSceneReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgJumpSceneReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgJumpSceneReq& from);
  void MergeFrom(const MsgJumpSceneReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgJumpSceneReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgJumpSceneNtf : public ::google::protobuf::Message {
 public:
  MsgJumpSceneNtf();
  virtual ~MsgJumpSceneNtf();
  
  MsgJumpSceneNtf(const MsgJumpSceneNtf& from);
  
  inline MsgJumpSceneNtf& operator=(const MsgJumpSceneNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgJumpSceneNtf& default_instance();
  void Swap(MsgJumpSceneNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgJumpSceneNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgJumpSceneNtf& from);
  void MergeFrom(const MsgJumpSceneNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 mapId = 1;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 mapid() const;
  inline void set_mapid(::google::protobuf::uint32 value);
  
  // required uint32 sceneId = 2;
  inline bool has_sceneid() const;
  inline void clear_sceneid();
  static const int kSceneIdFieldNumber = 2;
  inline ::google::protobuf::uint32 sceneid() const;
  inline void set_sceneid(::google::protobuf::uint32 value);
  
  // optional float X = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float Y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);
  
  // optional uint32 cityId = 5;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIdFieldNumber = 5;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 mapid_;
  ::google::protobuf::uint32 sceneid_;
  float x_;
  float y_;
  ::google::protobuf::uint32 cityid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgJumpSceneNtf* default_instance_;
};
// -------------------------------------------------------------------

class SceneRoleInfo : public ::google::protobuf::Message {
 public:
  SceneRoleInfo();
  virtual ~SceneRoleInfo();
  
  SceneRoleInfo(const SceneRoleInfo& from);
  
  inline SceneRoleInfo& operator=(const SceneRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneRoleInfo& default_instance();
  void Swap(SceneRoleInfo* other);
  
  // implements Message ----------------------------------------------
  
  SceneRoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SceneRoleInfo& from);
  void MergeFrom(const SceneRoleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.RoleInfo role = 1;
  inline bool has_role() const;
  inline void clear_role();
  static const int kRoleFieldNumber = 1;
  inline const ::IGameProto::RoleInfo& role() const;
  inline ::IGameProto::RoleInfo* mutable_role();
  
  // required float X = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);
  
  // required float Y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);
  
  // required float direction = 4;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 4;
  inline float direction() const;
  inline void set_direction(float value);
  
  // required .IGameProto.ActionType actionType = 5;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 5;
  inline IGameProto::ActionType actiontype() const;
  inline void set_actiontype(IGameProto::ActionType value);
  
  // optional float to_x = 6;
  inline bool has_to_x() const;
  inline void clear_to_x();
  static const int kToXFieldNumber = 6;
  inline float to_x() const;
  inline void set_to_x(float value);
  
  // optional float to_y = 7;
  inline bool has_to_y() const;
  inline void clear_to_y();
  static const int kToYFieldNumber = 7;
  inline float to_y() const;
  inline void set_to_y(float value);
  
  // optional uint32 cityId = 8;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIdFieldNumber = 8;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);
  
  // optional uint32 roleMode = 9;
  inline bool has_rolemode() const;
  inline void clear_rolemode();
  static const int kRoleModeFieldNumber = 9;
  inline ::google::protobuf::uint32 rolemode() const;
  inline void set_rolemode(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::RoleInfo* role_;
  float x_;
  float y_;
  float direction_;
  int actiontype_;
  float to_x_;
  float to_y_;
  ::google::protobuf::uint32 cityid_;
  ::google::protobuf::uint32 rolemode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SceneRoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgRoleIntoVisionNtf : public ::google::protobuf::Message {
 public:
  MsgRoleIntoVisionNtf();
  virtual ~MsgRoleIntoVisionNtf();
  
  MsgRoleIntoVisionNtf(const MsgRoleIntoVisionNtf& from);
  
  inline MsgRoleIntoVisionNtf& operator=(const MsgRoleIntoVisionNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRoleIntoVisionNtf& default_instance();
  void Swap(MsgRoleIntoVisionNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgRoleIntoVisionNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRoleIntoVisionNtf& from);
  void MergeFrom(const MsgRoleIntoVisionNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.SceneRoleInfo rolesList = 1;
  inline int roleslist_size() const;
  inline void clear_roleslist();
  static const int kRolesListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::SceneRoleInfo >& roleslist() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::SceneRoleInfo >* mutable_roleslist();
  inline const ::IGameProto::SceneRoleInfo& roleslist(int index) const;
  inline ::IGameProto::SceneRoleInfo* mutable_roleslist(int index);
  inline ::IGameProto::SceneRoleInfo* add_roleslist();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::SceneRoleInfo > roleslist_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRoleIntoVisionNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgRoleOutofVisionNtf : public ::google::protobuf::Message {
 public:
  MsgRoleOutofVisionNtf();
  virtual ~MsgRoleOutofVisionNtf();
  
  MsgRoleOutofVisionNtf(const MsgRoleOutofVisionNtf& from);
  
  inline MsgRoleOutofVisionNtf& operator=(const MsgRoleOutofVisionNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRoleOutofVisionNtf& default_instance();
  void Swap(MsgRoleOutofVisionNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgRoleOutofVisionNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRoleOutofVisionNtf& from);
  void MergeFrom(const MsgRoleOutofVisionNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 roleId = 1;
  inline int roleid_size() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& roleid() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_roleid();
  inline ::google::protobuf::uint32 roleid(int index) const;
  inline void set_roleid(int index, ::google::protobuf::uint32 value);
  inline void add_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > roleid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRoleOutofVisionNtf* default_instance_;
};
// -------------------------------------------------------------------

class Pos : public ::google::protobuf::Message {
 public:
  Pos();
  virtual ~Pos();
  
  Pos(const Pos& from);
  
  inline Pos& operator=(const Pos& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Pos& default_instance();
  void Swap(Pos* other);
  
  // implements Message ----------------------------------------------
  
  Pos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pos& from);
  void MergeFrom(const Pos& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required float X = 1;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 1;
  inline float x() const;
  inline void set_x(float value);
  
  // required float Y = 2;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 2;
  inline float y() const;
  inline void set_y(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  float x_;
  float y_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Pos* default_instance_;
};
// -------------------------------------------------------------------

class MsgActionReq : public ::google::protobuf::Message {
 public:
  MsgActionReq();
  virtual ~MsgActionReq();
  
  MsgActionReq(const MsgActionReq& from);
  
  inline MsgActionReq& operator=(const MsgActionReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgActionReq& default_instance();
  void Swap(MsgActionReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgActionReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgActionReq& from);
  void MergeFrom(const MsgActionReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.ActionType actionType = 1;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 1;
  inline IGameProto::ActionType actiontype() const;
  inline void set_actiontype(IGameProto::ActionType value);
  
  // repeated .IGameProto.Pos poses = 2;
  inline int poses_size() const;
  inline void clear_poses();
  static const int kPosesFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >& poses() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >* mutable_poses();
  inline const ::IGameProto::Pos& poses(int index) const;
  inline ::IGameProto::Pos* mutable_poses(int index);
  inline ::IGameProto::Pos* add_poses();
  
  // required float direction = 3;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 3;
  inline float direction() const;
  inline void set_direction(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int actiontype_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos > poses_;
  float direction_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgActionReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgActionNtf : public ::google::protobuf::Message {
 public:
  MsgActionNtf();
  virtual ~MsgActionNtf();
  
  MsgActionNtf(const MsgActionNtf& from);
  
  inline MsgActionNtf& operator=(const MsgActionNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgActionNtf& default_instance();
  void Swap(MsgActionNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgActionNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgActionNtf& from);
  void MergeFrom(const MsgActionNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // required .IGameProto.ActionType actionType = 2;
  inline bool has_actiontype() const;
  inline void clear_actiontype();
  static const int kActionTypeFieldNumber = 2;
  inline IGameProto::ActionType actiontype() const;
  inline void set_actiontype(IGameProto::ActionType value);
  
  // repeated .IGameProto.Pos desPoses = 3;
  inline int desposes_size() const;
  inline void clear_desposes();
  static const int kDesPosesFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >& desposes() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >* mutable_desposes();
  inline const ::IGameProto::Pos& desposes(int index) const;
  inline ::IGameProto::Pos* mutable_desposes(int index);
  inline ::IGameProto::Pos* add_desposes();
  
  // required float direction = 4;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 4;
  inline float direction() const;
  inline void set_direction(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  int actiontype_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos > desposes_;
  float direction_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgActionNtf* default_instance_;
};
// -------------------------------------------------------------------

class HeroInfo : public ::google::protobuf::Message {
 public:
  HeroInfo();
  virtual ~HeroInfo();
  
  HeroInfo(const HeroInfo& from);
  
  inline HeroInfo& operator=(const HeroInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeroInfo& default_instance();
  void Swap(HeroInfo* other);
  
  // implements Message ----------------------------------------------
  
  HeroInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeroInfo& from);
  void MergeFrom(const HeroInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint64 id() const;
  inline void set_id(::google::protobuf::uint64 value);
  
  // optional int32 data_id = 2;
  inline bool has_data_id() const;
  inline void clear_data_id();
  static const int kDataIdFieldNumber = 2;
  inline ::google::protobuf::int32 data_id() const;
  inline void set_data_id(::google::protobuf::int32 value);
  
  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);
  
  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 data_id_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HeroInfo* default_instance_;
};
// -------------------------------------------------------------------

class FightAttr : public ::google::protobuf::Message {
 public:
  FightAttr();
  virtual ~FightAttr();
  
  FightAttr(const FightAttr& from);
  
  inline FightAttr& operator=(const FightAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FightAttr& default_instance();
  void Swap(FightAttr* other);
  
  // implements Message ----------------------------------------------
  
  FightAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightAttr& from);
  void MergeFrom(const FightAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 hp = 1;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 1;
  inline ::google::protobuf::int32 hp() const;
  inline void set_hp(::google::protobuf::int32 value);
  
  // optional int32 phy_attack = 2;
  inline bool has_phy_attack() const;
  inline void clear_phy_attack();
  static const int kPhyAttackFieldNumber = 2;
  inline ::google::protobuf::int32 phy_attack() const;
  inline void set_phy_attack(::google::protobuf::int32 value);
  
  // optional int32 phy_defence = 3;
  inline bool has_phy_defence() const;
  inline void clear_phy_defence();
  static const int kPhyDefenceFieldNumber = 3;
  inline ::google::protobuf::int32 phy_defence() const;
  inline void set_phy_defence(::google::protobuf::int32 value);
  
  // optional int32 magic_attack = 4;
  inline bool has_magic_attack() const;
  inline void clear_magic_attack();
  static const int kMagicAttackFieldNumber = 4;
  inline ::google::protobuf::int32 magic_attack() const;
  inline void set_magic_attack(::google::protobuf::int32 value);
  
  // optional int32 magic_defense = 5;
  inline bool has_magic_defense() const;
  inline void clear_magic_defense();
  static const int kMagicDefenseFieldNumber = 5;
  inline ::google::protobuf::int32 magic_defense() const;
  inline void set_magic_defense(::google::protobuf::int32 value);
  
  // optional int32 rage = 6;
  inline bool has_rage() const;
  inline void clear_rage();
  static const int kRageFieldNumber = 6;
  inline ::google::protobuf::int32 rage() const;
  inline void set_rage(::google::protobuf::int32 value);
  
  // optional int32 crit = 7;
  inline bool has_crit() const;
  inline void clear_crit();
  static const int kCritFieldNumber = 7;
  inline ::google::protobuf::int32 crit() const;
  inline void set_crit(::google::protobuf::int32 value);
  
  // optional int32 anti_crit = 8;
  inline bool has_anti_crit() const;
  inline void clear_anti_crit();
  static const int kAntiCritFieldNumber = 8;
  inline ::google::protobuf::int32 anti_crit() const;
  inline void set_anti_crit(::google::protobuf::int32 value);
  
  // optional int32 critdamage = 9;
  inline bool has_critdamage() const;
  inline void clear_critdamage();
  static const int kCritdamageFieldNumber = 9;
  inline ::google::protobuf::int32 critdamage() const;
  inline void set_critdamage(::google::protobuf::int32 value);
  
  // optional int32 hit_rate = 10;
  inline bool has_hit_rate() const;
  inline void clear_hit_rate();
  static const int kHitRateFieldNumber = 10;
  inline ::google::protobuf::int32 hit_rate() const;
  inline void set_hit_rate(::google::protobuf::int32 value);
  
  // optional int32 escape_rate = 11;
  inline bool has_escape_rate() const;
  inline void clear_escape_rate();
  static const int kEscapeRateFieldNumber = 11;
  inline ::google::protobuf::int32 escape_rate() const;
  inline void set_escape_rate(::google::protobuf::int32 value);
  
  // optional int32 break_parry = 12;
  inline bool has_break_parry() const;
  inline void clear_break_parry();
  static const int kBreakParryFieldNumber = 12;
  inline ::google::protobuf::int32 break_parry() const;
  inline void set_break_parry(::google::protobuf::int32 value);
  
  // optional int32 parry = 13;
  inline bool has_parry() const;
  inline void clear_parry();
  static const int kParryFieldNumber = 13;
  inline ::google::protobuf::int32 parry() const;
  inline void set_parry(::google::protobuf::int32 value);
  
  // optional int32 parry_anti_damage = 14;
  inline bool has_parry_anti_damage() const;
  inline void clear_parry_anti_damage();
  static const int kParryAntiDamageFieldNumber = 14;
  inline ::google::protobuf::int32 parry_anti_damage() const;
  inline void set_parry_anti_damage(::google::protobuf::int32 value);
  
  // optional int32 damage_inc = 15;
  inline bool has_damage_inc() const;
  inline void clear_damage_inc();
  static const int kDamageIncFieldNumber = 15;
  inline ::google::protobuf::int32 damage_inc() const;
  inline void set_damage_inc(::google::protobuf::int32 value);
  
  // optional int32 damage_dec = 16;
  inline bool has_damage_dec() const;
  inline void clear_damage_dec();
  static const int kDamageDecFieldNumber = 16;
  inline ::google::protobuf::int32 damage_dec() const;
  inline void set_damage_dec(::google::protobuf::int32 value);
  
  // optional int64 fighting = 17;
  inline bool has_fighting() const;
  inline void clear_fighting();
  static const int kFightingFieldNumber = 17;
  inline ::google::protobuf::int64 fighting() const;
  inline void set_fighting(::google::protobuf::int64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 hp_;
  ::google::protobuf::int32 phy_attack_;
  ::google::protobuf::int32 phy_defence_;
  ::google::protobuf::int32 magic_attack_;
  ::google::protobuf::int32 magic_defense_;
  ::google::protobuf::int32 rage_;
  ::google::protobuf::int32 crit_;
  ::google::protobuf::int32 anti_crit_;
  ::google::protobuf::int32 critdamage_;
  ::google::protobuf::int32 hit_rate_;
  ::google::protobuf::int32 escape_rate_;
  ::google::protobuf::int32 break_parry_;
  ::google::protobuf::int32 parry_;
  ::google::protobuf::int32 parry_anti_damage_;
  ::google::protobuf::int32 damage_inc_;
  ::google::protobuf::int32 damage_dec_;
  ::google::protobuf::int64 fighting_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FightAttr* default_instance_;
};
// -------------------------------------------------------------------

class BaseAttr : public ::google::protobuf::Message {
 public:
  BaseAttr();
  virtual ~BaseAttr();
  
  BaseAttr(const BaseAttr& from);
  
  inline BaseAttr& operator=(const BaseAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseAttr& default_instance();
  void Swap(BaseAttr* other);
  
  // implements Message ----------------------------------------------
  
  BaseAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaseAttr& from);
  void MergeFrom(const BaseAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint64 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint64 exp() const;
  inline void set_exp(::google::protobuf::uint64 value);
  
  // optional uint32 species = 6;
  inline bool has_species() const;
  inline void clear_species();
  static const int kSpeciesFieldNumber = 6;
  inline ::google::protobuf::uint32 species() const;
  inline void set_species(::google::protobuf::uint32 value);
  
  // optional uint32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);
  
  // optional uint32 in_form = 8;
  inline bool has_in_form() const;
  inline void clear_in_form();
  static const int kInFormFieldNumber = 8;
  inline ::google::protobuf::uint32 in_form() const;
  inline void set_in_form(::google::protobuf::uint32 value);
  
  // repeated string equips = 9;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_equips();
  inline const ::std::string& equips(int index) const;
  inline ::std::string* mutable_equips(int index);
  inline void set_equips(int index, const ::std::string& value);
  inline void set_equips(int index, const char* value);
  inline void set_equips(int index, const char* value, size_t size);
  inline ::std::string* add_equips();
  inline void add_equips(const ::std::string& value);
  inline void add_equips(const char* value);
  inline void add_equips(const char* value, size_t size);
  
  // optional .IGameProto.FightAttr fight_attr = 10;
  inline bool has_fight_attr() const;
  inline void clear_fight_attr();
  static const int kFightAttrFieldNumber = 10;
  inline const ::IGameProto::FightAttr& fight_attr() const;
  inline ::IGameProto::FightAttr* mutable_fight_attr();
  
  // optional uint32 country = 11;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 11;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // optional uint32 break_level = 12;
  inline bool has_break_level() const;
  inline void clear_break_level();
  static const int kBreakLevelFieldNumber = 12;
  inline ::google::protobuf::uint32 break_level() const;
  inline void set_break_level(::google::protobuf::uint32 value);
  
  // optional uint32 destiny_level = 13;
  inline bool has_destiny_level() const;
  inline void clear_destiny_level();
  static const int kDestinyLevelFieldNumber = 13;
  inline ::google::protobuf::uint32 destiny_level() const;
  inline void set_destiny_level(::google::protobuf::uint32 value);
  
  // optional uint64 unique_id = 14;
  inline bool has_unique_id() const;
  inline void clear_unique_id();
  static const int kUniqueIdFieldNumber = 14;
  inline ::google::protobuf::uint64 unique_id() const;
  inline void set_unique_id(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 species_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 in_form_;
  ::google::protobuf::RepeatedPtrField< ::std::string> equips_;
  ::IGameProto::FightAttr* fight_attr_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::uint32 break_level_;
  ::google::protobuf::uint32 destiny_level_;
  ::google::protobuf::uint64 unique_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BaseAttr* default_instance_;
};
// -------------------------------------------------------------------

class MsgHeroAttr : public ::google::protobuf::Message {
 public:
  MsgHeroAttr();
  virtual ~MsgHeroAttr();
  
  MsgHeroAttr(const MsgHeroAttr& from);
  
  inline MsgHeroAttr& operator=(const MsgHeroAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHeroAttr& default_instance();
  void Swap(MsgHeroAttr* other);
  
  // implements Message ----------------------------------------------
  
  MsgHeroAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgHeroAttr& from);
  void MergeFrom(const MsgHeroAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.BaseAttr hero_attrs = 1;
  inline int hero_attrs_size() const;
  inline void clear_hero_attrs();
  static const int kHeroAttrsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >& hero_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >* mutable_hero_attrs();
  inline const ::IGameProto::BaseAttr& hero_attrs(int index) const;
  inline ::IGameProto::BaseAttr* mutable_hero_attrs(int index);
  inline ::IGameProto::BaseAttr* add_hero_attrs();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr > hero_attrs_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgHeroAttr* default_instance_;
};
// -------------------------------------------------------------------

class TaskState : public ::google::protobuf::Message {
 public:
  TaskState();
  virtual ~TaskState();
  
  TaskState(const TaskState& from);
  
  inline TaskState& operator=(const TaskState& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const TaskState& default_instance();
  void Swap(TaskState* other);
  
  // implements Message ----------------------------------------------
  
  TaskState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TaskState& from);
  void MergeFrom(const TaskState& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional string progress = 2;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline const ::std::string& progress() const;
  inline void set_progress(const ::std::string& value);
  inline void set_progress(const char* value);
  inline void set_progress(const char* value, size_t size);
  inline ::std::string* mutable_progress();
  
  // optional uint32 state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline ::google::protobuf::uint32 state() const;
  inline void set_state(::google::protobuf::uint32 value);
  
  // optional uint32 accept_time = 4;
  inline bool has_accept_time() const;
  inline void clear_accept_time();
  static const int kAcceptTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 accept_time() const;
  inline void set_accept_time(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::std::string* progress_;
  static const ::std::string _default_progress_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 accept_time_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static TaskState* default_instance_;
};
// -------------------------------------------------------------------

class MsgTaskListNfy : public ::google::protobuf::Message {
 public:
  MsgTaskListNfy();
  virtual ~MsgTaskListNfy();
  
  MsgTaskListNfy(const MsgTaskListNfy& from);
  
  inline MsgTaskListNfy& operator=(const MsgTaskListNfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskListNfy& default_instance();
  void Swap(MsgTaskListNfy* other);
  
  // implements Message ----------------------------------------------
  
  MsgTaskListNfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTaskListNfy& from);
  void MergeFrom(const MsgTaskListNfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.TaskState task_list = 1;
  inline int task_list_size() const;
  inline void clear_task_list();
  static const int kTaskListFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >& task_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >* mutable_task_list();
  inline const ::IGameProto::TaskState& task_list(int index) const;
  inline ::IGameProto::TaskState* mutable_task_list(int index);
  inline ::IGameProto::TaskState* add_task_list();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState > task_list_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTaskListNfy* default_instance_;
};
// -------------------------------------------------------------------

class MsgAcceptTaskReq : public ::google::protobuf::Message {
 public:
  MsgAcceptTaskReq();
  virtual ~MsgAcceptTaskReq();
  
  MsgAcceptTaskReq(const MsgAcceptTaskReq& from);
  
  inline MsgAcceptTaskReq& operator=(const MsgAcceptTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAcceptTaskReq& default_instance();
  void Swap(MsgAcceptTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgAcceptTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAcceptTaskReq& from);
  void MergeFrom(const MsgAcceptTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 task_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAcceptTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgAcceptTaskAck : public ::google::protobuf::Message {
 public:
  MsgAcceptTaskAck();
  virtual ~MsgAcceptTaskAck();
  
  MsgAcceptTaskAck(const MsgAcceptTaskAck& from);
  
  inline MsgAcceptTaskAck& operator=(const MsgAcceptTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAcceptTaskAck& default_instance();
  void Swap(MsgAcceptTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgAcceptTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAcceptTaskAck& from);
  void MergeFrom(const MsgAcceptTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.TaskState task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::IGameProto::TaskState& task() const;
  inline ::IGameProto::TaskState* mutable_task();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::TaskState* task_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAcceptTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCommitTaskReq : public ::google::protobuf::Message {
 public:
  MsgCommitTaskReq();
  virtual ~MsgCommitTaskReq();
  
  MsgCommitTaskReq(const MsgCommitTaskReq& from);
  
  inline MsgCommitTaskReq& operator=(const MsgCommitTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommitTaskReq& default_instance();
  void Swap(MsgCommitTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCommitTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCommitTaskReq& from);
  void MergeFrom(const MsgCommitTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
  // repeated uint64 param = 2;
  inline int param_size() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >& param() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >* mutable_param();
  inline ::google::protobuf::uint64 param(int index) const;
  inline void set_param(int index, ::google::protobuf::uint64 value);
  inline void add_param(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > param_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCommitTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCommitTaskAck : public ::google::protobuf::Message {
 public:
  MsgCommitTaskAck();
  virtual ~MsgCommitTaskAck();
  
  MsgCommitTaskAck(const MsgCommitTaskAck& from);
  
  inline MsgCommitTaskAck& operator=(const MsgCommitTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommitTaskAck& default_instance();
  void Swap(MsgCommitTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCommitTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCommitTaskAck& from);
  void MergeFrom(const MsgCommitTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.TaskState task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::IGameProto::TaskState& task() const;
  inline ::IGameProto::TaskState* mutable_task();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::TaskState* task_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCommitTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgDropTaskReq : public ::google::protobuf::Message {
 public:
  MsgDropTaskReq();
  virtual ~MsgDropTaskReq();
  
  MsgDropTaskReq(const MsgDropTaskReq& from);
  
  inline MsgDropTaskReq& operator=(const MsgDropTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDropTaskReq& default_instance();
  void Swap(MsgDropTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgDropTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDropTaskReq& from);
  void MergeFrom(const MsgDropTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 task_id = 1;
  inline bool has_task_id() const;
  inline void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 task_id() const;
  inline void set_task_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 task_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDropTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgDropTaskAck : public ::google::protobuf::Message {
 public:
  MsgDropTaskAck();
  virtual ~MsgDropTaskAck();
  
  MsgDropTaskAck(const MsgDropTaskAck& from);
  
  inline MsgDropTaskAck& operator=(const MsgDropTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDropTaskAck& default_instance();
  void Swap(MsgDropTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgDropTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDropTaskAck& from);
  void MergeFrom(const MsgDropTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.TaskState task = 1;
  inline bool has_task() const;
  inline void clear_task();
  static const int kTaskFieldNumber = 1;
  inline const ::IGameProto::TaskState& task() const;
  inline ::IGameProto::TaskState* mutable_task();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::TaskState* task_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDropTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgTaskChangeNfy : public ::google::protobuf::Message {
 public:
  MsgTaskChangeNfy();
  virtual ~MsgTaskChangeNfy();
  
  MsgTaskChangeNfy(const MsgTaskChangeNfy& from);
  
  inline MsgTaskChangeNfy& operator=(const MsgTaskChangeNfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskChangeNfy& default_instance();
  void Swap(MsgTaskChangeNfy* other);
  
  // implements Message ----------------------------------------------
  
  MsgTaskChangeNfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTaskChangeNfy& from);
  void MergeFrom(const MsgTaskChangeNfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.TaskState task_changed = 1;
  inline int task_changed_size() const;
  inline void clear_task_changed();
  static const int kTaskChangedFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >& task_changed() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >* mutable_task_changed();
  inline const ::IGameProto::TaskState& task_changed(int index) const;
  inline ::IGameProto::TaskState* mutable_task_changed(int index);
  inline ::IGameProto::TaskState* add_task_changed();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState > task_changed_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTaskChangeNfy* default_instance_;
};
// -------------------------------------------------------------------

class MsgGmCmdReq : public ::google::protobuf::Message {
 public:
  MsgGmCmdReq();
  virtual ~MsgGmCmdReq();
  
  MsgGmCmdReq(const MsgGmCmdReq& from);
  
  inline MsgGmCmdReq& operator=(const MsgGmCmdReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGmCmdReq& default_instance();
  void Swap(MsgGmCmdReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgGmCmdReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGmCmdReq& from);
  void MergeFrom(const MsgGmCmdReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline const ::std::string& cmd() const;
  inline void set_cmd(const ::std::string& value);
  inline void set_cmd(const char* value);
  inline void set_cmd(const char* value, size_t size);
  inline ::std::string* mutable_cmd();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* cmd_;
  static const ::std::string _default_cmd_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGmCmdReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgGmCmdAck : public ::google::protobuf::Message {
 public:
  MsgGmCmdAck();
  virtual ~MsgGmCmdAck();
  
  MsgGmCmdAck(const MsgGmCmdAck& from);
  
  inline MsgGmCmdAck& operator=(const MsgGmCmdAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGmCmdAck& default_instance();
  void Swap(MsgGmCmdAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgGmCmdAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGmCmdAck& from);
  void MergeFrom(const MsgGmCmdAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string param = 2;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 2;
  inline const ::std::string& param() const;
  inline void set_param(const ::std::string& value);
  inline void set_param(const char* value);
  inline void set_param(const char* value, size_t size);
  inline ::std::string* mutable_param();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* param_;
  static const ::std::string _default_param_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGmCmdAck* default_instance_;
};
// -------------------------------------------------------------------

class FormPair : public ::google::protobuf::Message {
 public:
  FormPair();
  virtual ~FormPair();
  
  FormPair(const FormPair& from);
  
  inline FormPair& operator=(const FormPair& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FormPair& default_instance();
  void Swap(FormPair* other);
  
  // implements Message ----------------------------------------------
  
  FormPair* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FormPair& from);
  void MergeFrom(const FormPair& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 pos = 1;
  inline bool has_pos() const;
  inline void clear_pos();
  static const int kPosFieldNumber = 1;
  inline ::google::protobuf::uint32 pos() const;
  inline void set_pos(::google::protobuf::uint32 value);
  
  // optional uint64 uniqueId = 2;
  inline bool has_uniqueid() const;
  inline void clear_uniqueid();
  static const int kUniqueIdFieldNumber = 2;
  inline ::google::protobuf::uint64 uniqueid() const;
  inline void set_uniqueid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint64 uniqueid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FormPair* default_instance_;
};
// -------------------------------------------------------------------

class Formation : public ::google::protobuf::Message {
 public:
  Formation();
  virtual ~Formation();
  
  Formation(const Formation& from);
  
  inline Formation& operator=(const Formation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Formation& default_instance();
  void Swap(Formation* other);
  
  // implements Message ----------------------------------------------
  
  Formation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Formation& from);
  void MergeFrom(const Formation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 formId = 1;
  inline bool has_formid() const;
  inline void clear_formid();
  static const int kFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 formid() const;
  inline void set_formid(::google::protobuf::uint32 value);
  
  // repeated .IGameProto.FormPair form = 2;
  inline int form_size() const;
  inline void clear_form();
  static const int kFormFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >& form() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >* mutable_form();
  inline const ::IGameProto::FormPair& form(int index) const;
  inline ::IGameProto::FormPair* mutable_form(int index);
  inline ::IGameProto::FormPair* add_form();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 formid_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair > form_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static Formation* default_instance_;
};
// -------------------------------------------------------------------

class MsgSaveFormation : public ::google::protobuf::Message {
 public:
  MsgSaveFormation();
  virtual ~MsgSaveFormation();
  
  MsgSaveFormation(const MsgSaveFormation& from);
  
  inline MsgSaveFormation& operator=(const MsgSaveFormation& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSaveFormation& default_instance();
  void Swap(MsgSaveFormation* other);
  
  // implements Message ----------------------------------------------
  
  MsgSaveFormation* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSaveFormation& from);
  void MergeFrom(const MsgSaveFormation& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.Formation form = 1;
  inline bool has_form() const;
  inline void clear_form();
  static const int kFormFieldNumber = 1;
  inline const ::IGameProto::Formation& form() const;
  inline ::IGameProto::Formation* mutable_form();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::Formation* form_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSaveFormation* default_instance_;
};
// -------------------------------------------------------------------

class MsgSaveFormationAck : public ::google::protobuf::Message {
 public:
  MsgSaveFormationAck();
  virtual ~MsgSaveFormationAck();
  
  MsgSaveFormationAck(const MsgSaveFormationAck& from);
  
  inline MsgSaveFormationAck& operator=(const MsgSaveFormationAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSaveFormationAck& default_instance();
  void Swap(MsgSaveFormationAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgSaveFormationAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSaveFormationAck& from);
  void MergeFrom(const MsgSaveFormationAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 formId = 1;
  inline bool has_formid() const;
  inline void clear_formid();
  static const int kFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 formid() const;
  inline void set_formid(::google::protobuf::uint32 value);
  
  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 formid_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSaveFormationAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgFormationNty : public ::google::protobuf::Message {
 public:
  MsgFormationNty();
  virtual ~MsgFormationNty();
  
  MsgFormationNty(const MsgFormationNty& from);
  
  inline MsgFormationNty& operator=(const MsgFormationNty& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFormationNty& default_instance();
  void Swap(MsgFormationNty* other);
  
  // implements Message ----------------------------------------------
  
  MsgFormationNty* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFormationNty& from);
  void MergeFrom(const MsgFormationNty& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 currentFormId = 1;
  inline bool has_currentformid() const;
  inline void clear_currentformid();
  static const int kCurrentFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 currentformid() const;
  inline void set_currentformid(::google::protobuf::uint32 value);
  
  // repeated .IGameProto.Formation forms = 2;
  inline int forms_size() const;
  inline void clear_forms();
  static const int kFormsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Formation >& forms() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Formation >* mutable_forms();
  inline const ::IGameProto::Formation& forms(int index) const;
  inline ::IGameProto::Formation* mutable_forms(int index);
  inline ::IGameProto::Formation* add_forms();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 currentformid_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::Formation > forms_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFormationNty* default_instance_;
};
// -------------------------------------------------------------------

class MsgAttrChangeNfy : public ::google::protobuf::Message {
 public:
  MsgAttrChangeNfy();
  virtual ~MsgAttrChangeNfy();
  
  MsgAttrChangeNfy(const MsgAttrChangeNfy& from);
  
  inline MsgAttrChangeNfy& operator=(const MsgAttrChangeNfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAttrChangeNfy& default_instance();
  void Swap(MsgAttrChangeNfy* other);
  
  // implements Message ----------------------------------------------
  
  MsgAttrChangeNfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAttrChangeNfy& from);
  void MergeFrom(const MsgAttrChangeNfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.BaseAttr attr = 1;
  inline bool has_attr() const;
  inline void clear_attr();
  static const int kAttrFieldNumber = 1;
  inline const ::IGameProto::BaseAttr& attr() const;
  inline ::IGameProto::BaseAttr* mutable_attr();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::BaseAttr* attr_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAttrChangeNfy* default_instance_;
};
// -------------------------------------------------------------------

class MonsterUnit : public ::google::protobuf::Message {
 public:
  MonsterUnit();
  virtual ~MonsterUnit();
  
  MonsterUnit(const MonsterUnit& from);
  
  inline MonsterUnit& operator=(const MonsterUnit& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterUnit& default_instance();
  void Swap(MonsterUnit* other);
  
  // implements Message ----------------------------------------------
  
  MonsterUnit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonsterUnit& from);
  void MergeFrom(const MonsterUnit& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 monster_id = 1;
  inline bool has_monster_id() const;
  inline void clear_monster_id();
  static const int kMonsterIdFieldNumber = 1;
  inline ::google::protobuf::uint32 monster_id() const;
  inline void set_monster_id(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 monster_id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MonsterUnit* default_instance_;
};
// -------------------------------------------------------------------

class MsgKillMonster : public ::google::protobuf::Message {
 public:
  MsgKillMonster();
  virtual ~MsgKillMonster();
  
  MsgKillMonster(const MsgKillMonster& from);
  
  inline MsgKillMonster& operator=(const MsgKillMonster& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgKillMonster& default_instance();
  void Swap(MsgKillMonster* other);
  
  // implements Message ----------------------------------------------
  
  MsgKillMonster* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgKillMonster& from);
  void MergeFrom(const MsgKillMonster& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.MonsterUnit killed_monsters = 1;
  inline int killed_monsters_size() const;
  inline void clear_killed_monsters();
  static const int kKilledMonstersFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterUnit >& killed_monsters() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterUnit >* mutable_killed_monsters();
  inline const ::IGameProto::MonsterUnit& killed_monsters(int index) const;
  inline ::IGameProto::MonsterUnit* mutable_killed_monsters(int index);
  inline ::IGameProto::MonsterUnit* add_killed_monsters();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterUnit > killed_monsters_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgKillMonster* default_instance_;
};
// -------------------------------------------------------------------

class ItemBaseInfo : public ::google::protobuf::Message {
 public:
  ItemBaseInfo();
  virtual ~ItemBaseInfo();
  
  ItemBaseInfo(const ItemBaseInfo& from);
  
  inline ItemBaseInfo& operator=(const ItemBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBaseInfo& default_instance();
  void Swap(ItemBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  ItemBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBaseInfo& from);
  void MergeFrom(const ItemBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 is_wear = 3;
  inline bool has_is_wear() const;
  inline void clear_is_wear();
  static const int kIsWearFieldNumber = 3;
  inline ::google::protobuf::uint32 is_wear() const;
  inline void set_is_wear(::google::protobuf::uint32 value);
  
  // optional uint64 unique_id = 4;
  inline bool has_unique_id() const;
  inline void clear_unique_id();
  static const int kUniqueIdFieldNumber = 4;
  inline ::google::protobuf::uint64 unique_id() const;
  inline void set_unique_id(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 is_wear_;
  ::google::protobuf::uint64 unique_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ItemBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemExtraInfo : public ::google::protobuf::Message {
 public:
  ItemExtraInfo();
  virtual ~ItemExtraInfo();
  
  ItemExtraInfo(const ItemExtraInfo& from);
  
  inline ItemExtraInfo& operator=(const ItemExtraInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemExtraInfo& default_instance();
  void Swap(ItemExtraInfo* other);
  
  // implements Message ----------------------------------------------
  
  ItemExtraInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemExtraInfo& from);
  void MergeFrom(const ItemExtraInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 fighting = 1;
  inline bool has_fighting() const;
  inline void clear_fighting();
  static const int kFightingFieldNumber = 1;
  inline ::google::protobuf::uint32 fighting() const;
  inline void set_fighting(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 fighting_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ItemExtraInfo* default_instance_;
};
// -------------------------------------------------------------------

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();
  
  ItemInfo(const ItemInfo& from);
  
  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();
  void Swap(ItemInfo* other);
  
  // implements Message ----------------------------------------------
  
  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.ItemBaseInfo base_info = 1;
  inline bool has_base_info() const;
  inline void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  inline const ::IGameProto::ItemBaseInfo& base_info() const;
  inline ::IGameProto::ItemBaseInfo* mutable_base_info();
  
  // optional .IGameProto.ItemExtraInfo extra_info = 2;
  inline bool has_extra_info() const;
  inline void clear_extra_info();
  static const int kExtraInfoFieldNumber = 2;
  inline const ::IGameProto::ItemExtraInfo& extra_info() const;
  inline ::IGameProto::ItemExtraInfo* mutable_extra_info();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::ItemBaseInfo* base_info_;
  ::IGameProto::ItemExtraInfo* extra_info_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetBagItemsNfy : public ::google::protobuf::Message {
 public:
  MsgGetBagItemsNfy();
  virtual ~MsgGetBagItemsNfy();
  
  MsgGetBagItemsNfy(const MsgGetBagItemsNfy& from);
  
  inline MsgGetBagItemsNfy& operator=(const MsgGetBagItemsNfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetBagItemsNfy& default_instance();
  void Swap(MsgGetBagItemsNfy* other);
  
  // implements Message ----------------------------------------------
  
  MsgGetBagItemsNfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetBagItemsNfy& from);
  void MergeFrom(const MsgGetBagItemsNfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.ItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >* mutable_items();
  inline const ::IGameProto::ItemInfo& items(int index) const;
  inline ::IGameProto::ItemInfo* mutable_items(int index);
  inline ::IGameProto::ItemInfo* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo > items_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGetBagItemsNfy* default_instance_;
};
// -------------------------------------------------------------------

class MsgItemsChangedNfy : public ::google::protobuf::Message {
 public:
  MsgItemsChangedNfy();
  virtual ~MsgItemsChangedNfy();
  
  MsgItemsChangedNfy(const MsgItemsChangedNfy& from);
  
  inline MsgItemsChangedNfy& operator=(const MsgItemsChangedNfy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItemsChangedNfy& default_instance();
  void Swap(MsgItemsChangedNfy* other);
  
  // implements Message ----------------------------------------------
  
  MsgItemsChangedNfy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgItemsChangedNfy& from);
  void MergeFrom(const MsgItemsChangedNfy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.ItemInfo items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >& items() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >* mutable_items();
  inline const ::IGameProto::ItemInfo& items(int index) const;
  inline ::IGameProto::ItemInfo* mutable_items(int index);
  inline ::IGameProto::ItemInfo* add_items();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo > items_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgItemsChangedNfy* default_instance_;
};
// -------------------------------------------------------------------

class MsgUseBagItemReq : public ::google::protobuf::Message {
 public:
  MsgUseBagItemReq();
  virtual ~MsgUseBagItemReq();
  
  MsgUseBagItemReq(const MsgUseBagItemReq& from);
  
  inline MsgUseBagItemReq& operator=(const MsgUseBagItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseBagItemReq& default_instance();
  void Swap(MsgUseBagItemReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgUseBagItemReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUseBagItemReq& from);
  void MergeFrom(const MsgUseBagItemReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 unique_id = 1;
  inline bool has_unique_id() const;
  inline void clear_unique_id();
  static const int kUniqueIdFieldNumber = 1;
  inline ::google::protobuf::uint64 unique_id() const;
  inline void set_unique_id(::google::protobuf::uint64 value);
  
  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 unique_id_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUseBagItemReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgUseBagItemAck : public ::google::protobuf::Message {
 public:
  MsgUseBagItemAck();
  virtual ~MsgUseBagItemAck();
  
  MsgUseBagItemAck(const MsgUseBagItemAck& from);
  
  inline MsgUseBagItemAck& operator=(const MsgUseBagItemAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseBagItemAck& default_instance();
  void Swap(MsgUseBagItemAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgUseBagItemAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUseBagItemAck& from);
  void MergeFrom(const MsgUseBagItemAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUseBagItemAck* default_instance_;
};
// -------------------------------------------------------------------

class FightSide : public ::google::protobuf::Message {
 public:
  FightSide();
  virtual ~FightSide();
  
  FightSide(const FightSide& from);
  
  inline FightSide& operator=(const FightSide& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FightSide& default_instance();
  void Swap(FightSide* other);
  
  // implements Message ----------------------------------------------
  
  FightSide* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FightSide& from);
  void MergeFrom(const FightSide& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.BaseAttr hero_attrs = 1;
  inline int hero_attrs_size() const;
  inline void clear_hero_attrs();
  static const int kHeroAttrsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >& hero_attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >* mutable_hero_attrs();
  inline const ::IGameProto::BaseAttr& hero_attrs(int index) const;
  inline ::IGameProto::BaseAttr* mutable_hero_attrs(int index);
  inline ::IGameProto::BaseAttr* add_hero_attrs();
  
  // repeated .IGameProto.FormPair forms = 2;
  inline int forms_size() const;
  inline void clear_forms();
  static const int kFormsFieldNumber = 2;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >& forms() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >* mutable_forms();
  inline const ::IGameProto::FormPair& forms(int index) const;
  inline ::IGameProto::FormPair* mutable_forms(int index);
  inline ::IGameProto::FormPair* add_forms();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr > hero_attrs_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair > forms_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static FightSide* default_instance_;
};
// -------------------------------------------------------------------

class MsgMonsterAgainstReq : public ::google::protobuf::Message {
 public:
  MsgMonsterAgainstReq();
  virtual ~MsgMonsterAgainstReq();
  
  MsgMonsterAgainstReq(const MsgMonsterAgainstReq& from);
  
  inline MsgMonsterAgainstReq& operator=(const MsgMonsterAgainstReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMonsterAgainstReq& default_instance();
  void Swap(MsgMonsterAgainstReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgMonsterAgainstReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMonsterAgainstReq& from);
  void MergeFrom(const MsgMonsterAgainstReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 againstFormId = 1;
  inline bool has_againstformid() const;
  inline void clear_againstformid();
  static const int kAgainstFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 againstformid() const;
  inline void set_againstformid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 againstformid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMonsterAgainstReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgMonsterAgainstAck : public ::google::protobuf::Message {
 public:
  MsgMonsterAgainstAck();
  virtual ~MsgMonsterAgainstAck();
  
  MsgMonsterAgainstAck(const MsgMonsterAgainstAck& from);
  
  inline MsgMonsterAgainstAck& operator=(const MsgMonsterAgainstAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMonsterAgainstAck& default_instance();
  void Swap(MsgMonsterAgainstAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgMonsterAgainstAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMonsterAgainstAck& from);
  void MergeFrom(const MsgMonsterAgainstAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 againstFormId = 1;
  inline bool has_againstformid() const;
  inline void clear_againstformid();
  static const int kAgainstFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 againstformid() const;
  inline void set_againstformid(::google::protobuf::uint32 value);
  
  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required uint64 fightId = 3;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 3;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required .IGameProto.FightSide enemySide = 4;
  inline bool has_enemyside() const;
  inline void clear_enemyside();
  static const int kEnemySideFieldNumber = 4;
  inline const ::IGameProto::FightSide& enemyside() const;
  inline ::IGameProto::FightSide* mutable_enemyside();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 againstformid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 fightid_;
  ::IGameProto::FightSide* enemyside_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMonsterAgainstAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgPvpReq : public ::google::protobuf::Message {
 public:
  MsgPvpReq();
  virtual ~MsgPvpReq();
  
  MsgPvpReq(const MsgPvpReq& from);
  
  inline MsgPvpReq& operator=(const MsgPvpReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPvpReq& default_instance();
  void Swap(MsgPvpReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgPvpReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPvpReq& from);
  void MergeFrom(const MsgPvpReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPvpReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPvpAck : public ::google::protobuf::Message {
 public:
  MsgPvpAck();
  virtual ~MsgPvpAck();
  
  MsgPvpAck(const MsgPvpAck& from);
  
  inline MsgPvpAck& operator=(const MsgPvpAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPvpAck& default_instance();
  void Swap(MsgPvpAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgPvpAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPvpAck& from);
  void MergeFrom(const MsgPvpAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPvpAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgPvpCancelReq : public ::google::protobuf::Message {
 public:
  MsgPvpCancelReq();
  virtual ~MsgPvpCancelReq();
  
  MsgPvpCancelReq(const MsgPvpCancelReq& from);
  
  inline MsgPvpCancelReq& operator=(const MsgPvpCancelReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPvpCancelReq& default_instance();
  void Swap(MsgPvpCancelReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgPvpCancelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPvpCancelReq& from);
  void MergeFrom(const MsgPvpCancelReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPvpCancelReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPvpNtf : public ::google::protobuf::Message {
 public:
  MsgPvpNtf();
  virtual ~MsgPvpNtf();
  
  MsgPvpNtf(const MsgPvpNtf& from);
  
  inline MsgPvpNtf& operator=(const MsgPvpNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPvpNtf& default_instance();
  void Swap(MsgPvpNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgPvpNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPvpNtf& from);
  void MergeFrom(const MsgPvpNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required uint64 fightId = 2;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 2;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required .IGameProto.FightSide enemySide = 3;
  inline bool has_enemyside() const;
  inline void clear_enemyside();
  static const int kEnemySideFieldNumber = 3;
  inline const ::IGameProto::FightSide& enemyside() const;
  inline ::IGameProto::FightSide* mutable_enemyside();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 fightid_;
  ::IGameProto::FightSide* enemyside_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPvpNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoadFightResProgressReq : public ::google::protobuf::Message {
 public:
  MsgLoadFightResProgressReq();
  virtual ~MsgLoadFightResProgressReq();
  
  MsgLoadFightResProgressReq(const MsgLoadFightResProgressReq& from);
  
  inline MsgLoadFightResProgressReq& operator=(const MsgLoadFightResProgressReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoadFightResProgressReq& default_instance();
  void Swap(MsgLoadFightResProgressReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgLoadFightResProgressReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoadFightResProgressReq& from);
  void MergeFrom(const MsgLoadFightResProgressReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required int32 progress = 2;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 2;
  inline ::google::protobuf::int32 progress() const;
  inline void set_progress(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  ::google::protobuf::int32 progress_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLoadFightResProgressReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgLoadFightResProgressNtf : public ::google::protobuf::Message {
 public:
  MsgLoadFightResProgressNtf();
  virtual ~MsgLoadFightResProgressNtf();
  
  MsgLoadFightResProgressNtf(const MsgLoadFightResProgressNtf& from);
  
  inline MsgLoadFightResProgressNtf& operator=(const MsgLoadFightResProgressNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoadFightResProgressNtf& default_instance();
  void Swap(MsgLoadFightResProgressNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgLoadFightResProgressNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLoadFightResProgressNtf& from);
  void MergeFrom(const MsgLoadFightResProgressNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required uint32 roleId = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // required int32 progress = 3;
  inline bool has_progress() const;
  inline void clear_progress();
  static const int kProgressFieldNumber = 3;
  inline ::google::protobuf::int32 progress() const;
  inline void set_progress(::google::protobuf::int32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 progress_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLoadFightResProgressNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgFightStartReq : public ::google::protobuf::Message {
 public:
  MsgFightStartReq();
  virtual ~MsgFightStartReq();
  
  MsgFightStartReq(const MsgFightStartReq& from);
  
  inline MsgFightStartReq& operator=(const MsgFightStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFightStartReq& default_instance();
  void Swap(MsgFightStartReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgFightStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFightStartReq& from);
  void MergeFrom(const MsgFightStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFightStartReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgFightStartNtf : public ::google::protobuf::Message {
 public:
  MsgFightStartNtf();
  virtual ~MsgFightStartNtf();
  
  MsgFightStartNtf(const MsgFightStartNtf& from);
  
  inline MsgFightStartNtf& operator=(const MsgFightStartNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFightStartNtf& default_instance();
  void Swap(MsgFightStartNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgFightStartNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFightStartNtf& from);
  void MergeFrom(const MsgFightStartNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFightStartNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgFightEndReq : public ::google::protobuf::Message {
 public:
  MsgFightEndReq();
  virtual ~MsgFightEndReq();
  
  MsgFightEndReq(const MsgFightEndReq& from);
  
  inline MsgFightEndReq& operator=(const MsgFightEndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFightEndReq& default_instance();
  void Swap(MsgFightEndReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgFightEndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFightEndReq& from);
  void MergeFrom(const MsgFightEndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFightEndReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgFightEndNtf : public ::google::protobuf::Message {
 public:
  MsgFightEndNtf();
  virtual ~MsgFightEndNtf();
  
  MsgFightEndNtf(const MsgFightEndNtf& from);
  
  inline MsgFightEndNtf& operator=(const MsgFightEndNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFightEndNtf& default_instance();
  void Swap(MsgFightEndNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgFightEndNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgFightEndNtf& from);
  void MergeFrom(const MsgFightEndNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgFightEndNtf* default_instance_;
};
// -------------------------------------------------------------------

class SkillInfo : public ::google::protobuf::Message {
 public:
  SkillInfo();
  virtual ~SkillInfo();
  
  SkillInfo(const SkillInfo& from);
  
  inline SkillInfo& operator=(const SkillInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SkillInfo& default_instance();
  void Swap(SkillInfo* other);
  
  // implements Message ----------------------------------------------
  
  SkillInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SkillInfo& from);
  void MergeFrom(const SkillInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 src_hero_unique_id = 1;
  inline bool has_src_hero_unique_id() const;
  inline void clear_src_hero_unique_id();
  static const int kSrcHeroUniqueIdFieldNumber = 1;
  inline ::google::protobuf::uint64 src_hero_unique_id() const;
  inline void set_src_hero_unique_id(::google::protobuf::uint64 value);
  
  // required uint32 skillId = 2;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 2;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // repeated uint32 posIds = 3;
  inline int posids_size() const;
  inline void clear_posids();
  static const int kPosIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posids();
  inline ::google::protobuf::uint32 posids(int index) const;
  inline void set_posids(int index, ::google::protobuf::uint32 value);
  inline void add_posids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 src_hero_unique_id_;
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posids_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SkillInfo* default_instance_;
};
// -------------------------------------------------------------------

class DamageInfo : public ::google::protobuf::Message {
 public:
  DamageInfo();
  virtual ~DamageInfo();
  
  DamageInfo(const DamageInfo& from);
  
  inline DamageInfo& operator=(const DamageInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DamageInfo& default_instance();
  void Swap(DamageInfo* other);
  
  // implements Message ----------------------------------------------
  
  DamageInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DamageInfo& from);
  void MergeFrom(const DamageInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 src_hero_unique_id = 1;
  inline bool has_src_hero_unique_id() const;
  inline void clear_src_hero_unique_id();
  static const int kSrcHeroUniqueIdFieldNumber = 1;
  inline ::google::protobuf::uint64 src_hero_unique_id() const;
  inline void set_src_hero_unique_id(::google::protobuf::uint64 value);
  
  // required uint32 damageId = 2;
  inline bool has_damageid() const;
  inline void clear_damageid();
  static const int kDamageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 damageid() const;
  inline void set_damageid(::google::protobuf::uint32 value);
  
  // repeated uint32 posIds = 3;
  inline int posids_size() const;
  inline void clear_posids();
  static const int kPosIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posids();
  inline ::google::protobuf::uint32 posids(int index) const;
  inline void set_posids(int index, ::google::protobuf::uint32 value);
  inline void add_posids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 src_hero_unique_id_;
  ::google::protobuf::uint32 damageid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posids_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static DamageInfo* default_instance_;
};
// -------------------------------------------------------------------

class BuffInfo : public ::google::protobuf::Message {
 public:
  BuffInfo();
  virtual ~BuffInfo();
  
  BuffInfo(const BuffInfo& from);
  
  inline BuffInfo& operator=(const BuffInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BuffInfo& default_instance();
  void Swap(BuffInfo* other);
  
  // implements Message ----------------------------------------------
  
  BuffInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuffInfo& from);
  void MergeFrom(const BuffInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 src_hero_unique_id = 1;
  inline bool has_src_hero_unique_id() const;
  inline void clear_src_hero_unique_id();
  static const int kSrcHeroUniqueIdFieldNumber = 1;
  inline ::google::protobuf::uint64 src_hero_unique_id() const;
  inline void set_src_hero_unique_id(::google::protobuf::uint64 value);
  
  // required uint32 buffId = 2;
  inline bool has_buffid() const;
  inline void clear_buffid();
  static const int kBuffIdFieldNumber = 2;
  inline ::google::protobuf::uint32 buffid() const;
  inline void set_buffid(::google::protobuf::uint32 value);
  
  // repeated uint32 posIds = 3;
  inline int posids_size() const;
  inline void clear_posids();
  static const int kPosIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& posids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_posids();
  inline ::google::protobuf::uint32 posids(int index) const;
  inline void set_posids(int index, ::google::protobuf::uint32 value);
  inline void add_posids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 src_hero_unique_id_;
  ::google::protobuf::uint32 buffid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > posids_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static BuffInfo* default_instance_;
};
// -------------------------------------------------------------------

class AttackInfo : public ::google::protobuf::Message {
 public:
  AttackInfo();
  virtual ~AttackInfo();
  
  AttackInfo(const AttackInfo& from);
  
  inline AttackInfo& operator=(const AttackInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AttackInfo& default_instance();
  void Swap(AttackInfo* other);
  
  // implements Message ----------------------------------------------
  
  AttackInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttackInfo& from);
  void MergeFrom(const AttackInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 attackId = 1;
  inline bool has_attackid() const;
  inline void clear_attackid();
  static const int kAttackIdFieldNumber = 1;
  inline ::google::protobuf::uint32 attackid() const;
  inline void set_attackid(::google::protobuf::uint32 value);
  
  // required .IGameProto.SkillInfo skills = 2;
  inline bool has_skills() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 2;
  inline const ::IGameProto::SkillInfo& skills() const;
  inline ::IGameProto::SkillInfo* mutable_skills();
  
  // repeated .IGameProto.DamageInfo damages = 3;
  inline int damages_size() const;
  inline void clear_damages();
  static const int kDamagesFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::DamageInfo >& damages() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::DamageInfo >* mutable_damages();
  inline const ::IGameProto::DamageInfo& damages(int index) const;
  inline ::IGameProto::DamageInfo* mutable_damages(int index);
  inline ::IGameProto::DamageInfo* add_damages();
  
  // repeated .IGameProto.BuffInfo buffs = 4;
  inline int buffs_size() const;
  inline void clear_buffs();
  static const int kBuffsFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BuffInfo >& buffs() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BuffInfo >* mutable_buffs();
  inline const ::IGameProto::BuffInfo& buffs(int index) const;
  inline ::IGameProto::BuffInfo* mutable_buffs(int index);
  inline ::IGameProto::BuffInfo* add_buffs();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 attackid_;
  ::IGameProto::SkillInfo* skills_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::DamageInfo > damages_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::BuffInfo > buffs_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AttackInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgAttackReq : public ::google::protobuf::Message {
 public:
  MsgAttackReq();
  virtual ~MsgAttackReq();
  
  MsgAttackReq(const MsgAttackReq& from);
  
  inline MsgAttackReq& operator=(const MsgAttackReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAttackReq& default_instance();
  void Swap(MsgAttackReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgAttackReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAttackReq& from);
  void MergeFrom(const MsgAttackReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required .IGameProto.AttackInfo attackInfo = 2;
  inline bool has_attackinfo() const;
  inline void clear_attackinfo();
  static const int kAttackInfoFieldNumber = 2;
  inline const ::IGameProto::AttackInfo& attackinfo() const;
  inline ::IGameProto::AttackInfo* mutable_attackinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  ::IGameProto::AttackInfo* attackinfo_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAttackReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgAttackAck : public ::google::protobuf::Message {
 public:
  MsgAttackAck();
  virtual ~MsgAttackAck();
  
  MsgAttackAck(const MsgAttackAck& from);
  
  inline MsgAttackAck& operator=(const MsgAttackAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAttackAck& default_instance();
  void Swap(MsgAttackAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgAttackAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAttackAck& from);
  void MergeFrom(const MsgAttackAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 attackId = 1;
  inline bool has_attackid() const;
  inline void clear_attackid();
  static const int kAttackIdFieldNumber = 1;
  inline ::google::protobuf::uint32 attackid() const;
  inline void set_attackid(::google::protobuf::uint32 value);
  
  // required uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 attackid_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAttackAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgAttackNtf : public ::google::protobuf::Message {
 public:
  MsgAttackNtf();
  virtual ~MsgAttackNtf();
  
  MsgAttackNtf(const MsgAttackNtf& from);
  
  inline MsgAttackNtf& operator=(const MsgAttackNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAttackNtf& default_instance();
  void Swap(MsgAttackNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgAttackNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAttackNtf& from);
  void MergeFrom(const MsgAttackNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .IGameProto.AttackInfo attackInfo = 1;
  inline bool has_attackinfo() const;
  inline void clear_attackinfo();
  static const int kAttackInfoFieldNumber = 1;
  inline const ::IGameProto::AttackInfo& attackinfo() const;
  inline ::IGameProto::AttackInfo* mutable_attackinfo();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::AttackInfo* attackinfo_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAttackNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgRoundStartReq : public ::google::protobuf::Message {
 public:
  MsgRoundStartReq();
  virtual ~MsgRoundStartReq();
  
  MsgRoundStartReq(const MsgRoundStartReq& from);
  
  inline MsgRoundStartReq& operator=(const MsgRoundStartReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRoundStartReq& default_instance();
  void Swap(MsgRoundStartReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgRoundStartReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRoundStartReq& from);
  void MergeFrom(const MsgRoundStartReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRoundStartReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgRoundEndReq : public ::google::protobuf::Message {
 public:
  MsgRoundEndReq();
  virtual ~MsgRoundEndReq();
  
  MsgRoundEndReq(const MsgRoundEndReq& from);
  
  inline MsgRoundEndReq& operator=(const MsgRoundEndReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRoundEndReq& default_instance();
  void Swap(MsgRoundEndReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgRoundEndReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRoundEndReq& from);
  void MergeFrom(const MsgRoundEndReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 fightId = 1;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 1;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 fightid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRoundEndReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgBuildInfoNtf : public ::google::protobuf::Message {
 public:
  MsgBuildInfoNtf();
  virtual ~MsgBuildInfoNtf();
  
  MsgBuildInfoNtf(const MsgBuildInfoNtf& from);
  
  inline MsgBuildInfoNtf& operator=(const MsgBuildInfoNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgBuildInfoNtf& default_instance();
  void Swap(MsgBuildInfoNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgBuildInfoNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgBuildInfoNtf& from);
  void MergeFrom(const MsgBuildInfoNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 copperLeftTime = 1;
  inline bool has_copperlefttime() const;
  inline void clear_copperlefttime();
  static const int kCopperLeftTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 copperlefttime() const;
  inline void set_copperlefttime(::google::protobuf::uint32 value);
  
  // optional uint32 copper = 2;
  inline bool has_copper() const;
  inline void clear_copper();
  static const int kCopperFieldNumber = 2;
  inline ::google::protobuf::uint32 copper() const;
  inline void set_copper(::google::protobuf::uint32 value);
  
  // optional uint32 taskId = 3;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 3;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 taskLeftTime = 4;
  inline bool has_tasklefttime() const;
  inline void clear_tasklefttime();
  static const int kTaskLeftTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 tasklefttime() const;
  inline void set_tasklefttime(::google::protobuf::uint32 value);
  
  // optional uint32 isStart = 5;
  inline bool has_isstart() const;
  inline void clear_isstart();
  static const int kIsStartFieldNumber = 5;
  inline ::google::protobuf::uint32 isstart() const;
  inline void set_isstart(::google::protobuf::uint32 value);
  
  // optional uint32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 starLevel = 7;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 7;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);
  
  // repeated uint32 heroIds = 8;
  inline int heroids_size() const;
  inline void clear_heroids();
  static const int kHeroIdsFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& heroids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_heroids();
  inline ::google::protobuf::uint32 heroids(int index) const;
  inline void set_heroids(int index, ::google::protobuf::uint32 value);
  inline void add_heroids(::google::protobuf::uint32 value);
  
  // optional uint32 leftTimes = 9;
  inline bool has_lefttimes() const;
  inline void clear_lefttimes();
  static const int kLeftTimesFieldNumber = 9;
  inline ::google::protobuf::uint32 lefttimes() const;
  inline void set_lefttimes(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 copperlefttime_;
  ::google::protobuf::uint32 copper_;
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 tasklefttime_;
  ::google::protobuf::uint32 isstart_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 starlevel_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroids_;
  ::google::protobuf::uint32 lefttimes_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgBuildInfoNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetBuildCoppperReq : public ::google::protobuf::Message {
 public:
  MsgGetBuildCoppperReq();
  virtual ~MsgGetBuildCoppperReq();
  
  MsgGetBuildCoppperReq(const MsgGetBuildCoppperReq& from);
  
  inline MsgGetBuildCoppperReq& operator=(const MsgGetBuildCoppperReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetBuildCoppperReq& default_instance();
  void Swap(MsgGetBuildCoppperReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgGetBuildCoppperReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetBuildCoppperReq& from);
  void MergeFrom(const MsgGetBuildCoppperReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGetBuildCoppperReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetBuildCoppperAck : public ::google::protobuf::Message {
 public:
  MsgGetBuildCoppperAck();
  virtual ~MsgGetBuildCoppperAck();
  
  MsgGetBuildCoppperAck(const MsgGetBuildCoppperAck& from);
  
  inline MsgGetBuildCoppperAck& operator=(const MsgGetBuildCoppperAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetBuildCoppperAck& default_instance();
  void Swap(MsgGetBuildCoppperAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgGetBuildCoppperAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetBuildCoppperAck& from);
  void MergeFrom(const MsgGetBuildCoppperAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 count = 1;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 1;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGetBuildCoppperAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgUpgradeInteriorBuildReq : public ::google::protobuf::Message {
 public:
  MsgUpgradeInteriorBuildReq();
  virtual ~MsgUpgradeInteriorBuildReq();
  
  MsgUpgradeInteriorBuildReq(const MsgUpgradeInteriorBuildReq& from);
  
  inline MsgUpgradeInteriorBuildReq& operator=(const MsgUpgradeInteriorBuildReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpgradeInteriorBuildReq& default_instance();
  void Swap(MsgUpgradeInteriorBuildReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgUpgradeInteriorBuildReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpgradeInteriorBuildReq& from);
  void MergeFrom(const MsgUpgradeInteriorBuildReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUpgradeInteriorBuildReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgUpgradeInteriorBuildAck : public ::google::protobuf::Message {
 public:
  MsgUpgradeInteriorBuildAck();
  virtual ~MsgUpgradeInteriorBuildAck();
  
  MsgUpgradeInteriorBuildAck(const MsgUpgradeInteriorBuildAck& from);
  
  inline MsgUpgradeInteriorBuildAck& operator=(const MsgUpgradeInteriorBuildAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpgradeInteriorBuildAck& default_instance();
  void Swap(MsgUpgradeInteriorBuildAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgUpgradeInteriorBuildAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpgradeInteriorBuildAck& from);
  void MergeFrom(const MsgUpgradeInteriorBuildAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUpgradeInteriorBuildAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgInteriorTaskFinishedNtf : public ::google::protobuf::Message {
 public:
  MsgInteriorTaskFinishedNtf();
  virtual ~MsgInteriorTaskFinishedNtf();
  
  MsgInteriorTaskFinishedNtf(const MsgInteriorTaskFinishedNtf& from);
  
  inline MsgInteriorTaskFinishedNtf& operator=(const MsgInteriorTaskFinishedNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgInteriorTaskFinishedNtf& default_instance();
  void Swap(MsgInteriorTaskFinishedNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgInteriorTaskFinishedNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgInteriorTaskFinishedNtf& from);
  void MergeFrom(const MsgInteriorTaskFinishedNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgInteriorTaskFinishedNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgDispatchTaskReq : public ::google::protobuf::Message {
 public:
  MsgDispatchTaskReq();
  virtual ~MsgDispatchTaskReq();
  
  MsgDispatchTaskReq(const MsgDispatchTaskReq& from);
  
  inline MsgDispatchTaskReq& operator=(const MsgDispatchTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDispatchTaskReq& default_instance();
  void Swap(MsgDispatchTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgDispatchTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDispatchTaskReq& from);
  void MergeFrom(const MsgDispatchTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 task_star_level = 2;
  inline bool has_task_star_level() const;
  inline void clear_task_star_level();
  static const int kTaskStarLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 task_star_level() const;
  inline void set_task_star_level(::google::protobuf::uint32 value);
  
  // repeated uint32 heroIds = 3;
  inline int heroids_size() const;
  inline void clear_heroids();
  static const int kHeroIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& heroids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_heroids();
  inline ::google::protobuf::uint32 heroids(int index) const;
  inline void set_heroids(int index, ::google::protobuf::uint32 value);
  inline void add_heroids(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 task_star_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroids_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDispatchTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgDispatchTaskAck : public ::google::protobuf::Message {
 public:
  MsgDispatchTaskAck();
  virtual ~MsgDispatchTaskAck();
  
  MsgDispatchTaskAck(const MsgDispatchTaskAck& from);
  
  inline MsgDispatchTaskAck& operator=(const MsgDispatchTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDispatchTaskAck& default_instance();
  void Swap(MsgDispatchTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgDispatchTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDispatchTaskAck& from);
  void MergeFrom(const MsgDispatchTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 task_star_level = 2;
  inline bool has_task_star_level() const;
  inline void clear_task_star_level();
  static const int kTaskStarLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 task_star_level() const;
  inline void set_task_star_level(::google::protobuf::uint32 value);
  
  // repeated uint32 heroIds = 3;
  inline int heroids_size() const;
  inline void clear_heroids();
  static const int kHeroIdsFieldNumber = 3;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& heroids() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_heroids();
  inline ::google::protobuf::uint32 heroids(int index) const;
  inline void set_heroids(int index, ::google::protobuf::uint32 value);
  inline void add_heroids(::google::protobuf::uint32 value);
  
  // optional uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 task_star_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > heroids_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDispatchTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgRefreshTaskReq : public ::google::protobuf::Message {
 public:
  MsgRefreshTaskReq();
  virtual ~MsgRefreshTaskReq();
  
  MsgRefreshTaskReq(const MsgRefreshTaskReq& from);
  
  inline MsgRefreshTaskReq& operator=(const MsgRefreshTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRefreshTaskReq& default_instance();
  void Swap(MsgRefreshTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgRefreshTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRefreshTaskReq& from);
  void MergeFrom(const MsgRefreshTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRefreshTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgRefreshTaskAck : public ::google::protobuf::Message {
 public:
  MsgRefreshTaskAck();
  virtual ~MsgRefreshTaskAck();
  
  MsgRefreshTaskAck(const MsgRefreshTaskAck& from);
  
  inline MsgRefreshTaskAck& operator=(const MsgRefreshTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRefreshTaskAck& default_instance();
  void Swap(MsgRefreshTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgRefreshTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRefreshTaskAck& from);
  void MergeFrom(const MsgRefreshTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 taskId = 1;
  inline bool has_taskid() const;
  inline void clear_taskid();
  static const int kTaskIdFieldNumber = 1;
  inline ::google::protobuf::uint32 taskid() const;
  inline void set_taskid(::google::protobuf::uint32 value);
  
  // optional uint32 taskStarLevel = 2;
  inline bool has_taskstarlevel() const;
  inline void clear_taskstarlevel();
  static const int kTaskStarLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 taskstarlevel() const;
  inline void set_taskstarlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 taskid_;
  ::google::protobuf::uint32 taskstarlevel_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRefreshTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgUpgradeTaskStarLevelReq : public ::google::protobuf::Message {
 public:
  MsgUpgradeTaskStarLevelReq();
  virtual ~MsgUpgradeTaskStarLevelReq();
  
  MsgUpgradeTaskStarLevelReq(const MsgUpgradeTaskStarLevelReq& from);
  
  inline MsgUpgradeTaskStarLevelReq& operator=(const MsgUpgradeTaskStarLevelReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpgradeTaskStarLevelReq& default_instance();
  void Swap(MsgUpgradeTaskStarLevelReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgUpgradeTaskStarLevelReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpgradeTaskStarLevelReq& from);
  void MergeFrom(const MsgUpgradeTaskStarLevelReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 starLevel = 1;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 starlevel_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUpgradeTaskStarLevelReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgUpgradeTaskStarLevelAck : public ::google::protobuf::Message {
 public:
  MsgUpgradeTaskStarLevelAck();
  virtual ~MsgUpgradeTaskStarLevelAck();
  
  MsgUpgradeTaskStarLevelAck(const MsgUpgradeTaskStarLevelAck& from);
  
  inline MsgUpgradeTaskStarLevelAck& operator=(const MsgUpgradeTaskStarLevelAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpgradeTaskStarLevelAck& default_instance();
  void Swap(MsgUpgradeTaskStarLevelAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgUpgradeTaskStarLevelAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgUpgradeTaskStarLevelAck& from);
  void MergeFrom(const MsgUpgradeTaskStarLevelAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 starLevel = 1;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 starlevel() const;
  inline void set_starlevel(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 starlevel_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgUpgradeTaskStarLevelAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetInteriorRewardReq : public ::google::protobuf::Message {
 public:
  MsgGetInteriorRewardReq();
  virtual ~MsgGetInteriorRewardReq();
  
  MsgGetInteriorRewardReq(const MsgGetInteriorRewardReq& from);
  
  inline MsgGetInteriorRewardReq& operator=(const MsgGetInteriorRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetInteriorRewardReq& default_instance();
  void Swap(MsgGetInteriorRewardReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgGetInteriorRewardReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetInteriorRewardReq& from);
  void MergeFrom(const MsgGetInteriorRewardReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGetInteriorRewardReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgGetInteriorRewardAck : public ::google::protobuf::Message {
 public:
  MsgGetInteriorRewardAck();
  virtual ~MsgGetInteriorRewardAck();
  
  MsgGetInteriorRewardAck(const MsgGetInteriorRewardAck& from);
  
  inline MsgGetInteriorRewardAck& operator=(const MsgGetInteriorRewardAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetInteriorRewardAck& default_instance();
  void Swap(MsgGetInteriorRewardAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgGetInteriorRewardAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgGetInteriorRewardAck& from);
  void MergeFrom(const MsgGetInteriorRewardAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgGetInteriorRewardAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCompleteInteriorTaskReq : public ::google::protobuf::Message {
 public:
  MsgCompleteInteriorTaskReq();
  virtual ~MsgCompleteInteriorTaskReq();
  
  MsgCompleteInteriorTaskReq(const MsgCompleteInteriorTaskReq& from);
  
  inline MsgCompleteInteriorTaskReq& operator=(const MsgCompleteInteriorTaskReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompleteInteriorTaskReq& default_instance();
  void Swap(MsgCompleteInteriorTaskReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCompleteInteriorTaskReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCompleteInteriorTaskReq& from);
  void MergeFrom(const MsgCompleteInteriorTaskReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCompleteInteriorTaskReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCompleteInteriorTaskAck : public ::google::protobuf::Message {
 public:
  MsgCompleteInteriorTaskAck();
  virtual ~MsgCompleteInteriorTaskAck();
  
  MsgCompleteInteriorTaskAck(const MsgCompleteInteriorTaskAck& from);
  
  inline MsgCompleteInteriorTaskAck& operator=(const MsgCompleteInteriorTaskAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompleteInteriorTaskAck& default_instance();
  void Swap(MsgCompleteInteriorTaskAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCompleteInteriorTaskAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCompleteInteriorTaskAck& from);
  void MergeFrom(const MsgCompleteInteriorTaskAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCompleteInteriorTaskAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCreateArmyReq : public ::google::protobuf::Message {
 public:
  MsgCreateArmyReq();
  virtual ~MsgCreateArmyReq();
  
  MsgCreateArmyReq(const MsgCreateArmyReq& from);
  
  inline MsgCreateArmyReq& operator=(const MsgCreateArmyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateArmyReq& default_instance();
  void Swap(MsgCreateArmyReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCreateArmyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCreateArmyReq& from);
  void MergeFrom(const MsgCreateArmyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCreateArmyReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCreateArmyAck : public ::google::protobuf::Message {
 public:
  MsgCreateArmyAck();
  virtual ~MsgCreateArmyAck();
  
  MsgCreateArmyAck(const MsgCreateArmyAck& from);
  
  inline MsgCreateArmyAck& operator=(const MsgCreateArmyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCreateArmyAck& default_instance();
  void Swap(MsgCreateArmyAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCreateArmyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCreateArmyAck& from);
  void MergeFrom(const MsgCreateArmyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCreateArmyAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgJoinArmyReq : public ::google::protobuf::Message {
 public:
  MsgJoinArmyReq();
  virtual ~MsgJoinArmyReq();
  
  MsgJoinArmyReq(const MsgJoinArmyReq& from);
  
  inline MsgJoinArmyReq& operator=(const MsgJoinArmyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgJoinArmyReq& default_instance();
  void Swap(MsgJoinArmyReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgJoinArmyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgJoinArmyReq& from);
  void MergeFrom(const MsgJoinArmyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgJoinArmyReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgJoinArmyAck : public ::google::protobuf::Message {
 public:
  MsgJoinArmyAck();
  virtual ~MsgJoinArmyAck();
  
  MsgJoinArmyAck(const MsgJoinArmyAck& from);
  
  inline MsgJoinArmyAck& operator=(const MsgJoinArmyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgJoinArmyAck& default_instance();
  void Swap(MsgJoinArmyAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgJoinArmyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgJoinArmyAck& from);
  void MergeFrom(const MsgJoinArmyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgJoinArmyAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgApproveJoinArmyReq : public ::google::protobuf::Message {
 public:
  MsgApproveJoinArmyReq();
  virtual ~MsgApproveJoinArmyReq();
  
  MsgApproveJoinArmyReq(const MsgApproveJoinArmyReq& from);
  
  inline MsgApproveJoinArmyReq& operator=(const MsgApproveJoinArmyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApproveJoinArmyReq& default_instance();
  void Swap(MsgApproveJoinArmyReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgApproveJoinArmyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgApproveJoinArmyReq& from);
  void MergeFrom(const MsgApproveJoinArmyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string roleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgApproveJoinArmyReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgApproveJoinArmyAck : public ::google::protobuf::Message {
 public:
  MsgApproveJoinArmyAck();
  virtual ~MsgApproveJoinArmyAck();
  
  MsgApproveJoinArmyAck(const MsgApproveJoinArmyAck& from);
  
  inline MsgApproveJoinArmyAck& operator=(const MsgApproveJoinArmyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApproveJoinArmyAck& default_instance();
  void Swap(MsgApproveJoinArmyAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgApproveJoinArmyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgApproveJoinArmyAck& from);
  void MergeFrom(const MsgApproveJoinArmyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgApproveJoinArmyAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgLeaveArmyReq : public ::google::protobuf::Message {
 public:
  MsgLeaveArmyReq();
  virtual ~MsgLeaveArmyReq();
  
  MsgLeaveArmyReq(const MsgLeaveArmyReq& from);
  
  inline MsgLeaveArmyReq& operator=(const MsgLeaveArmyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveArmyReq& default_instance();
  void Swap(MsgLeaveArmyReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgLeaveArmyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLeaveArmyReq& from);
  void MergeFrom(const MsgLeaveArmyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLeaveArmyReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgJoinCountryReq : public ::google::protobuf::Message {
 public:
  MsgJoinCountryReq();
  virtual ~MsgJoinCountryReq();
  
  MsgJoinCountryReq(const MsgJoinCountryReq& from);
  
  inline MsgJoinCountryReq& operator=(const MsgJoinCountryReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgJoinCountryReq& default_instance();
  void Swap(MsgJoinCountryReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgJoinCountryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgJoinCountryReq& from);
  void MergeFrom(const MsgJoinCountryReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgJoinCountryReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgLeaveCountryReq : public ::google::protobuf::Message {
 public:
  MsgLeaveCountryReq();
  virtual ~MsgLeaveCountryReq();
  
  MsgLeaveCountryReq(const MsgLeaveCountryReq& from);
  
  inline MsgLeaveCountryReq& operator=(const MsgLeaveCountryReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLeaveCountryReq& default_instance();
  void Swap(MsgLeaveCountryReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgLeaveCountryReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgLeaveCountryReq& from);
  void MergeFrom(const MsgLeaveCountryReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgLeaveCountryReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCountryAssignReq : public ::google::protobuf::Message {
 public:
  MsgCountryAssignReq();
  virtual ~MsgCountryAssignReq();
  
  MsgCountryAssignReq(const MsgCountryAssignReq& from);
  
  inline MsgCountryAssignReq& operator=(const MsgCountryAssignReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCountryAssignReq& default_instance();
  void Swap(MsgCountryAssignReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCountryAssignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCountryAssignReq& from);
  void MergeFrom(const MsgCountryAssignReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string roleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional .IGameProto.OFFICER_TYPE office = 2;
  inline bool has_office() const;
  inline void clear_office();
  static const int kOfficeFieldNumber = 2;
  inline IGameProto::OFFICER_TYPE office() const;
  inline void set_office(IGameProto::OFFICER_TYPE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  int office_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCountryAssignReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgArmyAssignReq : public ::google::protobuf::Message {
 public:
  MsgArmyAssignReq();
  virtual ~MsgArmyAssignReq();
  
  MsgArmyAssignReq(const MsgArmyAssignReq& from);
  
  inline MsgArmyAssignReq& operator=(const MsgArmyAssignReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgArmyAssignReq& default_instance();
  void Swap(MsgArmyAssignReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgArmyAssignReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgArmyAssignReq& from);
  void MergeFrom(const MsgArmyAssignReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string roleName = 1;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 1;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
  // optional .IGameProto.ArmyOfficerType office = 2;
  inline bool has_office() const;
  inline void clear_office();
  static const int kOfficeFieldNumber = 2;
  inline IGameProto::ArmyOfficerType office() const;
  inline void set_office(IGameProto::ArmyOfficerType value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  int office_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgArmyAssignReq* default_instance_;
};
// -------------------------------------------------------------------

class officer : public ::google::protobuf::Message {
 public:
  officer();
  virtual ~officer();
  
  officer(const officer& from);
  
  inline officer& operator=(const officer& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const officer& default_instance();
  void Swap(officer* other);
  
  // implements Message ----------------------------------------------
  
  officer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const officer& from);
  void MergeFrom(const officer& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 officeType = 1;
  inline bool has_officetype() const;
  inline void clear_officetype();
  static const int kOfficeTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 officetype() const;
  inline void set_officetype(::google::protobuf::uint32 value);
  
  // optional string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 officetype_;
  ::std::string* rolename_;
  static const ::std::string _default_rolename_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static officer* default_instance_;
};
// -------------------------------------------------------------------

class ArmyInfo : public ::google::protobuf::Message {
 public:
  ArmyInfo();
  virtual ~ArmyInfo();
  
  ArmyInfo(const ArmyInfo& from);
  
  inline ArmyInfo& operator=(const ArmyInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ArmyInfo& default_instance();
  void Swap(ArmyInfo* other);
  
  // implements Message ----------------------------------------------
  
  ArmyInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArmyInfo& from);
  void MergeFrom(const ArmyInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 level = 2;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 2;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);
  
  // optional uint32 money = 3;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 3;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // repeated string members = 4;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& members() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_members();
  inline const ::std::string& members(int index) const;
  inline ::std::string* mutable_members(int index);
  inline void set_members(int index, const ::std::string& value);
  inline void set_members(int index, const char* value);
  inline void set_members(int index, const char* value, size_t size);
  inline ::std::string* add_members();
  inline void add_members(const ::std::string& value);
  inline void add_members(const char* value);
  inline void add_members(const char* value, size_t size);
  
  // repeated string newbies = 5;
  inline int newbies_size() const;
  inline void clear_newbies();
  static const int kNewbiesFieldNumber = 5;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& newbies() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_newbies();
  inline const ::std::string& newbies(int index) const;
  inline ::std::string* mutable_newbies(int index);
  inline void set_newbies(int index, const ::std::string& value);
  inline void set_newbies(int index, const char* value);
  inline void set_newbies(int index, const char* value, size_t size);
  inline ::std::string* add_newbies();
  inline void add_newbies(const ::std::string& value);
  inline void add_newbies(const char* value);
  inline void add_newbies(const char* value, size_t size);
  
  // repeated string appliers = 6;
  inline int appliers_size() const;
  inline void clear_appliers();
  static const int kAppliersFieldNumber = 6;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& appliers() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_appliers();
  inline const ::std::string& appliers(int index) const;
  inline ::std::string* mutable_appliers(int index);
  inline void set_appliers(int index, const ::std::string& value);
  inline void set_appliers(int index, const char* value);
  inline void set_appliers(int index, const char* value, size_t size);
  inline ::std::string* add_appliers();
  inline void add_appliers(const ::std::string& value);
  inline void add_appliers(const char* value);
  inline void add_appliers(const char* value, size_t size);
  
  // optional uint32 city = 7;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 7;
  inline ::google::protobuf::uint32 city() const;
  inline void set_city(::google::protobuf::uint32 value);
  
  // optional uint32 country = 8;
  inline bool has_country() const;
  inline void clear_country();
  static const int kCountryFieldNumber = 8;
  inline ::google::protobuf::uint32 country() const;
  inline void set_country(::google::protobuf::uint32 value);
  
  // repeated .IGameProto.officer officers = 9;
  inline int officers_size() const;
  inline void clear_officers();
  static const int kOfficersFieldNumber = 9;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >& officers() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >* mutable_officers();
  inline const ::IGameProto::officer& officers(int index) const;
  inline ::IGameProto::officer* mutable_officers(int index);
  inline ::IGameProto::officer* add_officers();
  
  // optional string general = 10;
  inline bool has_general() const;
  inline void clear_general();
  static const int kGeneralFieldNumber = 10;
  inline const ::std::string& general() const;
  inline void set_general(const ::std::string& value);
  inline void set_general(const char* value);
  inline void set_general(const char* value, size_t size);
  inline ::std::string* mutable_general();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::RepeatedPtrField< ::std::string> members_;
  ::google::protobuf::RepeatedPtrField< ::std::string> newbies_;
  ::google::protobuf::RepeatedPtrField< ::std::string> appliers_;
  ::google::protobuf::uint32 city_;
  ::google::protobuf::uint32 country_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::officer > officers_;
  ::std::string* general_;
  static const ::std::string _default_general_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static ArmyInfo* default_instance_;
};
// -------------------------------------------------------------------

class CountryInfo : public ::google::protobuf::Message {
 public:
  CountryInfo();
  virtual ~CountryInfo();
  
  CountryInfo(const CountryInfo& from);
  
  inline CountryInfo& operator=(const CountryInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CountryInfo& default_instance();
  void Swap(CountryInfo* other);
  
  // implements Message ----------------------------------------------
  
  CountryInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CountryInfo& from);
  void MergeFrom(const CountryInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // repeated .IGameProto.ArmyInfo armies = 3;
  inline int armies_size() const;
  inline void clear_armies();
  static const int kArmiesFieldNumber = 3;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ArmyInfo >& armies() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ArmyInfo >* mutable_armies();
  inline const ::IGameProto::ArmyInfo& armies(int index) const;
  inline ::IGameProto::ArmyInfo* mutable_armies(int index);
  inline ::IGameProto::ArmyInfo* add_armies();
  
  // optional uint32 money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);
  
  // optional uint32 popularity = 5;
  inline bool has_popularity() const;
  inline void clear_popularity();
  static const int kPopularityFieldNumber = 5;
  inline ::google::protobuf::uint32 popularity() const;
  inline void set_popularity(::google::protobuf::uint32 value);
  
  // optional .IGameProto.COUNTRY_STATE state = 6;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 6;
  inline IGameProto::COUNTRY_STATE state() const;
  inline void set_state(IGameProto::COUNTRY_STATE value);
  
  // repeated uint32 cities = 7;
  inline int cities_size() const;
  inline void clear_cities();
  static const int kCitiesFieldNumber = 7;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& cities() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_cities();
  inline ::google::protobuf::uint32 cities(int index) const;
  inline void set_cities(int index, ::google::protobuf::uint32 value);
  inline void add_cities(::google::protobuf::uint32 value);
  
  // repeated uint32 friends = 8;
  inline int friends_size() const;
  inline void clear_friends();
  static const int kFriendsFieldNumber = 8;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& friends() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_friends();
  inline ::google::protobuf::uint32 friends(int index) const;
  inline void set_friends(int index, ::google::protobuf::uint32 value);
  inline void add_friends(::google::protobuf::uint32 value);
  
  // repeated uint32 enemies = 9;
  inline int enemies_size() const;
  inline void clear_enemies();
  static const int kEnemiesFieldNumber = 9;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >& enemies() const
      ;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >* mutable_enemies();
  inline ::google::protobuf::uint32 enemies(int index) const;
  inline void set_enemies(int index, ::google::protobuf::uint32 value);
  inline void add_enemies(::google::protobuf::uint32 value);
  
  // optional uint32 power = 10;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 10;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);
  
  // optional string notice = 11;
  inline bool has_notice() const;
  inline void clear_notice();
  static const int kNoticeFieldNumber = 11;
  inline const ::std::string& notice() const;
  inline void set_notice(const ::std::string& value);
  inline void set_notice(const char* value);
  inline void set_notice(const char* value, size_t size);
  inline ::std::string* mutable_notice();
  
  // optional string name = 12;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 12;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // repeated .IGameProto.officer officers = 13;
  inline int officers_size() const;
  inline void clear_officers();
  static const int kOfficersFieldNumber = 13;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >& officers() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >* mutable_officers();
  inline const ::IGameProto::officer& officers(int index) const;
  inline ::IGameProto::officer* mutable_officers(int index);
  inline ::IGameProto::officer* add_officers();
  
  // optional string kingName = 14;
  inline bool has_kingname() const;
  inline void clear_kingname();
  static const int kKingNameFieldNumber = 14;
  inline const ::std::string& kingname() const;
  inline void set_kingname(const ::std::string& value);
  inline void set_kingname(const char* value);
  inline void set_kingname(const char* value, size_t size);
  inline ::std::string* mutable_kingname();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::ArmyInfo > armies_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 popularity_;
  int state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cities_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > friends_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enemies_;
  ::google::protobuf::uint32 power_;
  ::std::string* notice_;
  static const ::std::string _default_notice_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::officer > officers_;
  ::std::string* kingname_;
  static const ::std::string _default_kingname_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CountryInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgCountryInofNtf : public ::google::protobuf::Message {
 public:
  MsgCountryInofNtf();
  virtual ~MsgCountryInofNtf();
  
  MsgCountryInofNtf(const MsgCountryInofNtf& from);
  
  inline MsgCountryInofNtf& operator=(const MsgCountryInofNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCountryInofNtf& default_instance();
  void Swap(MsgCountryInofNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgCountryInofNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCountryInofNtf& from);
  void MergeFrom(const MsgCountryInofNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.CountryInfo countries = 1;
  inline int countries_size() const;
  inline void clear_countries();
  static const int kCountriesFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::CountryInfo >& countries() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::CountryInfo >* mutable_countries();
  inline const ::IGameProto::CountryInfo& countries(int index) const;
  inline ::IGameProto::CountryInfo* mutable_countries(int index);
  inline ::IGameProto::CountryInfo* add_countries();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::CountryInfo > countries_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCountryInofNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgCallWarReq : public ::google::protobuf::Message {
 public:
  MsgCallWarReq();
  virtual ~MsgCallWarReq();
  
  MsgCallWarReq(const MsgCallWarReq& from);
  
  inline MsgCallWarReq& operator=(const MsgCallWarReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCallWarReq& default_instance();
  void Swap(MsgCallWarReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCallWarReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCallWarReq& from);
  void MergeFrom(const MsgCallWarReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 countryId = 1;
  inline bool has_countryid() const;
  inline void clear_countryid();
  static const int kCountryIdFieldNumber = 1;
  inline ::google::protobuf::uint32 countryid() const;
  inline void set_countryid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 countryid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCallWarReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCallWarAck : public ::google::protobuf::Message {
 public:
  MsgCallWarAck();
  virtual ~MsgCallWarAck();
  
  MsgCallWarAck(const MsgCallWarAck& from);
  
  inline MsgCallWarAck& operator=(const MsgCallWarAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCallWarAck& default_instance();
  void Swap(MsgCallWarAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCallWarAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCallWarAck& from);
  void MergeFrom(const MsgCallWarAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCallWarAck* default_instance_;
};
// -------------------------------------------------------------------

class CallWarInfo : public ::google::protobuf::Message {
 public:
  CallWarInfo();
  virtual ~CallWarInfo();
  
  CallWarInfo(const CallWarInfo& from);
  
  inline CallWarInfo& operator=(const CallWarInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CallWarInfo& default_instance();
  void Swap(CallWarInfo* other);
  
  // implements Message ----------------------------------------------
  
  CallWarInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallWarInfo& from);
  void MergeFrom(const CallWarInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 active_id = 1;
  inline bool has_active_id() const;
  inline void clear_active_id();
  static const int kActiveIdFieldNumber = 1;
  inline ::google::protobuf::uint32 active_id() const;
  inline void set_active_id(::google::protobuf::uint32 value);
  
  // optional uint32 passive_id = 2;
  inline bool has_passive_id() const;
  inline void clear_passive_id();
  static const int kPassiveIdFieldNumber = 2;
  inline ::google::protobuf::uint32 passive_id() const;
  inline void set_passive_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 active_id_;
  ::google::protobuf::uint32 passive_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CallWarInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgCallWarInfoReq : public ::google::protobuf::Message {
 public:
  MsgCallWarInfoReq();
  virtual ~MsgCallWarInfoReq();
  
  MsgCallWarInfoReq(const MsgCallWarInfoReq& from);
  
  inline MsgCallWarInfoReq& operator=(const MsgCallWarInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCallWarInfoReq& default_instance();
  void Swap(MsgCallWarInfoReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCallWarInfoReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCallWarInfoReq& from);
  void MergeFrom(const MsgCallWarInfoReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCallWarInfoReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCallWarInfoAck : public ::google::protobuf::Message {
 public:
  MsgCallWarInfoAck();
  virtual ~MsgCallWarInfoAck();
  
  MsgCallWarInfoAck(const MsgCallWarInfoAck& from);
  
  inline MsgCallWarInfoAck& operator=(const MsgCallWarInfoAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCallWarInfoAck& default_instance();
  void Swap(MsgCallWarInfoAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCallWarInfoAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCallWarInfoAck& from);
  void MergeFrom(const MsgCallWarInfoAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.CallWarInfo call_war_info = 1;
  inline int call_war_info_size() const;
  inline void clear_call_war_info();
  static const int kCallWarInfoFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::CallWarInfo >& call_war_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::CallWarInfo >* mutable_call_war_info();
  inline const ::IGameProto::CallWarInfo& call_war_info(int index) const;
  inline ::IGameProto::CallWarInfo* mutable_call_war_info(int index);
  inline ::IGameProto::CallWarInfo* add_call_war_info();
  
  // optional uint32 timeLeft = 2;
  inline bool has_timeleft() const;
  inline void clear_timeleft();
  static const int kTimeLeftFieldNumber = 2;
  inline ::google::protobuf::uint32 timeleft() const;
  inline void set_timeleft(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::CallWarInfo > call_war_info_;
  ::google::protobuf::uint32 timeleft_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCallWarInfoAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgExchangeMoneyReq : public ::google::protobuf::Message {
 public:
  MsgExchangeMoneyReq();
  virtual ~MsgExchangeMoneyReq();
  
  MsgExchangeMoneyReq(const MsgExchangeMoneyReq& from);
  
  inline MsgExchangeMoneyReq& operator=(const MsgExchangeMoneyReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExchangeMoneyReq& default_instance();
  void Swap(MsgExchangeMoneyReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgExchangeMoneyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgExchangeMoneyReq& from);
  void MergeFrom(const MsgExchangeMoneyReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 sourceMoneyType = 1;
  inline bool has_sourcemoneytype() const;
  inline void clear_sourcemoneytype();
  static const int kSourceMoneyTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 sourcemoneytype() const;
  inline void set_sourcemoneytype(::google::protobuf::uint32 value);
  
  // optional uint64 sourceMoneyCount = 2;
  inline bool has_sourcemoneycount() const;
  inline void clear_sourcemoneycount();
  static const int kSourceMoneyCountFieldNumber = 2;
  inline ::google::protobuf::uint64 sourcemoneycount() const;
  inline void set_sourcemoneycount(::google::protobuf::uint64 value);
  
  // optional uint32 destMoneyType = 3;
  inline bool has_destmoneytype() const;
  inline void clear_destmoneytype();
  static const int kDestMoneyTypeFieldNumber = 3;
  inline ::google::protobuf::uint32 destmoneytype() const;
  inline void set_destmoneytype(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 sourcemoneytype_;
  ::google::protobuf::uint64 sourcemoneycount_;
  ::google::protobuf::uint32 destmoneytype_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgExchangeMoneyReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgExchangeMoneyAck : public ::google::protobuf::Message {
 public:
  MsgExchangeMoneyAck();
  virtual ~MsgExchangeMoneyAck();
  
  MsgExchangeMoneyAck(const MsgExchangeMoneyAck& from);
  
  inline MsgExchangeMoneyAck& operator=(const MsgExchangeMoneyAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgExchangeMoneyAck& default_instance();
  void Swap(MsgExchangeMoneyAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgExchangeMoneyAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgExchangeMoneyAck& from);
  void MergeFrom(const MsgExchangeMoneyAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint64 totalGold = 1;
  inline bool has_totalgold() const;
  inline void clear_totalgold();
  static const int kTotalGoldFieldNumber = 1;
  inline ::google::protobuf::uint64 totalgold() const;
  inline void set_totalgold(::google::protobuf::uint64 value);
  
  // optional uint64 totalSilver = 2;
  inline bool has_totalsilver() const;
  inline void clear_totalsilver();
  static const int kTotalSilverFieldNumber = 2;
  inline ::google::protobuf::uint64 totalsilver() const;
  inline void set_totalsilver(::google::protobuf::uint64 value);
  
  // optional uint64 totalCopper = 3;
  inline bool has_totalcopper() const;
  inline void clear_totalcopper();
  static const int kTotalCopperFieldNumber = 3;
  inline ::google::protobuf::uint64 totalcopper() const;
  inline void set_totalcopper(::google::protobuf::uint64 value);
  
  // optional int64 changedGold = 4;
  inline bool has_changedgold() const;
  inline void clear_changedgold();
  static const int kChangedGoldFieldNumber = 4;
  inline ::google::protobuf::int64 changedgold() const;
  inline void set_changedgold(::google::protobuf::int64 value);
  
  // optional int64 changedSilver = 5;
  inline bool has_changedsilver() const;
  inline void clear_changedsilver();
  static const int kChangedSilverFieldNumber = 5;
  inline ::google::protobuf::int64 changedsilver() const;
  inline void set_changedsilver(::google::protobuf::int64 value);
  
  // optional int64 changedCopper = 6;
  inline bool has_changedcopper() const;
  inline void clear_changedcopper();
  static const int kChangedCopperFieldNumber = 6;
  inline ::google::protobuf::int64 changedcopper() const;
  inline void set_changedcopper(::google::protobuf::int64 value);
  
  // optional uint32 status = 7;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 7;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint64 totalgold_;
  ::google::protobuf::uint64 totalsilver_;
  ::google::protobuf::uint64 totalcopper_;
  ::google::protobuf::int64 changedgold_;
  ::google::protobuf::int64 changedsilver_;
  ::google::protobuf::int64 changedcopper_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgExchangeMoneyAck* default_instance_;
};
// -------------------------------------------------------------------

class HpInfo : public ::google::protobuf::Message {
 public:
  HpInfo();
  virtual ~HpInfo();
  
  HpInfo(const HpInfo& from);
  
  inline HpInfo& operator=(const HpInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HpInfo& default_instance();
  void Swap(HpInfo* other);
  
  // implements Message ----------------------------------------------
  
  HpInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HpInfo& from);
  void MergeFrom(const HpInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 hp = 2;
  inline bool has_hp() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 2;
  inline ::google::protobuf::uint32 hp() const;
  inline void set_hp(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 hp_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static HpInfo* default_instance_;
};
// -------------------------------------------------------------------

class CityInfo : public ::google::protobuf::Message {
 public:
  CityInfo();
  virtual ~CityInfo();
  
  CityInfo(const CityInfo& from);
  
  inline CityInfo& operator=(const CityInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CityInfo& default_instance();
  void Swap(CityInfo* other);
  
  // implements Message ----------------------------------------------
  
  CityInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CityInfo& from);
  void MergeFrom(const CityInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::uint32 id() const;
  inline void set_id(::google::protobuf::uint32 value);
  
  // optional uint32 isSelf = 2;
  inline bool has_isself() const;
  inline void clear_isself();
  static const int kIsSelfFieldNumber = 2;
  inline ::google::protobuf::uint32 isself() const;
  inline void set_isself(::google::protobuf::uint32 value);
  
  // optional .IGameProto.CITY_STATE state = 3;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 3;
  inline IGameProto::CITY_STATE state() const;
  inline void set_state(IGameProto::CITY_STATE value);
  
  // repeated .IGameProto.HpInfo hp = 4;
  inline int hp_size() const;
  inline void clear_hp();
  static const int kHpFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::HpInfo >& hp() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::HpInfo >* mutable_hp();
  inline const ::IGameProto::HpInfo& hp(int index) const;
  inline ::IGameProto::HpInfo* mutable_hp(int index);
  inline ::IGameProto::HpInfo* add_hp();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 isself_;
  int state_;
  ::google::protobuf::RepeatedPtrField< ::IGameProto::HpInfo > hp_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static CityInfo* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterCityVisionNtf : public ::google::protobuf::Message {
 public:
  MsgEnterCityVisionNtf();
  virtual ~MsgEnterCityVisionNtf();
  
  MsgEnterCityVisionNtf(const MsgEnterCityVisionNtf& from);
  
  inline MsgEnterCityVisionNtf& operator=(const MsgEnterCityVisionNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterCityVisionNtf& default_instance();
  void Swap(MsgEnterCityVisionNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterCityVisionNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterCityVisionNtf& from);
  void MergeFrom(const MsgEnterCityVisionNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.CityInfo city = 1;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 1;
  inline const ::IGameProto::CityInfo& city() const;
  inline ::IGameProto::CityInfo* mutable_city();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::CityInfo* city_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterCityVisionNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgOutofCityVisionNtf : public ::google::protobuf::Message {
 public:
  MsgOutofCityVisionNtf();
  virtual ~MsgOutofCityVisionNtf();
  
  MsgOutofCityVisionNtf(const MsgOutofCityVisionNtf& from);
  
  inline MsgOutofCityVisionNtf& operator=(const MsgOutofCityVisionNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgOutofCityVisionNtf& default_instance();
  void Swap(MsgOutofCityVisionNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgOutofCityVisionNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgOutofCityVisionNtf& from);
  void MergeFrom(const MsgOutofCityVisionNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 cityId = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 cityid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgOutofCityVisionNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgCityInfoNtf : public ::google::protobuf::Message {
 public:
  MsgCityInfoNtf();
  virtual ~MsgCityInfoNtf();
  
  MsgCityInfoNtf(const MsgCityInfoNtf& from);
  
  inline MsgCityInfoNtf& operator=(const MsgCityInfoNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCityInfoNtf& default_instance();
  void Swap(MsgCityInfoNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgCityInfoNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCityInfoNtf& from);
  void MergeFrom(const MsgCityInfoNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.CityInfo city = 1;
  inline bool has_city() const;
  inline void clear_city();
  static const int kCityFieldNumber = 1;
  inline const ::IGameProto::CityInfo& city() const;
  inline ::IGameProto::CityInfo* mutable_city();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::IGameProto::CityInfo* city_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCityInfoNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterCityReq : public ::google::protobuf::Message {
 public:
  MsgEnterCityReq();
  virtual ~MsgEnterCityReq();
  
  MsgEnterCityReq(const MsgEnterCityReq& from);
  
  inline MsgEnterCityReq& operator=(const MsgEnterCityReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterCityReq& default_instance();
  void Swap(MsgEnterCityReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterCityReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterCityReq& from);
  void MergeFrom(const MsgEnterCityReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 cityId = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 cityid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterCityReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterCityAck : public ::google::protobuf::Message {
 public:
  MsgEnterCityAck();
  virtual ~MsgEnterCityAck();
  
  MsgEnterCityAck(const MsgEnterCityAck& from);
  
  inline MsgEnterCityAck& operator=(const MsgEnterCityAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterCityAck& default_instance();
  void Swap(MsgEnterCityAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterCityAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterCityAck& from);
  void MergeFrom(const MsgEnterCityAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 cityId = 1;
  inline bool has_cityid() const;
  inline void clear_cityid();
  static const int kCityIdFieldNumber = 1;
  inline ::google::protobuf::uint32 cityid() const;
  inline void set_cityid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 cityid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterCityAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCountryBattleEndNtf : public ::google::protobuf::Message {
 public:
  MsgCountryBattleEndNtf();
  virtual ~MsgCountryBattleEndNtf();
  
  MsgCountryBattleEndNtf(const MsgCountryBattleEndNtf& from);
  
  inline MsgCountryBattleEndNtf& operator=(const MsgCountryBattleEndNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCountryBattleEndNtf& default_instance();
  void Swap(MsgCountryBattleEndNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgCountryBattleEndNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCountryBattleEndNtf& from);
  void MergeFrom(const MsgCountryBattleEndNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCountryBattleEndNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgCountryBattleStartNtf : public ::google::protobuf::Message {
 public:
  MsgCountryBattleStartNtf();
  virtual ~MsgCountryBattleStartNtf();
  
  MsgCountryBattleStartNtf(const MsgCountryBattleStartNtf& from);
  
  inline MsgCountryBattleStartNtf& operator=(const MsgCountryBattleStartNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCountryBattleStartNtf& default_instance();
  void Swap(MsgCountryBattleStartNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgCountryBattleStartNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCountryBattleStartNtf& from);
  void MergeFrom(const MsgCountryBattleStartNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string msg = 1;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 1;
  inline const ::std::string& msg() const;
  inline void set_msg(const ::std::string& value);
  inline void set_msg(const char* value);
  inline void set_msg(const char* value, size_t size);
  inline ::std::string* mutable_msg();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* msg_;
  static const ::std::string _default_msg_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCountryBattleStartNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgSystemHintNtf : public ::google::protobuf::Message {
 public:
  MsgSystemHintNtf();
  virtual ~MsgSystemHintNtf();
  
  MsgSystemHintNtf(const MsgSystemHintNtf& from);
  
  inline MsgSystemHintNtf& operator=(const MsgSystemHintNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSystemHintNtf& default_instance();
  void Swap(MsgSystemHintNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgSystemHintNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgSystemHintNtf& from);
  void MergeFrom(const MsgSystemHintNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 proir = 1;
  inline bool has_proir() const;
  inline void clear_proir();
  static const int kProirFieldNumber = 1;
  inline ::google::protobuf::int32 proir() const;
  inline void set_proir(::google::protobuf::int32 value);
  
  // optional string notice_language_id = 2;
  inline bool has_notice_language_id() const;
  inline void clear_notice_language_id();
  static const int kNoticeLanguageIdFieldNumber = 2;
  inline const ::std::string& notice_language_id() const;
  inline void set_notice_language_id(const ::std::string& value);
  inline void set_notice_language_id(const char* value);
  inline void set_notice_language_id(const char* value, size_t size);
  inline ::std::string* mutable_notice_language_id();
  
  // optional int32 showPostion = 3;
  inline bool has_showpostion() const;
  inline void clear_showpostion();
  static const int kShowPostionFieldNumber = 3;
  inline ::google::protobuf::int32 showpostion() const;
  inline void set_showpostion(::google::protobuf::int32 value);
  
  // repeated string parameters = 4;
  inline int parameters_size() const;
  inline void clear_parameters();
  static const int kParametersFieldNumber = 4;
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& parameters() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_parameters();
  inline const ::std::string& parameters(int index) const;
  inline ::std::string* mutable_parameters(int index);
  inline void set_parameters(int index, const ::std::string& value);
  inline void set_parameters(int index, const char* value);
  inline void set_parameters(int index, const char* value, size_t size);
  inline ::std::string* add_parameters();
  inline void add_parameters(const ::std::string& value);
  inline void add_parameters(const char* value);
  inline void add_parameters(const char* value, size_t size);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 proir_;
  ::std::string* notice_language_id_;
  static const ::std::string _default_notice_language_id_;
  ::google::protobuf::int32 showpostion_;
  ::google::protobuf::RepeatedPtrField< ::std::string> parameters_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgSystemHintNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgReconnectReq : public ::google::protobuf::Message {
 public:
  MsgReconnectReq();
  virtual ~MsgReconnectReq();
  
  MsgReconnectReq(const MsgReconnectReq& from);
  
  inline MsgReconnectReq& operator=(const MsgReconnectReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReconnectReq& default_instance();
  void Swap(MsgReconnectReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgReconnectReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReconnectReq& from);
  void MergeFrom(const MsgReconnectReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgReconnectReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgReconnectAck : public ::google::protobuf::Message {
 public:
  MsgReconnectAck();
  virtual ~MsgReconnectAck();
  
  MsgReconnectAck(const MsgReconnectAck& from);
  
  inline MsgReconnectAck& operator=(const MsgReconnectAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReconnectAck& default_instance();
  void Swap(MsgReconnectAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgReconnectAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReconnectAck& from);
  void MergeFrom(const MsgReconnectAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgReconnectAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgTransReq : public ::google::protobuf::Message {
 public:
  MsgTransReq();
  virtual ~MsgTransReq();
  
  MsgTransReq(const MsgTransReq& from);
  
  inline MsgTransReq& operator=(const MsgTransReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTransReq& default_instance();
  void Swap(MsgTransReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgTransReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTransReq& from);
  void MergeFrom(const MsgTransReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTransReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgTransAck : public ::google::protobuf::Message {
 public:
  MsgTransAck();
  virtual ~MsgTransAck();
  
  MsgTransAck(const MsgTransAck& from);
  
  inline MsgTransAck& operator=(const MsgTransAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTransAck& default_instance();
  void Swap(MsgTransAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgTransAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTransAck& from);
  void MergeFrom(const MsgTransAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTransAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgTriggerMonsterNtf : public ::google::protobuf::Message {
 public:
  MsgTriggerMonsterNtf();
  virtual ~MsgTriggerMonsterNtf();
  
  MsgTriggerMonsterNtf(const MsgTriggerMonsterNtf& from);
  
  inline MsgTriggerMonsterNtf& operator=(const MsgTriggerMonsterNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTriggerMonsterNtf& default_instance();
  void Swap(MsgTriggerMonsterNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgTriggerMonsterNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgTriggerMonsterNtf& from);
  void MergeFrom(const MsgTriggerMonsterNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 againstFormId = 1;
  inline bool has_againstformid() const;
  inline void clear_againstformid();
  static const int kAgainstFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 againstformid() const;
  inline void set_againstformid(::google::protobuf::uint32 value);
  
  // required int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // required uint64 fightId = 3;
  inline bool has_fightid() const;
  inline void clear_fightid();
  static const int kFightIdFieldNumber = 3;
  inline ::google::protobuf::uint64 fightid() const;
  inline void set_fightid(::google::protobuf::uint64 value);
  
  // required .IGameProto.FightSide enemySide = 4;
  inline bool has_enemyside() const;
  inline void clear_enemyside();
  static const int kEnemySideFieldNumber = 4;
  inline const ::IGameProto::FightSide& enemyside() const;
  inline ::IGameProto::FightSide* mutable_enemyside();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 againstformid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint64 fightid_;
  ::IGameProto::FightSide* enemyside_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgTriggerMonsterNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeRoleModeReq : public ::google::protobuf::Message {
 public:
  MsgChangeRoleModeReq();
  virtual ~MsgChangeRoleModeReq();
  
  MsgChangeRoleModeReq(const MsgChangeRoleModeReq& from);
  
  inline MsgChangeRoleModeReq& operator=(const MsgChangeRoleModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeRoleModeReq& default_instance();
  void Swap(MsgChangeRoleModeReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeRoleModeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeRoleModeReq& from);
  void MergeFrom(const MsgChangeRoleModeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.ROLE_MODE roleMode = 1;
  inline bool has_rolemode() const;
  inline void clear_rolemode();
  static const int kRoleModeFieldNumber = 1;
  inline IGameProto::ROLE_MODE rolemode() const;
  inline void set_rolemode(IGameProto::ROLE_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int rolemode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeRoleModeReq* default_instance_;
};
// -------------------------------------------------------------------

class RoleAttr : public ::google::protobuf::Message {
 public:
  RoleAttr();
  virtual ~RoleAttr();
  
  RoleAttr(const RoleAttr& from);
  
  inline RoleAttr& operator=(const RoleAttr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleAttr& default_instance();
  void Swap(RoleAttr* other);
  
  // implements Message ----------------------------------------------
  
  RoleAttr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleAttr& from);
  void MergeFrom(const RoleAttr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.ROLE_ATTR_TYPE attrType = 1;
  inline bool has_attrtype() const;
  inline void clear_attrtype();
  static const int kAttrTypeFieldNumber = 1;
  inline IGameProto::ROLE_ATTR_TYPE attrtype() const;
  inline void set_attrtype(IGameProto::ROLE_ATTR_TYPE value);
  
  // optional uint32 attrVal = 2;
  inline bool has_attrval() const;
  inline void clear_attrval();
  static const int kAttrValFieldNumber = 2;
  inline ::google::protobuf::uint32 attrval() const;
  inline void set_attrval(::google::protobuf::uint32 value);
  
  // optional uint32 roleId = 3;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int attrtype_;
  ::google::protobuf::uint32 attrval_;
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static RoleAttr* default_instance_;
};
// -------------------------------------------------------------------

class MsgRoleAttrChangeNtf : public ::google::protobuf::Message {
 public:
  MsgRoleAttrChangeNtf();
  virtual ~MsgRoleAttrChangeNtf();
  
  MsgRoleAttrChangeNtf(const MsgRoleAttrChangeNtf& from);
  
  inline MsgRoleAttrChangeNtf& operator=(const MsgRoleAttrChangeNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRoleAttrChangeNtf& default_instance();
  void Swap(MsgRoleAttrChangeNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgRoleAttrChangeNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRoleAttrChangeNtf& from);
  void MergeFrom(const MsgRoleAttrChangeNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.RoleAttr attrs = 1;
  inline int attrs_size() const;
  inline void clear_attrs();
  static const int kAttrsFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleAttr >& attrs() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleAttr >* mutable_attrs();
  inline const ::IGameProto::RoleAttr& attrs(int index) const;
  inline ::IGameProto::RoleAttr* mutable_attrs(int index);
  inline ::IGameProto::RoleAttr* add_attrs();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleAttr > attrs_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRoleAttrChangeNtf* default_instance_;
};
// -------------------------------------------------------------------

class MonsterId : public ::google::protobuf::Message {
 public:
  MonsterId();
  virtual ~MonsterId();
  
  MonsterId(const MonsterId& from);
  
  inline MonsterId& operator=(const MonsterId& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MonsterId& default_instance();
  void Swap(MonsterId* other);
  
  // implements Message ----------------------------------------------
  
  MonsterId* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MonsterId& from);
  void MergeFrom(const MonsterId& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 creatureId = 1;
  inline bool has_creatureid() const;
  inline void clear_creatureid();
  static const int kCreatureIdFieldNumber = 1;
  inline ::google::protobuf::uint32 creatureid() const;
  inline void set_creatureid(::google::protobuf::uint32 value);
  
  // optional uint32 NpcId = 2;
  inline bool has_npcid() const;
  inline void clear_npcid();
  static const int kNpcIdFieldNumber = 2;
  inline ::google::protobuf::uint32 npcid() const;
  inline void set_npcid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 creatureid_;
  ::google::protobuf::uint32 npcid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MonsterId* default_instance_;
};
// -------------------------------------------------------------------

class MsgMonsterListNtf : public ::google::protobuf::Message {
 public:
  MsgMonsterListNtf();
  virtual ~MsgMonsterListNtf();
  
  MsgMonsterListNtf(const MsgMonsterListNtf& from);
  
  inline MsgMonsterListNtf& operator=(const MsgMonsterListNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMonsterListNtf& default_instance();
  void Swap(MsgMonsterListNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgMonsterListNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMonsterListNtf& from);
  void MergeFrom(const MsgMonsterListNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .IGameProto.MonsterId monsterArray = 1;
  inline int monsterarray_size() const;
  inline void clear_monsterarray();
  static const int kMonsterArrayFieldNumber = 1;
  inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterId >& monsterarray() const;
  inline ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterId >* mutable_monsterarray();
  inline const ::IGameProto::MonsterId& monsterarray(int index) const;
  inline ::IGameProto::MonsterId* mutable_monsterarray(int index);
  inline ::IGameProto::MonsterId* add_monsterarray();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterId > monsterarray_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMonsterListNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgReleaseSkillReq : public ::google::protobuf::Message {
 public:
  MsgReleaseSkillReq();
  virtual ~MsgReleaseSkillReq();
  
  MsgReleaseSkillReq(const MsgReleaseSkillReq& from);
  
  inline MsgReleaseSkillReq& operator=(const MsgReleaseSkillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReleaseSkillReq& default_instance();
  void Swap(MsgReleaseSkillReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgReleaseSkillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReleaseSkillReq& from);
  void MergeFrom(const MsgReleaseSkillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional float target_pos_x = 2;
  inline bool has_target_pos_x() const;
  inline void clear_target_pos_x();
  static const int kTargetPosXFieldNumber = 2;
  inline float target_pos_x() const;
  inline void set_target_pos_x(float value);
  
  // optional float target_pos_y = 3;
  inline bool has_target_pos_y() const;
  inline void clear_target_pos_y();
  static const int kTargetPosYFieldNumber = 3;
  inline float target_pos_y() const;
  inline void set_target_pos_y(float value);
  
  // optional uint32 target_id = 4;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 4;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // optional .IGameProto.TARGET_TYPE target_type = 5;
  inline bool has_target_type() const;
  inline void clear_target_type();
  static const int kTargetTypeFieldNumber = 5;
  inline IGameProto::TARGET_TYPE target_type() const;
  inline void set_target_type(IGameProto::TARGET_TYPE value);
  
  // optional uint32 param = 6;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 6;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  float target_pos_x_;
  float target_pos_y_;
  ::google::protobuf::uint32 target_id_;
  int target_type_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgReleaseSkillReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgReleaseSkillAck : public ::google::protobuf::Message {
 public:
  MsgReleaseSkillAck();
  virtual ~MsgReleaseSkillAck();
  
  MsgReleaseSkillAck(const MsgReleaseSkillAck& from);
  
  inline MsgReleaseSkillAck& operator=(const MsgReleaseSkillAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReleaseSkillAck& default_instance();
  void Swap(MsgReleaseSkillAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgReleaseSkillAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReleaseSkillAck& from);
  void MergeFrom(const MsgReleaseSkillAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 result = 2;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 2;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgReleaseSkillAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgReleaseSkillNtf : public ::google::protobuf::Message {
 public:
  MsgReleaseSkillNtf();
  virtual ~MsgReleaseSkillNtf();
  
  MsgReleaseSkillNtf(const MsgReleaseSkillNtf& from);
  
  inline MsgReleaseSkillNtf& operator=(const MsgReleaseSkillNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReleaseSkillNtf& default_instance();
  void Swap(MsgReleaseSkillNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgReleaseSkillNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgReleaseSkillNtf& from);
  void MergeFrom(const MsgReleaseSkillNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::uint32 skillid() const;
  inline void set_skillid(::google::protobuf::uint32 value);
  
  // optional uint32 releaser_role_id = 2;
  inline bool has_releaser_role_id() const;
  inline void clear_releaser_role_id();
  static const int kReleaserRoleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 releaser_role_id() const;
  inline void set_releaser_role_id(::google::protobuf::uint32 value);
  
  // optional float target_pos_x = 3;
  inline bool has_target_pos_x() const;
  inline void clear_target_pos_x();
  static const int kTargetPosXFieldNumber = 3;
  inline float target_pos_x() const;
  inline void set_target_pos_x(float value);
  
  // optional float target_pos_y = 4;
  inline bool has_target_pos_y() const;
  inline void clear_target_pos_y();
  static const int kTargetPosYFieldNumber = 4;
  inline float target_pos_y() const;
  inline void set_target_pos_y(float value);
  
  // optional uint32 target_id = 5;
  inline bool has_target_id() const;
  inline void clear_target_id();
  static const int kTargetIdFieldNumber = 5;
  inline ::google::protobuf::uint32 target_id() const;
  inline void set_target_id(::google::protobuf::uint32 value);
  
  // optional .IGameProto.TARGET_TYPE target_type = 6;
  inline bool has_target_type() const;
  inline void clear_target_type();
  static const int kTargetTypeFieldNumber = 6;
  inline IGameProto::TARGET_TYPE target_type() const;
  inline void set_target_type(IGameProto::TARGET_TYPE value);
  
  // optional uint32 param = 7;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 7;
  inline ::google::protobuf::uint32 param() const;
  inline void set_param(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 skillid_;
  ::google::protobuf::uint32 releaser_role_id_;
  float target_pos_x_;
  float target_pos_y_;
  ::google::protobuf::uint32 target_id_;
  int target_type_;
  ::google::protobuf::uint32 param_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgReleaseSkillNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeModeReq : public ::google::protobuf::Message {
 public:
  MsgChangeModeReq();
  virtual ~MsgChangeModeReq();
  
  MsgChangeModeReq(const MsgChangeModeReq& from);
  
  inline MsgChangeModeReq& operator=(const MsgChangeModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeModeReq& default_instance();
  void Swap(MsgChangeModeReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeModeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeModeReq& from);
  void MergeFrom(const MsgChangeModeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.EM_PK_MODE mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeModeReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeModeAck : public ::google::protobuf::Message {
 public:
  MsgChangeModeAck();
  virtual ~MsgChangeModeAck();
  
  MsgChangeModeAck(const MsgChangeModeAck& from);
  
  inline MsgChangeModeAck& operator=(const MsgChangeModeAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeModeAck& default_instance();
  void Swap(MsgChangeModeAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeModeAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeModeAck& from);
  void MergeFrom(const MsgChangeModeAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeModeAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgChangeModeNtf : public ::google::protobuf::Message {
 public:
  MsgChangeModeNtf();
  virtual ~MsgChangeModeNtf();
  
  MsgChangeModeNtf(const MsgChangeModeNtf& from);
  
  inline MsgChangeModeNtf& operator=(const MsgChangeModeNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgChangeModeNtf& default_instance();
  void Swap(MsgChangeModeNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgChangeModeNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgChangeModeNtf& from);
  void MergeFrom(const MsgChangeModeNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.EM_PK_MODE mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgChangeModeNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillReq : public ::google::protobuf::Message {
 public:
  MsgPlayerKillReq();
  virtual ~MsgPlayerKillReq();
  
  MsgPlayerKillReq(const MsgPlayerKillReq& from);
  
  inline MsgPlayerKillReq& operator=(const MsgPlayerKillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillReq& default_instance();
  void Swap(MsgPlayerKillReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillReq& from);
  void MergeFrom(const MsgPlayerKillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional .IGameProto.EM_PK_MODE mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillAck : public ::google::protobuf::Message {
 public:
  MsgPlayerKillAck();
  virtual ~MsgPlayerKillAck();
  
  MsgPlayerKillAck(const MsgPlayerKillAck& from);
  
  inline MsgPlayerKillAck& operator=(const MsgPlayerKillAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillAck& default_instance();
  void Swap(MsgPlayerKillAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillAck& from);
  void MergeFrom(const MsgPlayerKillAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillNtf : public ::google::protobuf::Message {
 public:
  MsgPlayerKillNtf();
  virtual ~MsgPlayerKillNtf();
  
  MsgPlayerKillNtf(const MsgPlayerKillNtf& from);
  
  inline MsgPlayerKillNtf& operator=(const MsgPlayerKillNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillNtf& default_instance();
  void Swap(MsgPlayerKillNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillNtf& from);
  void MergeFrom(const MsgPlayerKillNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional .IGameProto.EM_PK_MODE mode = 3;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 3;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgCancelPlayerKillReq : public ::google::protobuf::Message {
 public:
  MsgCancelPlayerKillReq();
  virtual ~MsgCancelPlayerKillReq();
  
  MsgCancelPlayerKillReq(const MsgCancelPlayerKillReq& from);
  
  inline MsgCancelPlayerKillReq& operator=(const MsgCancelPlayerKillReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelPlayerKillReq& default_instance();
  void Swap(MsgCancelPlayerKillReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgCancelPlayerKillReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCancelPlayerKillReq& from);
  void MergeFrom(const MsgCancelPlayerKillReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional .IGameProto.EM_PK_MODE mode = 3;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 3;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCancelPlayerKillReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgCancelPlayerKillAck : public ::google::protobuf::Message {
 public:
  MsgCancelPlayerKillAck();
  virtual ~MsgCancelPlayerKillAck();
  
  MsgCancelPlayerKillAck(const MsgCancelPlayerKillAck& from);
  
  inline MsgCancelPlayerKillAck& operator=(const MsgCancelPlayerKillAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelPlayerKillAck& default_instance();
  void Swap(MsgCancelPlayerKillAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgCancelPlayerKillAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCancelPlayerKillAck& from);
  void MergeFrom(const MsgCancelPlayerKillAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCancelPlayerKillAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgCancelPlayerKillNtf : public ::google::protobuf::Message {
 public:
  MsgCancelPlayerKillNtf();
  virtual ~MsgCancelPlayerKillNtf();
  
  MsgCancelPlayerKillNtf(const MsgCancelPlayerKillNtf& from);
  
  inline MsgCancelPlayerKillNtf& operator=(const MsgCancelPlayerKillNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelPlayerKillNtf& default_instance();
  void Swap(MsgCancelPlayerKillNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgCancelPlayerKillNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgCancelPlayerKillNtf& from);
  void MergeFrom(const MsgCancelPlayerKillNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional .IGameProto.EM_PK_MODE mode = 3;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 3;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgCancelPlayerKillNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillAnswerReq : public ::google::protobuf::Message {
 public:
  MsgPlayerKillAnswerReq();
  virtual ~MsgPlayerKillAnswerReq();
  
  MsgPlayerKillAnswerReq(const MsgPlayerKillAnswerReq& from);
  
  inline MsgPlayerKillAnswerReq& operator=(const MsgPlayerKillAnswerReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillAnswerReq& default_instance();
  void Swap(MsgPlayerKillAnswerReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillAnswerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillAnswerReq& from);
  void MergeFrom(const MsgPlayerKillAnswerReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional uint32 answer_type = 2;
  inline bool has_answer_type() const;
  inline void clear_answer_type();
  static const int kAnswerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 answer_type() const;
  inline void set_answer_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::uint32 answer_type_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillAnswerReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillAnswerAck : public ::google::protobuf::Message {
 public:
  MsgPlayerKillAnswerAck();
  virtual ~MsgPlayerKillAnswerAck();
  
  MsgPlayerKillAnswerAck(const MsgPlayerKillAnswerAck& from);
  
  inline MsgPlayerKillAnswerAck& operator=(const MsgPlayerKillAnswerAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillAnswerAck& default_instance();
  void Swap(MsgPlayerKillAnswerAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillAnswerAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillAnswerAck& from);
  void MergeFrom(const MsgPlayerKillAnswerAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillAnswerAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgPlayerKillAnswerNtf : public ::google::protobuf::Message {
 public:
  MsgPlayerKillAnswerNtf();
  virtual ~MsgPlayerKillAnswerNtf();
  
  MsgPlayerKillAnswerNtf(const MsgPlayerKillAnswerNtf& from);
  
  inline MsgPlayerKillAnswerNtf& operator=(const MsgPlayerKillAnswerNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPlayerKillAnswerNtf& default_instance();
  void Swap(MsgPlayerKillAnswerNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgPlayerKillAnswerNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgPlayerKillAnswerNtf& from);
  void MergeFrom(const MsgPlayerKillAnswerNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // optional uint32 answer_type = 2;
  inline bool has_answer_type() const;
  inline void clear_answer_type();
  static const int kAnswerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 answer_type() const;
  inline void set_answer_type(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 answer_type_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgPlayerKillAnswerNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterFightReq : public ::google::protobuf::Message {
 public:
  MsgEnterFightReq();
  virtual ~MsgEnterFightReq();
  
  MsgEnterFightReq(const MsgEnterFightReq& from);
  
  inline MsgEnterFightReq& operator=(const MsgEnterFightReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterFightReq& default_instance();
  void Swap(MsgEnterFightReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterFightReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterFightReq& from);
  void MergeFrom(const MsgEnterFightReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional .IGameProto.EM_PK_MODE mode = 2;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 2;
  inline IGameProto::EM_PK_MODE mode() const;
  inline void set_mode(IGameProto::EM_PK_MODE value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  int mode_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterFightReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgEnterFightAck : public ::google::protobuf::Message {
 public:
  MsgEnterFightAck();
  virtual ~MsgEnterFightAck();
  
  MsgEnterFightAck(const MsgEnterFightAck& from);
  
  inline MsgEnterFightAck& operator=(const MsgEnterFightAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgEnterFightAck& default_instance();
  void Swap(MsgEnterFightAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgEnterFightAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgEnterFightAck& from);
  void MergeFrom(const MsgEnterFightAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 result = 1;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 1;
  inline ::google::protobuf::uint32 result() const;
  inline void set_result(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 result_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgEnterFightAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgQueryAgainstReq : public ::google::protobuf::Message {
 public:
  MsgQueryAgainstReq();
  virtual ~MsgQueryAgainstReq();
  
  MsgQueryAgainstReq(const MsgQueryAgainstReq& from);
  
  inline MsgQueryAgainstReq& operator=(const MsgQueryAgainstReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryAgainstReq& default_instance();
  void Swap(MsgQueryAgainstReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgQueryAgainstReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryAgainstReq& from);
  void MergeFrom(const MsgQueryAgainstReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 creatureId = 1;
  inline bool has_creatureid() const;
  inline void clear_creatureid();
  static const int kCreatureIdFieldNumber = 1;
  inline ::google::protobuf::uint32 creatureid() const;
  inline void set_creatureid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 creatureid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgQueryAgainstReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgQueryAgainstAck : public ::google::protobuf::Message {
 public:
  MsgQueryAgainstAck();
  virtual ~MsgQueryAgainstAck();
  
  MsgQueryAgainstAck(const MsgQueryAgainstAck& from);
  
  inline MsgQueryAgainstAck& operator=(const MsgQueryAgainstAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryAgainstAck& default_instance();
  void Swap(MsgQueryAgainstAck* other);
  
  // implements Message ----------------------------------------------
  
  MsgQueryAgainstAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgQueryAgainstAck& from);
  void MergeFrom(const MsgQueryAgainstAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 againstFormId = 1;
  inline bool has_againstformid() const;
  inline void clear_againstformid();
  static const int kAgainstFormIdFieldNumber = 1;
  inline ::google::protobuf::uint32 againstformid() const;
  inline void set_againstformid(::google::protobuf::uint32 value);
  
  // optional .IGameProto.FightSide enemySide = 2;
  inline bool has_enemyside() const;
  inline void clear_enemyside();
  static const int kEnemySideFieldNumber = 2;
  inline const ::IGameProto::FightSide& enemyside() const;
  inline ::IGameProto::FightSide* mutable_enemyside();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 againstformid_;
  ::IGameProto::FightSide* enemyside_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgQueryAgainstAck* default_instance_;
};
// -------------------------------------------------------------------

class MsgAreaIdNtf : public ::google::protobuf::Message {
 public:
  MsgAreaIdNtf();
  virtual ~MsgAreaIdNtf();
  
  MsgAreaIdNtf(const MsgAreaIdNtf& from);
  
  inline MsgAreaIdNtf& operator=(const MsgAreaIdNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAreaIdNtf& default_instance();
  void Swap(MsgAreaIdNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgAreaIdNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgAreaIdNtf& from);
  void MergeFrom(const MsgAreaIdNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 areaId = 1;
  inline bool has_areaid() const;
  inline void clear_areaid();
  static const int kAreaIdFieldNumber = 1;
  inline ::google::protobuf::uint32 areaid() const;
  inline void set_areaid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 areaid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgAreaIdNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgMonsterLanguageNtf : public ::google::protobuf::Message {
 public:
  MsgMonsterLanguageNtf();
  virtual ~MsgMonsterLanguageNtf();
  
  MsgMonsterLanguageNtf(const MsgMonsterLanguageNtf& from);
  
  inline MsgMonsterLanguageNtf& operator=(const MsgMonsterLanguageNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMonsterLanguageNtf& default_instance();
  void Swap(MsgMonsterLanguageNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgMonsterLanguageNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgMonsterLanguageNtf& from);
  void MergeFrom(const MsgMonsterLanguageNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 creatureId = 3;
  inline bool has_creatureid() const;
  inline void clear_creatureid();
  static const int kCreatureIdFieldNumber = 3;
  inline ::google::protobuf::int32 creatureid() const;
  inline void set_creatureid(::google::protobuf::int32 value);
  
  // optional int32 proir = 1;
  inline bool has_proir() const;
  inline void clear_proir();
  static const int kProirFieldNumber = 1;
  inline ::google::protobuf::int32 proir() const;
  inline void set_proir(::google::protobuf::int32 value);
  
  // optional string notice_language_id = 2;
  inline bool has_notice_language_id() const;
  inline void clear_notice_language_id();
  static const int kNoticeLanguageIdFieldNumber = 2;
  inline const ::std::string& notice_language_id() const;
  inline void set_notice_language_id(const ::std::string& value);
  inline void set_notice_language_id(const char* value);
  inline void set_notice_language_id(const char* value, size_t size);
  inline ::std::string* mutable_notice_language_id();
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 creatureid_;
  ::google::protobuf::int32 proir_;
  ::std::string* notice_language_id_;
  static const ::std::string _default_notice_language_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgMonsterLanguageNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgDeadNtf : public ::google::protobuf::Message {
 public:
  MsgDeadNtf();
  virtual ~MsgDeadNtf();
  
  MsgDeadNtf(const MsgDeadNtf& from);
  
  inline MsgDeadNtf& operator=(const MsgDeadNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeadNtf& default_instance();
  void Swap(MsgDeadNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgDeadNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgDeadNtf& from);
  void MergeFrom(const MsgDeadNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgDeadNtf* default_instance_;
};
// -------------------------------------------------------------------

class MsgRiviveReq : public ::google::protobuf::Message {
 public:
  MsgRiviveReq();
  virtual ~MsgRiviveReq();
  
  MsgRiviveReq(const MsgRiviveReq& from);
  
  inline MsgRiviveReq& operator=(const MsgRiviveReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRiviveReq& default_instance();
  void Swap(MsgRiviveReq* other);
  
  // implements Message ----------------------------------------------
  
  MsgRiviveReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRiviveReq& from);
  void MergeFrom(const MsgRiviveReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .IGameProto.RIVIVE_MODE mode = 1;
  inline bool has_mode() const;
  inline void clear_mode();
  static const int kModeFieldNumber = 1;
  inline IGameProto::RIVIVE_MODE mode() const;
  inline void set_mode(IGameProto::RIVIVE_MODE value);
  
  // optional uint32 country_id = 2;
  inline bool has_country_id() const;
  inline void clear_country_id();
  static const int kCountryIdFieldNumber = 2;
  inline ::google::protobuf::uint32 country_id() const;
  inline void set_country_id(::google::protobuf::uint32 value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  int mode_;
  ::google::protobuf::uint32 country_id_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRiviveReq* default_instance_;
};
// -------------------------------------------------------------------

class MsgRiviveNtf : public ::google::protobuf::Message {
 public:
  MsgRiviveNtf();
  virtual ~MsgRiviveNtf();
  
  MsgRiviveNtf(const MsgRiviveNtf& from);
  
  inline MsgRiviveNtf& operator=(const MsgRiviveNtf& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRiviveNtf& default_instance();
  void Swap(MsgRiviveNtf* other);
  
  // implements Message ----------------------------------------------
  
  MsgRiviveNtf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MsgRiviveNtf& from);
  void MergeFrom(const MsgRiviveNtf& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const { _cached_size_ = size; }
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 roleid() const;
  inline void set_roleid(::google::protobuf::uint32 value);
  
  // optional float x = 2;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 2;
  inline float x() const;
  inline void set_x(float value);
  
  // optional float y = 3;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 3;
  inline float y() const;
  inline void set_y(float value);
  
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 roleid_;
  float x_;
  float y_;
  friend void  protobuf_AddDesc_IGame_2eproto();
  friend void protobuf_AssignDesc_IGame_2eproto();
  friend void protobuf_ShutdownFile_IGame_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static MsgRiviveNtf* default_instance_;
};
// ===================================================================


// ===================================================================


// ===================================================================

// MsgHeartBeat

// optional float lastSendTime = 1;
inline bool MsgHeartBeat::has_lastsendtime() const {
  return _has_bit(0);
}
inline void MsgHeartBeat::clear_lastsendtime() {
  lastsendtime_ = 0;
  _clear_bit(0);
}
inline float MsgHeartBeat::lastsendtime() const {
  return lastsendtime_;
}
inline void MsgHeartBeat::set_lastsendtime(float value) {
  _set_bit(0);
  lastsendtime_ = value;
}

// -------------------------------------------------------------------

// MsgLoginReq

// required string loginName = 1;
inline bool MsgLoginReq::has_loginname() const {
  return _has_bit(0);
}
inline void MsgLoginReq::clear_loginname() {
  if (loginname_ != &_default_loginname_) {
    loginname_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgLoginReq::loginname() const {
  return *loginname_;
}
inline void MsgLoginReq::set_loginname(const ::std::string& value) {
  _set_bit(0);
  if (loginname_ == &_default_loginname_) {
    loginname_ = new ::std::string;
  }
  loginname_->assign(value);
}
inline void MsgLoginReq::set_loginname(const char* value) {
  _set_bit(0);
  if (loginname_ == &_default_loginname_) {
    loginname_ = new ::std::string;
  }
  loginname_->assign(value);
}
inline void MsgLoginReq::set_loginname(const char* value, size_t size) {
  _set_bit(0);
  if (loginname_ == &_default_loginname_) {
    loginname_ = new ::std::string;
  }
  loginname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgLoginReq::mutable_loginname() {
  _set_bit(0);
  if (loginname_ == &_default_loginname_) {
    loginname_ = new ::std::string;
  }
  return loginname_;
}

// -------------------------------------------------------------------

// RoleInfo

// required uint32 roleId = 1;
inline bool RoleInfo::has_roleid() const {
  return _has_bit(0);
}
inline void RoleInfo::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 RoleInfo::roleid() const {
  return roleid_;
}
inline void RoleInfo::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// required string roleName = 2;
inline bool RoleInfo::has_rolename() const {
  return _has_bit(1);
}
inline void RoleInfo::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& RoleInfo::rolename() const {
  return *rolename_;
}
inline void RoleInfo::set_rolename(const ::std::string& value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void RoleInfo::set_rolename(const char* value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void RoleInfo::set_rolename(const char* value, size_t size) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleInfo::mutable_rolename() {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// required int32 roleType = 3;
inline bool RoleInfo::has_roletype() const {
  return _has_bit(2);
}
inline void RoleInfo::clear_roletype() {
  roletype_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 RoleInfo::roletype() const {
  return roletype_;
}
inline void RoleInfo::set_roletype(::google::protobuf::int32 value) {
  _set_bit(2);
  roletype_ = value;
}

// required uint32 speed = 4;
inline bool RoleInfo::has_speed() const {
  return _has_bit(3);
}
inline void RoleInfo::clear_speed() {
  speed_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 RoleInfo::speed() const {
  return speed_;
}
inline void RoleInfo::set_speed(::google::protobuf::uint32 value) {
  _set_bit(3);
  speed_ = value;
}

// optional uint32 level = 5;
inline bool RoleInfo::has_level() const {
  return _has_bit(4);
}
inline void RoleInfo::clear_level() {
  level_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 RoleInfo::level() const {
  return level_;
}
inline void RoleInfo::set_level(::google::protobuf::uint32 value) {
  _set_bit(4);
  level_ = value;
}

// optional uint64 gold = 6;
inline bool RoleInfo::has_gold() const {
  return _has_bit(5);
}
inline void RoleInfo::clear_gold() {
  gold_ = GOOGLE_ULONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::uint64 RoleInfo::gold() const {
  return gold_;
}
inline void RoleInfo::set_gold(::google::protobuf::uint64 value) {
  _set_bit(5);
  gold_ = value;
}

// optional uint64 silver = 7;
inline bool RoleInfo::has_silver() const {
  return _has_bit(6);
}
inline void RoleInfo::clear_silver() {
  silver_ = GOOGLE_ULONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::uint64 RoleInfo::silver() const {
  return silver_;
}
inline void RoleInfo::set_silver(::google::protobuf::uint64 value) {
  _set_bit(6);
  silver_ = value;
}

// optional uint64 copper = 8;
inline bool RoleInfo::has_copper() const {
  return _has_bit(7);
}
inline void RoleInfo::clear_copper() {
  copper_ = GOOGLE_ULONGLONG(0);
  _clear_bit(7);
}
inline ::google::protobuf::uint64 RoleInfo::copper() const {
  return copper_;
}
inline void RoleInfo::set_copper(::google::protobuf::uint64 value) {
  _set_bit(7);
  copper_ = value;
}

// optional uint32 country_id = 9;
inline bool RoleInfo::has_country_id() const {
  return _has_bit(8);
}
inline void RoleInfo::clear_country_id() {
  country_id_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 RoleInfo::country_id() const {
  return country_id_;
}
inline void RoleInfo::set_country_id(::google::protobuf::uint32 value) {
  _set_bit(8);
  country_id_ = value;
}

// optional uint32 army_id = 10;
inline bool RoleInfo::has_army_id() const {
  return _has_bit(9);
}
inline void RoleInfo::clear_army_id() {
  army_id_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 RoleInfo::army_id() const {
  return army_id_;
}
inline void RoleInfo::set_army_id(::google::protobuf::uint32 value) {
  _set_bit(9);
  army_id_ = value;
}

// optional uint32 army_member_type = 11;
inline bool RoleInfo::has_army_member_type() const {
  return _has_bit(10);
}
inline void RoleInfo::clear_army_member_type() {
  army_member_type_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 RoleInfo::army_member_type() const {
  return army_member_type_;
}
inline void RoleInfo::set_army_member_type(::google::protobuf::uint32 value) {
  _set_bit(10);
  army_member_type_ = value;
}

// optional uint32 army_officer_type = 12;
inline bool RoleInfo::has_army_officer_type() const {
  return _has_bit(11);
}
inline void RoleInfo::clear_army_officer_type() {
  army_officer_type_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 RoleInfo::army_officer_type() const {
  return army_officer_type_;
}
inline void RoleInfo::set_army_officer_type(::google::protobuf::uint32 value) {
  _set_bit(11);
  army_officer_type_ = value;
}

// repeated uint32 offices = 13;
inline int RoleInfo::offices_size() const {
  return offices_.size();
}
inline void RoleInfo::clear_offices() {
  offices_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RoleInfo::offices() const {
  return offices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RoleInfo::mutable_offices() {
  return &offices_;
}
inline ::google::protobuf::uint32 RoleInfo::offices(int index) const {
  return offices_.Get(index);
}
inline void RoleInfo::set_offices(int index, ::google::protobuf::uint32 value) {
  offices_.Set(index, value);
}
inline void RoleInfo::add_offices(::google::protobuf::uint32 value) {
  offices_.Add(value);
}

// optional .IGameProto.EM_PK_MODE pkmode = 14;
inline bool RoleInfo::has_pkmode() const {
  return _has_bit(13);
}
inline void RoleInfo::clear_pkmode() {
  pkmode_ = 1;
  _clear_bit(13);
}
inline IGameProto::EM_PK_MODE RoleInfo::pkmode() const {
  return static_cast< IGameProto::EM_PK_MODE >(pkmode_);
}
inline void RoleInfo::set_pkmode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(13);
  pkmode_ = value;
}

// -------------------------------------------------------------------

// ServerInfo

// required string zoneName = 1;
inline bool ServerInfo::has_zonename() const {
  return _has_bit(0);
}
inline void ServerInfo::clear_zonename() {
  if (zonename_ != &_default_zonename_) {
    zonename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& ServerInfo::zonename() const {
  return *zonename_;
}
inline void ServerInfo::set_zonename(const ::std::string& value) {
  _set_bit(0);
  if (zonename_ == &_default_zonename_) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(value);
}
inline void ServerInfo::set_zonename(const char* value) {
  _set_bit(0);
  if (zonename_ == &_default_zonename_) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(value);
}
inline void ServerInfo::set_zonename(const char* value, size_t size) {
  _set_bit(0);
  if (zonename_ == &_default_zonename_) {
    zonename_ = new ::std::string;
  }
  zonename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerInfo::mutable_zonename() {
  _set_bit(0);
  if (zonename_ == &_default_zonename_) {
    zonename_ = new ::std::string;
  }
  return zonename_;
}

// required uint32 zoneId = 2;
inline bool ServerInfo::has_zoneid() const {
  return _has_bit(1);
}
inline void ServerInfo::clear_zoneid() {
  zoneid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ServerInfo::zoneid() const {
  return zoneid_;
}
inline void ServerInfo::set_zoneid(::google::protobuf::uint32 value) {
  _set_bit(1);
  zoneid_ = value;
}

// required .IGameProto.ServerState serverState = 3;
inline bool ServerInfo::has_serverstate() const {
  return _has_bit(2);
}
inline void ServerInfo::clear_serverstate() {
  serverstate_ = 0;
  _clear_bit(2);
}
inline IGameProto::ServerState ServerInfo::serverstate() const {
  return static_cast< IGameProto::ServerState >(serverstate_);
}
inline void ServerInfo::set_serverstate(IGameProto::ServerState value) {
  GOOGLE_DCHECK(IGameProto::ServerState_IsValid(value));
  _set_bit(2);
  serverstate_ = value;
}

// required string ip = 4;
inline bool ServerInfo::has_ip() const {
  return _has_bit(3);
}
inline void ServerInfo::clear_ip() {
  if (ip_ != &_default_ip_) {
    ip_->clear();
  }
  _clear_bit(3);
}
inline const ::std::string& ServerInfo::ip() const {
  return *ip_;
}
inline void ServerInfo::set_ip(const ::std::string& value) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void ServerInfo::set_ip(const char* value) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void ServerInfo::set_ip(const char* value, size_t size) {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ServerInfo::mutable_ip() {
  _set_bit(3);
  if (ip_ == &_default_ip_) {
    ip_ = new ::std::string;
  }
  return ip_;
}

// required int32 port = 5;
inline bool ServerInfo::has_port() const {
  return _has_bit(4);
}
inline void ServerInfo::clear_port() {
  port_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 ServerInfo::port() const {
  return port_;
}
inline void ServerInfo::set_port(::google::protobuf::int32 value) {
  _set_bit(4);
  port_ = value;
}

// repeated .IGameProto.RoleInfo rolesList = 6;
inline int ServerInfo::roleslist_size() const {
  return roleslist_.size();
}
inline void ServerInfo::clear_roleslist() {
  roleslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleInfo >&
ServerInfo::roleslist() const {
  return roleslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleInfo >*
ServerInfo::mutable_roleslist() {
  return &roleslist_;
}
inline const ::IGameProto::RoleInfo& ServerInfo::roleslist(int index) const {
  return roleslist_.Get(index);
}
inline ::IGameProto::RoleInfo* ServerInfo::mutable_roleslist(int index) {
  return roleslist_.Mutable(index);
}
inline ::IGameProto::RoleInfo* ServerInfo::add_roleslist() {
  return roleslist_.Add();
}

// optional uint64 lastUpdateTime = 99;
inline bool ServerInfo::has_lastupdatetime() const {
  return _has_bit(6);
}
inline void ServerInfo::clear_lastupdatetime() {
  lastupdatetime_ = GOOGLE_ULONGLONG(0);
  _clear_bit(6);
}
inline ::google::protobuf::uint64 ServerInfo::lastupdatetime() const {
  return lastupdatetime_;
}
inline void ServerInfo::set_lastupdatetime(::google::protobuf::uint64 value) {
  _set_bit(6);
  lastupdatetime_ = value;
}

// -------------------------------------------------------------------

// MsgLoginAck

// required uint32 userId = 1;
inline bool MsgLoginAck::has_userid() const {
  return _has_bit(0);
}
inline void MsgLoginAck::clear_userid() {
  userid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgLoginAck::userid() const {
  return userid_;
}
inline void MsgLoginAck::set_userid(::google::protobuf::uint32 value) {
  _set_bit(0);
  userid_ = value;
}

// repeated .IGameProto.ServerInfo serversList = 2;
inline int MsgLoginAck::serverslist_size() const {
  return serverslist_.size();
}
inline void MsgLoginAck::clear_serverslist() {
  serverslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ServerInfo >&
MsgLoginAck::serverslist() const {
  return serverslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ServerInfo >*
MsgLoginAck::mutable_serverslist() {
  return &serverslist_;
}
inline const ::IGameProto::ServerInfo& MsgLoginAck::serverslist(int index) const {
  return serverslist_.Get(index);
}
inline ::IGameProto::ServerInfo* MsgLoginAck::mutable_serverslist(int index) {
  return serverslist_.Mutable(index);
}
inline ::IGameProto::ServerInfo* MsgLoginAck::add_serverslist() {
  return serverslist_.Add();
}

// -------------------------------------------------------------------

// MsgCreateRoleReq

// required uint32 userId = 1;
inline bool MsgCreateRoleReq::has_userid() const {
  return _has_bit(0);
}
inline void MsgCreateRoleReq::clear_userid() {
  userid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCreateRoleReq::userid() const {
  return userid_;
}
inline void MsgCreateRoleReq::set_userid(::google::protobuf::uint32 value) {
  _set_bit(0);
  userid_ = value;
}

// required .IGameProto.RoleInfo role = 2;
inline bool MsgCreateRoleReq::has_role() const {
  return _has_bit(1);
}
inline void MsgCreateRoleReq::clear_role() {
  if (role_ != NULL) role_->::IGameProto::RoleInfo::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::RoleInfo& MsgCreateRoleReq::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::IGameProto::RoleInfo* MsgCreateRoleReq::mutable_role() {
  _set_bit(1);
  if (role_ == NULL) role_ = new ::IGameProto::RoleInfo;
  return role_;
}

// -------------------------------------------------------------------

// MsgCreateRoleAck

// required .IGameProto.RoleInfo role = 1;
inline bool MsgCreateRoleAck::has_role() const {
  return _has_bit(0);
}
inline void MsgCreateRoleAck::clear_role() {
  if (role_ != NULL) role_->::IGameProto::RoleInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::RoleInfo& MsgCreateRoleAck::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::IGameProto::RoleInfo* MsgCreateRoleAck::mutable_role() {
  _set_bit(0);
  if (role_ == NULL) role_ = new ::IGameProto::RoleInfo;
  return role_;
}

// -------------------------------------------------------------------

// MsgSelectRoleReq

// required uint32 userId = 1;
inline bool MsgSelectRoleReq::has_userid() const {
  return _has_bit(0);
}
inline void MsgSelectRoleReq::clear_userid() {
  userid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgSelectRoleReq::userid() const {
  return userid_;
}
inline void MsgSelectRoleReq::set_userid(::google::protobuf::uint32 value) {
  _set_bit(0);
  userid_ = value;
}

// required uint32 roleId = 2;
inline bool MsgSelectRoleReq::has_roleid() const {
  return _has_bit(1);
}
inline void MsgSelectRoleReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgSelectRoleReq::roleid() const {
  return roleid_;
}
inline void MsgSelectRoleReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// -------------------------------------------------------------------

// MsgSelectRoleAck

// required .IGameProto.RoleInfo role = 1;
inline bool MsgSelectRoleAck::has_role() const {
  return _has_bit(0);
}
inline void MsgSelectRoleAck::clear_role() {
  if (role_ != NULL) role_->::IGameProto::RoleInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::RoleInfo& MsgSelectRoleAck::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::IGameProto::RoleInfo* MsgSelectRoleAck::mutable_role() {
  _set_bit(0);
  if (role_ == NULL) role_ = new ::IGameProto::RoleInfo;
  return role_;
}

// -------------------------------------------------------------------

// MsgEnterSceneNtf

// required uint32 sceneId = 1;
inline bool MsgEnterSceneNtf::has_sceneid() const {
  return _has_bit(0);
}
inline void MsgEnterSceneNtf::clear_sceneid() {
  sceneid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterSceneNtf::sceneid() const {
  return sceneid_;
}
inline void MsgEnterSceneNtf::set_sceneid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sceneid_ = value;
}

// required .IGameProto.SceneRoleInfo roleInfo = 2;
inline bool MsgEnterSceneNtf::has_roleinfo() const {
  return _has_bit(1);
}
inline void MsgEnterSceneNtf::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::IGameProto::SceneRoleInfo::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::SceneRoleInfo& MsgEnterSceneNtf::roleinfo() const {
  return roleinfo_ != NULL ? *roleinfo_ : *default_instance_->roleinfo_;
}
inline ::IGameProto::SceneRoleInfo* MsgEnterSceneNtf::mutable_roleinfo() {
  _set_bit(1);
  if (roleinfo_ == NULL) roleinfo_ = new ::IGameProto::SceneRoleInfo;
  return roleinfo_;
}

// optional uint32 mapId = 3;
inline bool MsgEnterSceneNtf::has_mapid() const {
  return _has_bit(2);
}
inline void MsgEnterSceneNtf::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 MsgEnterSceneNtf::mapid() const {
  return mapid_;
}
inline void MsgEnterSceneNtf::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(2);
  mapid_ = value;
}

// -------------------------------------------------------------------

// MsgEnterSceneReq

// optional uint32 sceneId = 1;
inline bool MsgEnterSceneReq::has_sceneid() const {
  return _has_bit(0);
}
inline void MsgEnterSceneReq::clear_sceneid() {
  sceneid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterSceneReq::sceneid() const {
  return sceneid_;
}
inline void MsgEnterSceneReq::set_sceneid(::google::protobuf::uint32 value) {
  _set_bit(0);
  sceneid_ = value;
}

// -------------------------------------------------------------------

// MsgJumpSceneReq

// required uint32 mapId = 1;
inline bool MsgJumpSceneReq::has_mapid() const {
  return _has_bit(0);
}
inline void MsgJumpSceneReq::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgJumpSceneReq::mapid() const {
  return mapid_;
}
inline void MsgJumpSceneReq::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// -------------------------------------------------------------------

// MsgJumpSceneNtf

// required uint32 mapId = 1;
inline bool MsgJumpSceneNtf::has_mapid() const {
  return _has_bit(0);
}
inline void MsgJumpSceneNtf::clear_mapid() {
  mapid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgJumpSceneNtf::mapid() const {
  return mapid_;
}
inline void MsgJumpSceneNtf::set_mapid(::google::protobuf::uint32 value) {
  _set_bit(0);
  mapid_ = value;
}

// required uint32 sceneId = 2;
inline bool MsgJumpSceneNtf::has_sceneid() const {
  return _has_bit(1);
}
inline void MsgJumpSceneNtf::clear_sceneid() {
  sceneid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgJumpSceneNtf::sceneid() const {
  return sceneid_;
}
inline void MsgJumpSceneNtf::set_sceneid(::google::protobuf::uint32 value) {
  _set_bit(1);
  sceneid_ = value;
}

// optional float X = 3;
inline bool MsgJumpSceneNtf::has_x() const {
  return _has_bit(2);
}
inline void MsgJumpSceneNtf::clear_x() {
  x_ = 0;
  _clear_bit(2);
}
inline float MsgJumpSceneNtf::x() const {
  return x_;
}
inline void MsgJumpSceneNtf::set_x(float value) {
  _set_bit(2);
  x_ = value;
}

// optional float Y = 4;
inline bool MsgJumpSceneNtf::has_y() const {
  return _has_bit(3);
}
inline void MsgJumpSceneNtf::clear_y() {
  y_ = 0;
  _clear_bit(3);
}
inline float MsgJumpSceneNtf::y() const {
  return y_;
}
inline void MsgJumpSceneNtf::set_y(float value) {
  _set_bit(3);
  y_ = value;
}

// optional uint32 cityId = 5;
inline bool MsgJumpSceneNtf::has_cityid() const {
  return _has_bit(4);
}
inline void MsgJumpSceneNtf::clear_cityid() {
  cityid_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 MsgJumpSceneNtf::cityid() const {
  return cityid_;
}
inline void MsgJumpSceneNtf::set_cityid(::google::protobuf::uint32 value) {
  _set_bit(4);
  cityid_ = value;
}

// -------------------------------------------------------------------

// SceneRoleInfo

// required .IGameProto.RoleInfo role = 1;
inline bool SceneRoleInfo::has_role() const {
  return _has_bit(0);
}
inline void SceneRoleInfo::clear_role() {
  if (role_ != NULL) role_->::IGameProto::RoleInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::RoleInfo& SceneRoleInfo::role() const {
  return role_ != NULL ? *role_ : *default_instance_->role_;
}
inline ::IGameProto::RoleInfo* SceneRoleInfo::mutable_role() {
  _set_bit(0);
  if (role_ == NULL) role_ = new ::IGameProto::RoleInfo;
  return role_;
}

// required float X = 2;
inline bool SceneRoleInfo::has_x() const {
  return _has_bit(1);
}
inline void SceneRoleInfo::clear_x() {
  x_ = 0;
  _clear_bit(1);
}
inline float SceneRoleInfo::x() const {
  return x_;
}
inline void SceneRoleInfo::set_x(float value) {
  _set_bit(1);
  x_ = value;
}

// required float Y = 3;
inline bool SceneRoleInfo::has_y() const {
  return _has_bit(2);
}
inline void SceneRoleInfo::clear_y() {
  y_ = 0;
  _clear_bit(2);
}
inline float SceneRoleInfo::y() const {
  return y_;
}
inline void SceneRoleInfo::set_y(float value) {
  _set_bit(2);
  y_ = value;
}

// required float direction = 4;
inline bool SceneRoleInfo::has_direction() const {
  return _has_bit(3);
}
inline void SceneRoleInfo::clear_direction() {
  direction_ = 0;
  _clear_bit(3);
}
inline float SceneRoleInfo::direction() const {
  return direction_;
}
inline void SceneRoleInfo::set_direction(float value) {
  _set_bit(3);
  direction_ = value;
}

// required .IGameProto.ActionType actionType = 5;
inline bool SceneRoleInfo::has_actiontype() const {
  return _has_bit(4);
}
inline void SceneRoleInfo::clear_actiontype() {
  actiontype_ = 0;
  _clear_bit(4);
}
inline IGameProto::ActionType SceneRoleInfo::actiontype() const {
  return static_cast< IGameProto::ActionType >(actiontype_);
}
inline void SceneRoleInfo::set_actiontype(IGameProto::ActionType value) {
  GOOGLE_DCHECK(IGameProto::ActionType_IsValid(value));
  _set_bit(4);
  actiontype_ = value;
}

// optional float to_x = 6;
inline bool SceneRoleInfo::has_to_x() const {
  return _has_bit(5);
}
inline void SceneRoleInfo::clear_to_x() {
  to_x_ = 0;
  _clear_bit(5);
}
inline float SceneRoleInfo::to_x() const {
  return to_x_;
}
inline void SceneRoleInfo::set_to_x(float value) {
  _set_bit(5);
  to_x_ = value;
}

// optional float to_y = 7;
inline bool SceneRoleInfo::has_to_y() const {
  return _has_bit(6);
}
inline void SceneRoleInfo::clear_to_y() {
  to_y_ = 0;
  _clear_bit(6);
}
inline float SceneRoleInfo::to_y() const {
  return to_y_;
}
inline void SceneRoleInfo::set_to_y(float value) {
  _set_bit(6);
  to_y_ = value;
}

// optional uint32 cityId = 8;
inline bool SceneRoleInfo::has_cityid() const {
  return _has_bit(7);
}
inline void SceneRoleInfo::clear_cityid() {
  cityid_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 SceneRoleInfo::cityid() const {
  return cityid_;
}
inline void SceneRoleInfo::set_cityid(::google::protobuf::uint32 value) {
  _set_bit(7);
  cityid_ = value;
}

// optional uint32 roleMode = 9;
inline bool SceneRoleInfo::has_rolemode() const {
  return _has_bit(8);
}
inline void SceneRoleInfo::clear_rolemode() {
  rolemode_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 SceneRoleInfo::rolemode() const {
  return rolemode_;
}
inline void SceneRoleInfo::set_rolemode(::google::protobuf::uint32 value) {
  _set_bit(8);
  rolemode_ = value;
}

// -------------------------------------------------------------------

// MsgRoleIntoVisionNtf

// repeated .IGameProto.SceneRoleInfo rolesList = 1;
inline int MsgRoleIntoVisionNtf::roleslist_size() const {
  return roleslist_.size();
}
inline void MsgRoleIntoVisionNtf::clear_roleslist() {
  roleslist_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::SceneRoleInfo >&
MsgRoleIntoVisionNtf::roleslist() const {
  return roleslist_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::SceneRoleInfo >*
MsgRoleIntoVisionNtf::mutable_roleslist() {
  return &roleslist_;
}
inline const ::IGameProto::SceneRoleInfo& MsgRoleIntoVisionNtf::roleslist(int index) const {
  return roleslist_.Get(index);
}
inline ::IGameProto::SceneRoleInfo* MsgRoleIntoVisionNtf::mutable_roleslist(int index) {
  return roleslist_.Mutable(index);
}
inline ::IGameProto::SceneRoleInfo* MsgRoleIntoVisionNtf::add_roleslist() {
  return roleslist_.Add();
}

// -------------------------------------------------------------------

// MsgRoleOutofVisionNtf

// repeated uint32 roleId = 1;
inline int MsgRoleOutofVisionNtf::roleid_size() const {
  return roleid_.size();
}
inline void MsgRoleOutofVisionNtf::clear_roleid() {
  roleid_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgRoleOutofVisionNtf::roleid() const {
  return roleid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgRoleOutofVisionNtf::mutable_roleid() {
  return &roleid_;
}
inline ::google::protobuf::uint32 MsgRoleOutofVisionNtf::roleid(int index) const {
  return roleid_.Get(index);
}
inline void MsgRoleOutofVisionNtf::set_roleid(int index, ::google::protobuf::uint32 value) {
  roleid_.Set(index, value);
}
inline void MsgRoleOutofVisionNtf::add_roleid(::google::protobuf::uint32 value) {
  roleid_.Add(value);
}

// -------------------------------------------------------------------

// Pos

// required float X = 1;
inline bool Pos::has_x() const {
  return _has_bit(0);
}
inline void Pos::clear_x() {
  x_ = 0;
  _clear_bit(0);
}
inline float Pos::x() const {
  return x_;
}
inline void Pos::set_x(float value) {
  _set_bit(0);
  x_ = value;
}

// required float Y = 2;
inline bool Pos::has_y() const {
  return _has_bit(1);
}
inline void Pos::clear_y() {
  y_ = 0;
  _clear_bit(1);
}
inline float Pos::y() const {
  return y_;
}
inline void Pos::set_y(float value) {
  _set_bit(1);
  y_ = value;
}

// -------------------------------------------------------------------

// MsgActionReq

// required .IGameProto.ActionType actionType = 1;
inline bool MsgActionReq::has_actiontype() const {
  return _has_bit(0);
}
inline void MsgActionReq::clear_actiontype() {
  actiontype_ = 0;
  _clear_bit(0);
}
inline IGameProto::ActionType MsgActionReq::actiontype() const {
  return static_cast< IGameProto::ActionType >(actiontype_);
}
inline void MsgActionReq::set_actiontype(IGameProto::ActionType value) {
  GOOGLE_DCHECK(IGameProto::ActionType_IsValid(value));
  _set_bit(0);
  actiontype_ = value;
}

// repeated .IGameProto.Pos poses = 2;
inline int MsgActionReq::poses_size() const {
  return poses_.size();
}
inline void MsgActionReq::clear_poses() {
  poses_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >&
MsgActionReq::poses() const {
  return poses_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >*
MsgActionReq::mutable_poses() {
  return &poses_;
}
inline const ::IGameProto::Pos& MsgActionReq::poses(int index) const {
  return poses_.Get(index);
}
inline ::IGameProto::Pos* MsgActionReq::mutable_poses(int index) {
  return poses_.Mutable(index);
}
inline ::IGameProto::Pos* MsgActionReq::add_poses() {
  return poses_.Add();
}

// required float direction = 3;
inline bool MsgActionReq::has_direction() const {
  return _has_bit(2);
}
inline void MsgActionReq::clear_direction() {
  direction_ = 0;
  _clear_bit(2);
}
inline float MsgActionReq::direction() const {
  return direction_;
}
inline void MsgActionReq::set_direction(float value) {
  _set_bit(2);
  direction_ = value;
}

// -------------------------------------------------------------------

// MsgActionNtf

// required uint32 roleId = 1;
inline bool MsgActionNtf::has_roleid() const {
  return _has_bit(0);
}
inline void MsgActionNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgActionNtf::roleid() const {
  return roleid_;
}
inline void MsgActionNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// required .IGameProto.ActionType actionType = 2;
inline bool MsgActionNtf::has_actiontype() const {
  return _has_bit(1);
}
inline void MsgActionNtf::clear_actiontype() {
  actiontype_ = 0;
  _clear_bit(1);
}
inline IGameProto::ActionType MsgActionNtf::actiontype() const {
  return static_cast< IGameProto::ActionType >(actiontype_);
}
inline void MsgActionNtf::set_actiontype(IGameProto::ActionType value) {
  GOOGLE_DCHECK(IGameProto::ActionType_IsValid(value));
  _set_bit(1);
  actiontype_ = value;
}

// repeated .IGameProto.Pos desPoses = 3;
inline int MsgActionNtf::desposes_size() const {
  return desposes_.size();
}
inline void MsgActionNtf::clear_desposes() {
  desposes_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >&
MsgActionNtf::desposes() const {
  return desposes_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Pos >*
MsgActionNtf::mutable_desposes() {
  return &desposes_;
}
inline const ::IGameProto::Pos& MsgActionNtf::desposes(int index) const {
  return desposes_.Get(index);
}
inline ::IGameProto::Pos* MsgActionNtf::mutable_desposes(int index) {
  return desposes_.Mutable(index);
}
inline ::IGameProto::Pos* MsgActionNtf::add_desposes() {
  return desposes_.Add();
}

// required float direction = 4;
inline bool MsgActionNtf::has_direction() const {
  return _has_bit(3);
}
inline void MsgActionNtf::clear_direction() {
  direction_ = 0;
  _clear_bit(3);
}
inline float MsgActionNtf::direction() const {
  return direction_;
}
inline void MsgActionNtf::set_direction(float value) {
  _set_bit(3);
  direction_ = value;
}

// -------------------------------------------------------------------

// HeroInfo

// required uint64 id = 1;
inline bool HeroInfo::has_id() const {
  return _has_bit(0);
}
inline void HeroInfo::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 HeroInfo::id() const {
  return id_;
}
inline void HeroInfo::set_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  id_ = value;
}

// optional int32 data_id = 2;
inline bool HeroInfo::has_data_id() const {
  return _has_bit(1);
}
inline void HeroInfo::clear_data_id() {
  data_id_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 HeroInfo::data_id() const {
  return data_id_;
}
inline void HeroInfo::set_data_id(::google::protobuf::int32 value) {
  _set_bit(1);
  data_id_ = value;
}

// optional int32 level = 3;
inline bool HeroInfo::has_level() const {
  return _has_bit(2);
}
inline void HeroInfo::clear_level() {
  level_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 HeroInfo::level() const {
  return level_;
}
inline void HeroInfo::set_level(::google::protobuf::int32 value) {
  _set_bit(2);
  level_ = value;
}

// optional int32 exp = 4;
inline bool HeroInfo::has_exp() const {
  return _has_bit(3);
}
inline void HeroInfo::clear_exp() {
  exp_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 HeroInfo::exp() const {
  return exp_;
}
inline void HeroInfo::set_exp(::google::protobuf::int32 value) {
  _set_bit(3);
  exp_ = value;
}

// -------------------------------------------------------------------

// FightAttr

// optional int32 hp = 1;
inline bool FightAttr::has_hp() const {
  return _has_bit(0);
}
inline void FightAttr::clear_hp() {
  hp_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 FightAttr::hp() const {
  return hp_;
}
inline void FightAttr::set_hp(::google::protobuf::int32 value) {
  _set_bit(0);
  hp_ = value;
}

// optional int32 phy_attack = 2;
inline bool FightAttr::has_phy_attack() const {
  return _has_bit(1);
}
inline void FightAttr::clear_phy_attack() {
  phy_attack_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 FightAttr::phy_attack() const {
  return phy_attack_;
}
inline void FightAttr::set_phy_attack(::google::protobuf::int32 value) {
  _set_bit(1);
  phy_attack_ = value;
}

// optional int32 phy_defence = 3;
inline bool FightAttr::has_phy_defence() const {
  return _has_bit(2);
}
inline void FightAttr::clear_phy_defence() {
  phy_defence_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 FightAttr::phy_defence() const {
  return phy_defence_;
}
inline void FightAttr::set_phy_defence(::google::protobuf::int32 value) {
  _set_bit(2);
  phy_defence_ = value;
}

// optional int32 magic_attack = 4;
inline bool FightAttr::has_magic_attack() const {
  return _has_bit(3);
}
inline void FightAttr::clear_magic_attack() {
  magic_attack_ = 0;
  _clear_bit(3);
}
inline ::google::protobuf::int32 FightAttr::magic_attack() const {
  return magic_attack_;
}
inline void FightAttr::set_magic_attack(::google::protobuf::int32 value) {
  _set_bit(3);
  magic_attack_ = value;
}

// optional int32 magic_defense = 5;
inline bool FightAttr::has_magic_defense() const {
  return _has_bit(4);
}
inline void FightAttr::clear_magic_defense() {
  magic_defense_ = 0;
  _clear_bit(4);
}
inline ::google::protobuf::int32 FightAttr::magic_defense() const {
  return magic_defense_;
}
inline void FightAttr::set_magic_defense(::google::protobuf::int32 value) {
  _set_bit(4);
  magic_defense_ = value;
}

// optional int32 rage = 6;
inline bool FightAttr::has_rage() const {
  return _has_bit(5);
}
inline void FightAttr::clear_rage() {
  rage_ = 0;
  _clear_bit(5);
}
inline ::google::protobuf::int32 FightAttr::rage() const {
  return rage_;
}
inline void FightAttr::set_rage(::google::protobuf::int32 value) {
  _set_bit(5);
  rage_ = value;
}

// optional int32 crit = 7;
inline bool FightAttr::has_crit() const {
  return _has_bit(6);
}
inline void FightAttr::clear_crit() {
  crit_ = 0;
  _clear_bit(6);
}
inline ::google::protobuf::int32 FightAttr::crit() const {
  return crit_;
}
inline void FightAttr::set_crit(::google::protobuf::int32 value) {
  _set_bit(6);
  crit_ = value;
}

// optional int32 anti_crit = 8;
inline bool FightAttr::has_anti_crit() const {
  return _has_bit(7);
}
inline void FightAttr::clear_anti_crit() {
  anti_crit_ = 0;
  _clear_bit(7);
}
inline ::google::protobuf::int32 FightAttr::anti_crit() const {
  return anti_crit_;
}
inline void FightAttr::set_anti_crit(::google::protobuf::int32 value) {
  _set_bit(7);
  anti_crit_ = value;
}

// optional int32 critdamage = 9;
inline bool FightAttr::has_critdamage() const {
  return _has_bit(8);
}
inline void FightAttr::clear_critdamage() {
  critdamage_ = 0;
  _clear_bit(8);
}
inline ::google::protobuf::int32 FightAttr::critdamage() const {
  return critdamage_;
}
inline void FightAttr::set_critdamage(::google::protobuf::int32 value) {
  _set_bit(8);
  critdamage_ = value;
}

// optional int32 hit_rate = 10;
inline bool FightAttr::has_hit_rate() const {
  return _has_bit(9);
}
inline void FightAttr::clear_hit_rate() {
  hit_rate_ = 0;
  _clear_bit(9);
}
inline ::google::protobuf::int32 FightAttr::hit_rate() const {
  return hit_rate_;
}
inline void FightAttr::set_hit_rate(::google::protobuf::int32 value) {
  _set_bit(9);
  hit_rate_ = value;
}

// optional int32 escape_rate = 11;
inline bool FightAttr::has_escape_rate() const {
  return _has_bit(10);
}
inline void FightAttr::clear_escape_rate() {
  escape_rate_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 FightAttr::escape_rate() const {
  return escape_rate_;
}
inline void FightAttr::set_escape_rate(::google::protobuf::int32 value) {
  _set_bit(10);
  escape_rate_ = value;
}

// optional int32 break_parry = 12;
inline bool FightAttr::has_break_parry() const {
  return _has_bit(11);
}
inline void FightAttr::clear_break_parry() {
  break_parry_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 FightAttr::break_parry() const {
  return break_parry_;
}
inline void FightAttr::set_break_parry(::google::protobuf::int32 value) {
  _set_bit(11);
  break_parry_ = value;
}

// optional int32 parry = 13;
inline bool FightAttr::has_parry() const {
  return _has_bit(12);
}
inline void FightAttr::clear_parry() {
  parry_ = 0;
  _clear_bit(12);
}
inline ::google::protobuf::int32 FightAttr::parry() const {
  return parry_;
}
inline void FightAttr::set_parry(::google::protobuf::int32 value) {
  _set_bit(12);
  parry_ = value;
}

// optional int32 parry_anti_damage = 14;
inline bool FightAttr::has_parry_anti_damage() const {
  return _has_bit(13);
}
inline void FightAttr::clear_parry_anti_damage() {
  parry_anti_damage_ = 0;
  _clear_bit(13);
}
inline ::google::protobuf::int32 FightAttr::parry_anti_damage() const {
  return parry_anti_damage_;
}
inline void FightAttr::set_parry_anti_damage(::google::protobuf::int32 value) {
  _set_bit(13);
  parry_anti_damage_ = value;
}

// optional int32 damage_inc = 15;
inline bool FightAttr::has_damage_inc() const {
  return _has_bit(14);
}
inline void FightAttr::clear_damage_inc() {
  damage_inc_ = 0;
  _clear_bit(14);
}
inline ::google::protobuf::int32 FightAttr::damage_inc() const {
  return damage_inc_;
}
inline void FightAttr::set_damage_inc(::google::protobuf::int32 value) {
  _set_bit(14);
  damage_inc_ = value;
}

// optional int32 damage_dec = 16;
inline bool FightAttr::has_damage_dec() const {
  return _has_bit(15);
}
inline void FightAttr::clear_damage_dec() {
  damage_dec_ = 0;
  _clear_bit(15);
}
inline ::google::protobuf::int32 FightAttr::damage_dec() const {
  return damage_dec_;
}
inline void FightAttr::set_damage_dec(::google::protobuf::int32 value) {
  _set_bit(15);
  damage_dec_ = value;
}

// optional int64 fighting = 17;
inline bool FightAttr::has_fighting() const {
  return _has_bit(16);
}
inline void FightAttr::clear_fighting() {
  fighting_ = GOOGLE_LONGLONG(0);
  _clear_bit(16);
}
inline ::google::protobuf::int64 FightAttr::fighting() const {
  return fighting_;
}
inline void FightAttr::set_fighting(::google::protobuf::int64 value) {
  _set_bit(16);
  fighting_ = value;
}

// -------------------------------------------------------------------

// BaseAttr

// optional uint32 type = 1;
inline bool BaseAttr::has_type() const {
  return _has_bit(0);
}
inline void BaseAttr::clear_type() {
  type_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 BaseAttr::type() const {
  return type_;
}
inline void BaseAttr::set_type(::google::protobuf::uint32 value) {
  _set_bit(0);
  type_ = value;
}

// optional uint32 id = 2;
inline bool BaseAttr::has_id() const {
  return _has_bit(1);
}
inline void BaseAttr::clear_id() {
  id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 BaseAttr::id() const {
  return id_;
}
inline void BaseAttr::set_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  id_ = value;
}

// optional string name = 3;
inline bool BaseAttr::has_name() const {
  return _has_bit(2);
}
inline void BaseAttr::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& BaseAttr::name() const {
  return *name_;
}
inline void BaseAttr::set_name(const ::std::string& value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BaseAttr::set_name(const char* value) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BaseAttr::set_name(const char* value, size_t size) {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseAttr::mutable_name() {
  _set_bit(2);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 level = 4;
inline bool BaseAttr::has_level() const {
  return _has_bit(3);
}
inline void BaseAttr::clear_level() {
  level_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 BaseAttr::level() const {
  return level_;
}
inline void BaseAttr::set_level(::google::protobuf::uint32 value) {
  _set_bit(3);
  level_ = value;
}

// optional uint64 exp = 5;
inline bool BaseAttr::has_exp() const {
  return _has_bit(4);
}
inline void BaseAttr::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::uint64 BaseAttr::exp() const {
  return exp_;
}
inline void BaseAttr::set_exp(::google::protobuf::uint64 value) {
  _set_bit(4);
  exp_ = value;
}

// optional uint32 species = 6;
inline bool BaseAttr::has_species() const {
  return _has_bit(5);
}
inline void BaseAttr::clear_species() {
  species_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 BaseAttr::species() const {
  return species_;
}
inline void BaseAttr::set_species(::google::protobuf::uint32 value) {
  _set_bit(5);
  species_ = value;
}

// optional uint32 quality = 7;
inline bool BaseAttr::has_quality() const {
  return _has_bit(6);
}
inline void BaseAttr::clear_quality() {
  quality_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 BaseAttr::quality() const {
  return quality_;
}
inline void BaseAttr::set_quality(::google::protobuf::uint32 value) {
  _set_bit(6);
  quality_ = value;
}

// optional uint32 in_form = 8;
inline bool BaseAttr::has_in_form() const {
  return _has_bit(7);
}
inline void BaseAttr::clear_in_form() {
  in_form_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 BaseAttr::in_form() const {
  return in_form_;
}
inline void BaseAttr::set_in_form(::google::protobuf::uint32 value) {
  _set_bit(7);
  in_form_ = value;
}

// repeated string equips = 9;
inline int BaseAttr::equips_size() const {
  return equips_.size();
}
inline void BaseAttr::clear_equips() {
  equips_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BaseAttr::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BaseAttr::mutable_equips() {
  return &equips_;
}
inline const ::std::string& BaseAttr::equips(int index) const {
  return equips_.Get(index);
}
inline ::std::string* BaseAttr::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline void BaseAttr::set_equips(int index, const ::std::string& value) {
  equips_.Mutable(index)->assign(value);
}
inline void BaseAttr::set_equips(int index, const char* value) {
  equips_.Mutable(index)->assign(value);
}
inline void BaseAttr::set_equips(int index, const char* value, size_t size) {
  equips_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaseAttr::add_equips() {
  return equips_.Add();
}
inline void BaseAttr::add_equips(const ::std::string& value) {
  equips_.Add()->assign(value);
}
inline void BaseAttr::add_equips(const char* value) {
  equips_.Add()->assign(value);
}
inline void BaseAttr::add_equips(const char* value, size_t size) {
  equips_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional .IGameProto.FightAttr fight_attr = 10;
inline bool BaseAttr::has_fight_attr() const {
  return _has_bit(9);
}
inline void BaseAttr::clear_fight_attr() {
  if (fight_attr_ != NULL) fight_attr_->::IGameProto::FightAttr::Clear();
  _clear_bit(9);
}
inline const ::IGameProto::FightAttr& BaseAttr::fight_attr() const {
  return fight_attr_ != NULL ? *fight_attr_ : *default_instance_->fight_attr_;
}
inline ::IGameProto::FightAttr* BaseAttr::mutable_fight_attr() {
  _set_bit(9);
  if (fight_attr_ == NULL) fight_attr_ = new ::IGameProto::FightAttr;
  return fight_attr_;
}

// optional uint32 country = 11;
inline bool BaseAttr::has_country() const {
  return _has_bit(10);
}
inline void BaseAttr::clear_country() {
  country_ = 0u;
  _clear_bit(10);
}
inline ::google::protobuf::uint32 BaseAttr::country() const {
  return country_;
}
inline void BaseAttr::set_country(::google::protobuf::uint32 value) {
  _set_bit(10);
  country_ = value;
}

// optional uint32 break_level = 12;
inline bool BaseAttr::has_break_level() const {
  return _has_bit(11);
}
inline void BaseAttr::clear_break_level() {
  break_level_ = 0u;
  _clear_bit(11);
}
inline ::google::protobuf::uint32 BaseAttr::break_level() const {
  return break_level_;
}
inline void BaseAttr::set_break_level(::google::protobuf::uint32 value) {
  _set_bit(11);
  break_level_ = value;
}

// optional uint32 destiny_level = 13;
inline bool BaseAttr::has_destiny_level() const {
  return _has_bit(12);
}
inline void BaseAttr::clear_destiny_level() {
  destiny_level_ = 0u;
  _clear_bit(12);
}
inline ::google::protobuf::uint32 BaseAttr::destiny_level() const {
  return destiny_level_;
}
inline void BaseAttr::set_destiny_level(::google::protobuf::uint32 value) {
  _set_bit(12);
  destiny_level_ = value;
}

// optional uint64 unique_id = 14;
inline bool BaseAttr::has_unique_id() const {
  return _has_bit(13);
}
inline void BaseAttr::clear_unique_id() {
  unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(13);
}
inline ::google::protobuf::uint64 BaseAttr::unique_id() const {
  return unique_id_;
}
inline void BaseAttr::set_unique_id(::google::protobuf::uint64 value) {
  _set_bit(13);
  unique_id_ = value;
}

// -------------------------------------------------------------------

// MsgHeroAttr

// repeated .IGameProto.BaseAttr hero_attrs = 1;
inline int MsgHeroAttr::hero_attrs_size() const {
  return hero_attrs_.size();
}
inline void MsgHeroAttr::clear_hero_attrs() {
  hero_attrs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >&
MsgHeroAttr::hero_attrs() const {
  return hero_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >*
MsgHeroAttr::mutable_hero_attrs() {
  return &hero_attrs_;
}
inline const ::IGameProto::BaseAttr& MsgHeroAttr::hero_attrs(int index) const {
  return hero_attrs_.Get(index);
}
inline ::IGameProto::BaseAttr* MsgHeroAttr::mutable_hero_attrs(int index) {
  return hero_attrs_.Mutable(index);
}
inline ::IGameProto::BaseAttr* MsgHeroAttr::add_hero_attrs() {
  return hero_attrs_.Add();
}

// -------------------------------------------------------------------

// TaskState

// optional uint32 id = 1;
inline bool TaskState::has_id() const {
  return _has_bit(0);
}
inline void TaskState::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 TaskState::id() const {
  return id_;
}
inline void TaskState::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional string progress = 2;
inline bool TaskState::has_progress() const {
  return _has_bit(1);
}
inline void TaskState::clear_progress() {
  if (progress_ != &_default_progress_) {
    progress_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& TaskState::progress() const {
  return *progress_;
}
inline void TaskState::set_progress(const ::std::string& value) {
  _set_bit(1);
  if (progress_ == &_default_progress_) {
    progress_ = new ::std::string;
  }
  progress_->assign(value);
}
inline void TaskState::set_progress(const char* value) {
  _set_bit(1);
  if (progress_ == &_default_progress_) {
    progress_ = new ::std::string;
  }
  progress_->assign(value);
}
inline void TaskState::set_progress(const char* value, size_t size) {
  _set_bit(1);
  if (progress_ == &_default_progress_) {
    progress_ = new ::std::string;
  }
  progress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TaskState::mutable_progress() {
  _set_bit(1);
  if (progress_ == &_default_progress_) {
    progress_ = new ::std::string;
  }
  return progress_;
}

// optional uint32 state = 3;
inline bool TaskState::has_state() const {
  return _has_bit(2);
}
inline void TaskState::clear_state() {
  state_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 TaskState::state() const {
  return state_;
}
inline void TaskState::set_state(::google::protobuf::uint32 value) {
  _set_bit(2);
  state_ = value;
}

// optional uint32 accept_time = 4;
inline bool TaskState::has_accept_time() const {
  return _has_bit(3);
}
inline void TaskState::clear_accept_time() {
  accept_time_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 TaskState::accept_time() const {
  return accept_time_;
}
inline void TaskState::set_accept_time(::google::protobuf::uint32 value) {
  _set_bit(3);
  accept_time_ = value;
}

// -------------------------------------------------------------------

// MsgTaskListNfy

// repeated .IGameProto.TaskState task_list = 1;
inline int MsgTaskListNfy::task_list_size() const {
  return task_list_.size();
}
inline void MsgTaskListNfy::clear_task_list() {
  task_list_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >&
MsgTaskListNfy::task_list() const {
  return task_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >*
MsgTaskListNfy::mutable_task_list() {
  return &task_list_;
}
inline const ::IGameProto::TaskState& MsgTaskListNfy::task_list(int index) const {
  return task_list_.Get(index);
}
inline ::IGameProto::TaskState* MsgTaskListNfy::mutable_task_list(int index) {
  return task_list_.Mutable(index);
}
inline ::IGameProto::TaskState* MsgTaskListNfy::add_task_list() {
  return task_list_.Add();
}

// -------------------------------------------------------------------

// MsgAcceptTaskReq

// required uint32 task_id = 1;
inline bool MsgAcceptTaskReq::has_task_id() const {
  return _has_bit(0);
}
inline void MsgAcceptTaskReq::clear_task_id() {
  task_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgAcceptTaskReq::task_id() const {
  return task_id_;
}
inline void MsgAcceptTaskReq::set_task_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  task_id_ = value;
}

// -------------------------------------------------------------------

// MsgAcceptTaskAck

// required .IGameProto.TaskState task = 1;
inline bool MsgAcceptTaskAck::has_task() const {
  return _has_bit(0);
}
inline void MsgAcceptTaskAck::clear_task() {
  if (task_ != NULL) task_->::IGameProto::TaskState::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::TaskState& MsgAcceptTaskAck::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::IGameProto::TaskState* MsgAcceptTaskAck::mutable_task() {
  _set_bit(0);
  if (task_ == NULL) task_ = new ::IGameProto::TaskState;
  return task_;
}

// -------------------------------------------------------------------

// MsgCommitTaskReq

// required uint32 task_id = 1;
inline bool MsgCommitTaskReq::has_task_id() const {
  return _has_bit(0);
}
inline void MsgCommitTaskReq::clear_task_id() {
  task_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCommitTaskReq::task_id() const {
  return task_id_;
}
inline void MsgCommitTaskReq::set_task_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  task_id_ = value;
}

// repeated uint64 param = 2;
inline int MsgCommitTaskReq::param_size() const {
  return param_.size();
}
inline void MsgCommitTaskReq::clear_param() {
  param_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
MsgCommitTaskReq::param() const {
  return param_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
MsgCommitTaskReq::mutable_param() {
  return &param_;
}
inline ::google::protobuf::uint64 MsgCommitTaskReq::param(int index) const {
  return param_.Get(index);
}
inline void MsgCommitTaskReq::set_param(int index, ::google::protobuf::uint64 value) {
  param_.Set(index, value);
}
inline void MsgCommitTaskReq::add_param(::google::protobuf::uint64 value) {
  param_.Add(value);
}

// -------------------------------------------------------------------

// MsgCommitTaskAck

// required .IGameProto.TaskState task = 1;
inline bool MsgCommitTaskAck::has_task() const {
  return _has_bit(0);
}
inline void MsgCommitTaskAck::clear_task() {
  if (task_ != NULL) task_->::IGameProto::TaskState::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::TaskState& MsgCommitTaskAck::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::IGameProto::TaskState* MsgCommitTaskAck::mutable_task() {
  _set_bit(0);
  if (task_ == NULL) task_ = new ::IGameProto::TaskState;
  return task_;
}

// -------------------------------------------------------------------

// MsgDropTaskReq

// required uint32 task_id = 1;
inline bool MsgDropTaskReq::has_task_id() const {
  return _has_bit(0);
}
inline void MsgDropTaskReq::clear_task_id() {
  task_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgDropTaskReq::task_id() const {
  return task_id_;
}
inline void MsgDropTaskReq::set_task_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  task_id_ = value;
}

// -------------------------------------------------------------------

// MsgDropTaskAck

// required .IGameProto.TaskState task = 1;
inline bool MsgDropTaskAck::has_task() const {
  return _has_bit(0);
}
inline void MsgDropTaskAck::clear_task() {
  if (task_ != NULL) task_->::IGameProto::TaskState::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::TaskState& MsgDropTaskAck::task() const {
  return task_ != NULL ? *task_ : *default_instance_->task_;
}
inline ::IGameProto::TaskState* MsgDropTaskAck::mutable_task() {
  _set_bit(0);
  if (task_ == NULL) task_ = new ::IGameProto::TaskState;
  return task_;
}

// -------------------------------------------------------------------

// MsgTaskChangeNfy

// repeated .IGameProto.TaskState task_changed = 1;
inline int MsgTaskChangeNfy::task_changed_size() const {
  return task_changed_.size();
}
inline void MsgTaskChangeNfy::clear_task_changed() {
  task_changed_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >&
MsgTaskChangeNfy::task_changed() const {
  return task_changed_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::TaskState >*
MsgTaskChangeNfy::mutable_task_changed() {
  return &task_changed_;
}
inline const ::IGameProto::TaskState& MsgTaskChangeNfy::task_changed(int index) const {
  return task_changed_.Get(index);
}
inline ::IGameProto::TaskState* MsgTaskChangeNfy::mutable_task_changed(int index) {
  return task_changed_.Mutable(index);
}
inline ::IGameProto::TaskState* MsgTaskChangeNfy::add_task_changed() {
  return task_changed_.Add();
}

// -------------------------------------------------------------------

// MsgGmCmdReq

// optional string cmd = 1;
inline bool MsgGmCmdReq::has_cmd() const {
  return _has_bit(0);
}
inline void MsgGmCmdReq::clear_cmd() {
  if (cmd_ != &_default_cmd_) {
    cmd_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgGmCmdReq::cmd() const {
  return *cmd_;
}
inline void MsgGmCmdReq::set_cmd(const ::std::string& value) {
  _set_bit(0);
  if (cmd_ == &_default_cmd_) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void MsgGmCmdReq::set_cmd(const char* value) {
  _set_bit(0);
  if (cmd_ == &_default_cmd_) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(value);
}
inline void MsgGmCmdReq::set_cmd(const char* value, size_t size) {
  _set_bit(0);
  if (cmd_ == &_default_cmd_) {
    cmd_ = new ::std::string;
  }
  cmd_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgGmCmdReq::mutable_cmd() {
  _set_bit(0);
  if (cmd_ == &_default_cmd_) {
    cmd_ = new ::std::string;
  }
  return cmd_;
}

// -------------------------------------------------------------------

// MsgGmCmdAck

// optional string param = 2;
inline bool MsgGmCmdAck::has_param() const {
  return _has_bit(0);
}
inline void MsgGmCmdAck::clear_param() {
  if (param_ != &_default_param_) {
    param_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgGmCmdAck::param() const {
  return *param_;
}
inline void MsgGmCmdAck::set_param(const ::std::string& value) {
  _set_bit(0);
  if (param_ == &_default_param_) {
    param_ = new ::std::string;
  }
  param_->assign(value);
}
inline void MsgGmCmdAck::set_param(const char* value) {
  _set_bit(0);
  if (param_ == &_default_param_) {
    param_ = new ::std::string;
  }
  param_->assign(value);
}
inline void MsgGmCmdAck::set_param(const char* value, size_t size) {
  _set_bit(0);
  if (param_ == &_default_param_) {
    param_ = new ::std::string;
  }
  param_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgGmCmdAck::mutable_param() {
  _set_bit(0);
  if (param_ == &_default_param_) {
    param_ = new ::std::string;
  }
  return param_;
}

// -------------------------------------------------------------------

// FormPair

// optional uint32 pos = 1;
inline bool FormPair::has_pos() const {
  return _has_bit(0);
}
inline void FormPair::clear_pos() {
  pos_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 FormPair::pos() const {
  return pos_;
}
inline void FormPair::set_pos(::google::protobuf::uint32 value) {
  _set_bit(0);
  pos_ = value;
}

// optional uint64 uniqueId = 2;
inline bool FormPair::has_uniqueid() const {
  return _has_bit(1);
}
inline void FormPair::clear_uniqueid() {
  uniqueid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 FormPair::uniqueid() const {
  return uniqueid_;
}
inline void FormPair::set_uniqueid(::google::protobuf::uint64 value) {
  _set_bit(1);
  uniqueid_ = value;
}

// -------------------------------------------------------------------

// Formation

// optional uint32 formId = 1;
inline bool Formation::has_formid() const {
  return _has_bit(0);
}
inline void Formation::clear_formid() {
  formid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 Formation::formid() const {
  return formid_;
}
inline void Formation::set_formid(::google::protobuf::uint32 value) {
  _set_bit(0);
  formid_ = value;
}

// repeated .IGameProto.FormPair form = 2;
inline int Formation::form_size() const {
  return form_.size();
}
inline void Formation::clear_form() {
  form_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >&
Formation::form() const {
  return form_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >*
Formation::mutable_form() {
  return &form_;
}
inline const ::IGameProto::FormPair& Formation::form(int index) const {
  return form_.Get(index);
}
inline ::IGameProto::FormPair* Formation::mutable_form(int index) {
  return form_.Mutable(index);
}
inline ::IGameProto::FormPair* Formation::add_form() {
  return form_.Add();
}

// -------------------------------------------------------------------

// MsgSaveFormation

// optional .IGameProto.Formation form = 1;
inline bool MsgSaveFormation::has_form() const {
  return _has_bit(0);
}
inline void MsgSaveFormation::clear_form() {
  if (form_ != NULL) form_->::IGameProto::Formation::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::Formation& MsgSaveFormation::form() const {
  return form_ != NULL ? *form_ : *default_instance_->form_;
}
inline ::IGameProto::Formation* MsgSaveFormation::mutable_form() {
  _set_bit(0);
  if (form_ == NULL) form_ = new ::IGameProto::Formation;
  return form_;
}

// -------------------------------------------------------------------

// MsgSaveFormationAck

// optional uint32 formId = 1;
inline bool MsgSaveFormationAck::has_formid() const {
  return _has_bit(0);
}
inline void MsgSaveFormationAck::clear_formid() {
  formid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgSaveFormationAck::formid() const {
  return formid_;
}
inline void MsgSaveFormationAck::set_formid(::google::protobuf::uint32 value) {
  _set_bit(0);
  formid_ = value;
}

// optional uint32 status = 2;
inline bool MsgSaveFormationAck::has_status() const {
  return _has_bit(1);
}
inline void MsgSaveFormationAck::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgSaveFormationAck::status() const {
  return status_;
}
inline void MsgSaveFormationAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgFormationNty

// optional uint32 currentFormId = 1;
inline bool MsgFormationNty::has_currentformid() const {
  return _has_bit(0);
}
inline void MsgFormationNty::clear_currentformid() {
  currentformid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgFormationNty::currentformid() const {
  return currentformid_;
}
inline void MsgFormationNty::set_currentformid(::google::protobuf::uint32 value) {
  _set_bit(0);
  currentformid_ = value;
}

// repeated .IGameProto.Formation forms = 2;
inline int MsgFormationNty::forms_size() const {
  return forms_.size();
}
inline void MsgFormationNty::clear_forms() {
  forms_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::Formation >&
MsgFormationNty::forms() const {
  return forms_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::Formation >*
MsgFormationNty::mutable_forms() {
  return &forms_;
}
inline const ::IGameProto::Formation& MsgFormationNty::forms(int index) const {
  return forms_.Get(index);
}
inline ::IGameProto::Formation* MsgFormationNty::mutable_forms(int index) {
  return forms_.Mutable(index);
}
inline ::IGameProto::Formation* MsgFormationNty::add_forms() {
  return forms_.Add();
}

// -------------------------------------------------------------------

// MsgAttrChangeNfy

// optional .IGameProto.BaseAttr attr = 1;
inline bool MsgAttrChangeNfy::has_attr() const {
  return _has_bit(0);
}
inline void MsgAttrChangeNfy::clear_attr() {
  if (attr_ != NULL) attr_->::IGameProto::BaseAttr::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::BaseAttr& MsgAttrChangeNfy::attr() const {
  return attr_ != NULL ? *attr_ : *default_instance_->attr_;
}
inline ::IGameProto::BaseAttr* MsgAttrChangeNfy::mutable_attr() {
  _set_bit(0);
  if (attr_ == NULL) attr_ = new ::IGameProto::BaseAttr;
  return attr_;
}

// -------------------------------------------------------------------

// MonsterUnit

// optional uint32 monster_id = 1;
inline bool MonsterUnit::has_monster_id() const {
  return _has_bit(0);
}
inline void MonsterUnit::clear_monster_id() {
  monster_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MonsterUnit::monster_id() const {
  return monster_id_;
}
inline void MonsterUnit::set_monster_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  monster_id_ = value;
}

// optional uint32 count = 2;
inline bool MonsterUnit::has_count() const {
  return _has_bit(1);
}
inline void MonsterUnit::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MonsterUnit::count() const {
  return count_;
}
inline void MonsterUnit::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// MsgKillMonster

// repeated .IGameProto.MonsterUnit killed_monsters = 1;
inline int MsgKillMonster::killed_monsters_size() const {
  return killed_monsters_.size();
}
inline void MsgKillMonster::clear_killed_monsters() {
  killed_monsters_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterUnit >&
MsgKillMonster::killed_monsters() const {
  return killed_monsters_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterUnit >*
MsgKillMonster::mutable_killed_monsters() {
  return &killed_monsters_;
}
inline const ::IGameProto::MonsterUnit& MsgKillMonster::killed_monsters(int index) const {
  return killed_monsters_.Get(index);
}
inline ::IGameProto::MonsterUnit* MsgKillMonster::mutable_killed_monsters(int index) {
  return killed_monsters_.Mutable(index);
}
inline ::IGameProto::MonsterUnit* MsgKillMonster::add_killed_monsters() {
  return killed_monsters_.Add();
}

// -------------------------------------------------------------------

// ItemBaseInfo

// optional uint32 id = 1;
inline bool ItemBaseInfo::has_id() const {
  return _has_bit(0);
}
inline void ItemBaseInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ItemBaseInfo::id() const {
  return id_;
}
inline void ItemBaseInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 count = 2;
inline bool ItemBaseInfo::has_count() const {
  return _has_bit(1);
}
inline void ItemBaseInfo::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ItemBaseInfo::count() const {
  return count_;
}
inline void ItemBaseInfo::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// optional uint32 is_wear = 3;
inline bool ItemBaseInfo::has_is_wear() const {
  return _has_bit(2);
}
inline void ItemBaseInfo::clear_is_wear() {
  is_wear_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 ItemBaseInfo::is_wear() const {
  return is_wear_;
}
inline void ItemBaseInfo::set_is_wear(::google::protobuf::uint32 value) {
  _set_bit(2);
  is_wear_ = value;
}

// optional uint64 unique_id = 4;
inline bool ItemBaseInfo::has_unique_id() const {
  return _has_bit(3);
}
inline void ItemBaseInfo::clear_unique_id() {
  unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::uint64 ItemBaseInfo::unique_id() const {
  return unique_id_;
}
inline void ItemBaseInfo::set_unique_id(::google::protobuf::uint64 value) {
  _set_bit(3);
  unique_id_ = value;
}

// -------------------------------------------------------------------

// ItemExtraInfo

// optional uint32 fighting = 1;
inline bool ItemExtraInfo::has_fighting() const {
  return _has_bit(0);
}
inline void ItemExtraInfo::clear_fighting() {
  fighting_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ItemExtraInfo::fighting() const {
  return fighting_;
}
inline void ItemExtraInfo::set_fighting(::google::protobuf::uint32 value) {
  _set_bit(0);
  fighting_ = value;
}

// -------------------------------------------------------------------

// ItemInfo

// optional .IGameProto.ItemBaseInfo base_info = 1;
inline bool ItemInfo::has_base_info() const {
  return _has_bit(0);
}
inline void ItemInfo::clear_base_info() {
  if (base_info_ != NULL) base_info_->::IGameProto::ItemBaseInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::ItemBaseInfo& ItemInfo::base_info() const {
  return base_info_ != NULL ? *base_info_ : *default_instance_->base_info_;
}
inline ::IGameProto::ItemBaseInfo* ItemInfo::mutable_base_info() {
  _set_bit(0);
  if (base_info_ == NULL) base_info_ = new ::IGameProto::ItemBaseInfo;
  return base_info_;
}

// optional .IGameProto.ItemExtraInfo extra_info = 2;
inline bool ItemInfo::has_extra_info() const {
  return _has_bit(1);
}
inline void ItemInfo::clear_extra_info() {
  if (extra_info_ != NULL) extra_info_->::IGameProto::ItemExtraInfo::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::ItemExtraInfo& ItemInfo::extra_info() const {
  return extra_info_ != NULL ? *extra_info_ : *default_instance_->extra_info_;
}
inline ::IGameProto::ItemExtraInfo* ItemInfo::mutable_extra_info() {
  _set_bit(1);
  if (extra_info_ == NULL) extra_info_ = new ::IGameProto::ItemExtraInfo;
  return extra_info_;
}

// -------------------------------------------------------------------

// MsgGetBagItemsNfy

// repeated .IGameProto.ItemInfo items = 1;
inline int MsgGetBagItemsNfy::items_size() const {
  return items_.size();
}
inline void MsgGetBagItemsNfy::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >&
MsgGetBagItemsNfy::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >*
MsgGetBagItemsNfy::mutable_items() {
  return &items_;
}
inline const ::IGameProto::ItemInfo& MsgGetBagItemsNfy::items(int index) const {
  return items_.Get(index);
}
inline ::IGameProto::ItemInfo* MsgGetBagItemsNfy::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::IGameProto::ItemInfo* MsgGetBagItemsNfy::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// MsgItemsChangedNfy

// repeated .IGameProto.ItemInfo items = 1;
inline int MsgItemsChangedNfy::items_size() const {
  return items_.size();
}
inline void MsgItemsChangedNfy::clear_items() {
  items_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >&
MsgItemsChangedNfy::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ItemInfo >*
MsgItemsChangedNfy::mutable_items() {
  return &items_;
}
inline const ::IGameProto::ItemInfo& MsgItemsChangedNfy::items(int index) const {
  return items_.Get(index);
}
inline ::IGameProto::ItemInfo* MsgItemsChangedNfy::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::IGameProto::ItemInfo* MsgItemsChangedNfy::add_items() {
  return items_.Add();
}

// -------------------------------------------------------------------

// MsgUseBagItemReq

// optional uint64 unique_id = 1;
inline bool MsgUseBagItemReq::has_unique_id() const {
  return _has_bit(0);
}
inline void MsgUseBagItemReq::clear_unique_id() {
  unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgUseBagItemReq::unique_id() const {
  return unique_id_;
}
inline void MsgUseBagItemReq::set_unique_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  unique_id_ = value;
}

// optional uint32 count = 2;
inline bool MsgUseBagItemReq::has_count() const {
  return _has_bit(1);
}
inline void MsgUseBagItemReq::clear_count() {
  count_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgUseBagItemReq::count() const {
  return count_;
}
inline void MsgUseBagItemReq::set_count(::google::protobuf::uint32 value) {
  _set_bit(1);
  count_ = value;
}

// -------------------------------------------------------------------

// MsgUseBagItemAck

// optional uint32 status = 1;
inline bool MsgUseBagItemAck::has_status() const {
  return _has_bit(0);
}
inline void MsgUseBagItemAck::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUseBagItemAck::status() const {
  return status_;
}
inline void MsgUseBagItemAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// FightSide

// repeated .IGameProto.BaseAttr hero_attrs = 1;
inline int FightSide::hero_attrs_size() const {
  return hero_attrs_.size();
}
inline void FightSide::clear_hero_attrs() {
  hero_attrs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >&
FightSide::hero_attrs() const {
  return hero_attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BaseAttr >*
FightSide::mutable_hero_attrs() {
  return &hero_attrs_;
}
inline const ::IGameProto::BaseAttr& FightSide::hero_attrs(int index) const {
  return hero_attrs_.Get(index);
}
inline ::IGameProto::BaseAttr* FightSide::mutable_hero_attrs(int index) {
  return hero_attrs_.Mutable(index);
}
inline ::IGameProto::BaseAttr* FightSide::add_hero_attrs() {
  return hero_attrs_.Add();
}

// repeated .IGameProto.FormPair forms = 2;
inline int FightSide::forms_size() const {
  return forms_.size();
}
inline void FightSide::clear_forms() {
  forms_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >&
FightSide::forms() const {
  return forms_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::FormPair >*
FightSide::mutable_forms() {
  return &forms_;
}
inline const ::IGameProto::FormPair& FightSide::forms(int index) const {
  return forms_.Get(index);
}
inline ::IGameProto::FormPair* FightSide::mutable_forms(int index) {
  return forms_.Mutable(index);
}
inline ::IGameProto::FormPair* FightSide::add_forms() {
  return forms_.Add();
}

// -------------------------------------------------------------------

// MsgMonsterAgainstReq

// required uint32 againstFormId = 1;
inline bool MsgMonsterAgainstReq::has_againstformid() const {
  return _has_bit(0);
}
inline void MsgMonsterAgainstReq::clear_againstformid() {
  againstformid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgMonsterAgainstReq::againstformid() const {
  return againstformid_;
}
inline void MsgMonsterAgainstReq::set_againstformid(::google::protobuf::uint32 value) {
  _set_bit(0);
  againstformid_ = value;
}

// -------------------------------------------------------------------

// MsgMonsterAgainstAck

// required uint32 againstFormId = 1;
inline bool MsgMonsterAgainstAck::has_againstformid() const {
  return _has_bit(0);
}
inline void MsgMonsterAgainstAck::clear_againstformid() {
  againstformid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgMonsterAgainstAck::againstformid() const {
  return againstformid_;
}
inline void MsgMonsterAgainstAck::set_againstformid(::google::protobuf::uint32 value) {
  _set_bit(0);
  againstformid_ = value;
}

// required int32 status = 2;
inline bool MsgMonsterAgainstAck::has_status() const {
  return _has_bit(1);
}
inline void MsgMonsterAgainstAck::clear_status() {
  status_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgMonsterAgainstAck::status() const {
  return status_;
}
inline void MsgMonsterAgainstAck::set_status(::google::protobuf::int32 value) {
  _set_bit(1);
  status_ = value;
}

// required uint64 fightId = 3;
inline bool MsgMonsterAgainstAck::has_fightid() const {
  return _has_bit(2);
}
inline void MsgMonsterAgainstAck::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 MsgMonsterAgainstAck::fightid() const {
  return fightid_;
}
inline void MsgMonsterAgainstAck::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(2);
  fightid_ = value;
}

// required .IGameProto.FightSide enemySide = 4;
inline bool MsgMonsterAgainstAck::has_enemyside() const {
  return _has_bit(3);
}
inline void MsgMonsterAgainstAck::clear_enemyside() {
  if (enemyside_ != NULL) enemyside_->::IGameProto::FightSide::Clear();
  _clear_bit(3);
}
inline const ::IGameProto::FightSide& MsgMonsterAgainstAck::enemyside() const {
  return enemyside_ != NULL ? *enemyside_ : *default_instance_->enemyside_;
}
inline ::IGameProto::FightSide* MsgMonsterAgainstAck::mutable_enemyside() {
  _set_bit(3);
  if (enemyside_ == NULL) enemyside_ = new ::IGameProto::FightSide;
  return enemyside_;
}

// -------------------------------------------------------------------

// MsgPvpReq

// -------------------------------------------------------------------

// MsgPvpAck

// required int32 status = 1;
inline bool MsgPvpAck::has_status() const {
  return _has_bit(0);
}
inline void MsgPvpAck::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgPvpAck::status() const {
  return status_;
}
inline void MsgPvpAck::set_status(::google::protobuf::int32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgPvpCancelReq

// -------------------------------------------------------------------

// MsgPvpNtf

// required int32 status = 1;
inline bool MsgPvpNtf::has_status() const {
  return _has_bit(0);
}
inline void MsgPvpNtf::clear_status() {
  status_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgPvpNtf::status() const {
  return status_;
}
inline void MsgPvpNtf::set_status(::google::protobuf::int32 value) {
  _set_bit(0);
  status_ = value;
}

// required uint64 fightId = 2;
inline bool MsgPvpNtf::has_fightid() const {
  return _has_bit(1);
}
inline void MsgPvpNtf::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 MsgPvpNtf::fightid() const {
  return fightid_;
}
inline void MsgPvpNtf::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(1);
  fightid_ = value;
}

// required .IGameProto.FightSide enemySide = 3;
inline bool MsgPvpNtf::has_enemyside() const {
  return _has_bit(2);
}
inline void MsgPvpNtf::clear_enemyside() {
  if (enemyside_ != NULL) enemyside_->::IGameProto::FightSide::Clear();
  _clear_bit(2);
}
inline const ::IGameProto::FightSide& MsgPvpNtf::enemyside() const {
  return enemyside_ != NULL ? *enemyside_ : *default_instance_->enemyside_;
}
inline ::IGameProto::FightSide* MsgPvpNtf::mutable_enemyside() {
  _set_bit(2);
  if (enemyside_ == NULL) enemyside_ = new ::IGameProto::FightSide;
  return enemyside_;
}

// -------------------------------------------------------------------

// MsgLoadFightResProgressReq

// required uint64 fightId = 1;
inline bool MsgLoadFightResProgressReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgLoadFightResProgressReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgLoadFightResProgressReq::fightid() const {
  return fightid_;
}
inline void MsgLoadFightResProgressReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// required int32 progress = 2;
inline bool MsgLoadFightResProgressReq::has_progress() const {
  return _has_bit(1);
}
inline void MsgLoadFightResProgressReq::clear_progress() {
  progress_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgLoadFightResProgressReq::progress() const {
  return progress_;
}
inline void MsgLoadFightResProgressReq::set_progress(::google::protobuf::int32 value) {
  _set_bit(1);
  progress_ = value;
}

// -------------------------------------------------------------------

// MsgLoadFightResProgressNtf

// required uint64 fightId = 1;
inline bool MsgLoadFightResProgressNtf::has_fightid() const {
  return _has_bit(0);
}
inline void MsgLoadFightResProgressNtf::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgLoadFightResProgressNtf::fightid() const {
  return fightid_;
}
inline void MsgLoadFightResProgressNtf::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// required uint32 roleId = 2;
inline bool MsgLoadFightResProgressNtf::has_roleid() const {
  return _has_bit(1);
}
inline void MsgLoadFightResProgressNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgLoadFightResProgressNtf::roleid() const {
  return roleid_;
}
inline void MsgLoadFightResProgressNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(1);
  roleid_ = value;
}

// required int32 progress = 3;
inline bool MsgLoadFightResProgressNtf::has_progress() const {
  return _has_bit(2);
}
inline void MsgLoadFightResProgressNtf::clear_progress() {
  progress_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgLoadFightResProgressNtf::progress() const {
  return progress_;
}
inline void MsgLoadFightResProgressNtf::set_progress(::google::protobuf::int32 value) {
  _set_bit(2);
  progress_ = value;
}

// -------------------------------------------------------------------

// MsgFightStartReq

// required uint64 fightId = 1;
inline bool MsgFightStartReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgFightStartReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgFightStartReq::fightid() const {
  return fightid_;
}
inline void MsgFightStartReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// -------------------------------------------------------------------

// MsgFightStartNtf

// required uint64 fightId = 1;
inline bool MsgFightStartNtf::has_fightid() const {
  return _has_bit(0);
}
inline void MsgFightStartNtf::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgFightStartNtf::fightid() const {
  return fightid_;
}
inline void MsgFightStartNtf::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// -------------------------------------------------------------------

// MsgFightEndReq

// required uint64 fightId = 1;
inline bool MsgFightEndReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgFightEndReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgFightEndReq::fightid() const {
  return fightid_;
}
inline void MsgFightEndReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// -------------------------------------------------------------------

// MsgFightEndNtf

// required uint64 fightId = 1;
inline bool MsgFightEndNtf::has_fightid() const {
  return _has_bit(0);
}
inline void MsgFightEndNtf::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgFightEndNtf::fightid() const {
  return fightid_;
}
inline void MsgFightEndNtf::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// required uint32 result = 2;
inline bool MsgFightEndNtf::has_result() const {
  return _has_bit(1);
}
inline void MsgFightEndNtf::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgFightEndNtf::result() const {
  return result_;
}
inline void MsgFightEndNtf::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// SkillInfo

// optional uint64 src_hero_unique_id = 1;
inline bool SkillInfo::has_src_hero_unique_id() const {
  return _has_bit(0);
}
inline void SkillInfo::clear_src_hero_unique_id() {
  src_hero_unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 SkillInfo::src_hero_unique_id() const {
  return src_hero_unique_id_;
}
inline void SkillInfo::set_src_hero_unique_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  src_hero_unique_id_ = value;
}

// required uint32 skillId = 2;
inline bool SkillInfo::has_skillid() const {
  return _has_bit(1);
}
inline void SkillInfo::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SkillInfo::skillid() const {
  return skillid_;
}
inline void SkillInfo::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(1);
  skillid_ = value;
}

// repeated uint32 posIds = 3;
inline int SkillInfo::posids_size() const {
  return posids_.size();
}
inline void SkillInfo::clear_posids() {
  posids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SkillInfo::posids() const {
  return posids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SkillInfo::mutable_posids() {
  return &posids_;
}
inline ::google::protobuf::uint32 SkillInfo::posids(int index) const {
  return posids_.Get(index);
}
inline void SkillInfo::set_posids(int index, ::google::protobuf::uint32 value) {
  posids_.Set(index, value);
}
inline void SkillInfo::add_posids(::google::protobuf::uint32 value) {
  posids_.Add(value);
}

// -------------------------------------------------------------------

// DamageInfo

// optional uint64 src_hero_unique_id = 1;
inline bool DamageInfo::has_src_hero_unique_id() const {
  return _has_bit(0);
}
inline void DamageInfo::clear_src_hero_unique_id() {
  src_hero_unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 DamageInfo::src_hero_unique_id() const {
  return src_hero_unique_id_;
}
inline void DamageInfo::set_src_hero_unique_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  src_hero_unique_id_ = value;
}

// required uint32 damageId = 2;
inline bool DamageInfo::has_damageid() const {
  return _has_bit(1);
}
inline void DamageInfo::clear_damageid() {
  damageid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 DamageInfo::damageid() const {
  return damageid_;
}
inline void DamageInfo::set_damageid(::google::protobuf::uint32 value) {
  _set_bit(1);
  damageid_ = value;
}

// repeated uint32 posIds = 3;
inline int DamageInfo::posids_size() const {
  return posids_.size();
}
inline void DamageInfo::clear_posids() {
  posids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DamageInfo::posids() const {
  return posids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DamageInfo::mutable_posids() {
  return &posids_;
}
inline ::google::protobuf::uint32 DamageInfo::posids(int index) const {
  return posids_.Get(index);
}
inline void DamageInfo::set_posids(int index, ::google::protobuf::uint32 value) {
  posids_.Set(index, value);
}
inline void DamageInfo::add_posids(::google::protobuf::uint32 value) {
  posids_.Add(value);
}

// -------------------------------------------------------------------

// BuffInfo

// optional uint64 src_hero_unique_id = 1;
inline bool BuffInfo::has_src_hero_unique_id() const {
  return _has_bit(0);
}
inline void BuffInfo::clear_src_hero_unique_id() {
  src_hero_unique_id_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 BuffInfo::src_hero_unique_id() const {
  return src_hero_unique_id_;
}
inline void BuffInfo::set_src_hero_unique_id(::google::protobuf::uint64 value) {
  _set_bit(0);
  src_hero_unique_id_ = value;
}

// required uint32 buffId = 2;
inline bool BuffInfo::has_buffid() const {
  return _has_bit(1);
}
inline void BuffInfo::clear_buffid() {
  buffid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 BuffInfo::buffid() const {
  return buffid_;
}
inline void BuffInfo::set_buffid(::google::protobuf::uint32 value) {
  _set_bit(1);
  buffid_ = value;
}

// repeated uint32 posIds = 3;
inline int BuffInfo::posids_size() const {
  return posids_.size();
}
inline void BuffInfo::clear_posids() {
  posids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BuffInfo::posids() const {
  return posids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BuffInfo::mutable_posids() {
  return &posids_;
}
inline ::google::protobuf::uint32 BuffInfo::posids(int index) const {
  return posids_.Get(index);
}
inline void BuffInfo::set_posids(int index, ::google::protobuf::uint32 value) {
  posids_.Set(index, value);
}
inline void BuffInfo::add_posids(::google::protobuf::uint32 value) {
  posids_.Add(value);
}

// -------------------------------------------------------------------

// AttackInfo

// required uint32 attackId = 1;
inline bool AttackInfo::has_attackid() const {
  return _has_bit(0);
}
inline void AttackInfo::clear_attackid() {
  attackid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 AttackInfo::attackid() const {
  return attackid_;
}
inline void AttackInfo::set_attackid(::google::protobuf::uint32 value) {
  _set_bit(0);
  attackid_ = value;
}

// required .IGameProto.SkillInfo skills = 2;
inline bool AttackInfo::has_skills() const {
  return _has_bit(1);
}
inline void AttackInfo::clear_skills() {
  if (skills_ != NULL) skills_->::IGameProto::SkillInfo::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::SkillInfo& AttackInfo::skills() const {
  return skills_ != NULL ? *skills_ : *default_instance_->skills_;
}
inline ::IGameProto::SkillInfo* AttackInfo::mutable_skills() {
  _set_bit(1);
  if (skills_ == NULL) skills_ = new ::IGameProto::SkillInfo;
  return skills_;
}

// repeated .IGameProto.DamageInfo damages = 3;
inline int AttackInfo::damages_size() const {
  return damages_.size();
}
inline void AttackInfo::clear_damages() {
  damages_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::DamageInfo >&
AttackInfo::damages() const {
  return damages_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::DamageInfo >*
AttackInfo::mutable_damages() {
  return &damages_;
}
inline const ::IGameProto::DamageInfo& AttackInfo::damages(int index) const {
  return damages_.Get(index);
}
inline ::IGameProto::DamageInfo* AttackInfo::mutable_damages(int index) {
  return damages_.Mutable(index);
}
inline ::IGameProto::DamageInfo* AttackInfo::add_damages() {
  return damages_.Add();
}

// repeated .IGameProto.BuffInfo buffs = 4;
inline int AttackInfo::buffs_size() const {
  return buffs_.size();
}
inline void AttackInfo::clear_buffs() {
  buffs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::BuffInfo >&
AttackInfo::buffs() const {
  return buffs_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::BuffInfo >*
AttackInfo::mutable_buffs() {
  return &buffs_;
}
inline const ::IGameProto::BuffInfo& AttackInfo::buffs(int index) const {
  return buffs_.Get(index);
}
inline ::IGameProto::BuffInfo* AttackInfo::mutable_buffs(int index) {
  return buffs_.Mutable(index);
}
inline ::IGameProto::BuffInfo* AttackInfo::add_buffs() {
  return buffs_.Add();
}

// -------------------------------------------------------------------

// MsgAttackReq

// required uint64 fightId = 1;
inline bool MsgAttackReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgAttackReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgAttackReq::fightid() const {
  return fightid_;
}
inline void MsgAttackReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// required .IGameProto.AttackInfo attackInfo = 2;
inline bool MsgAttackReq::has_attackinfo() const {
  return _has_bit(1);
}
inline void MsgAttackReq::clear_attackinfo() {
  if (attackinfo_ != NULL) attackinfo_->::IGameProto::AttackInfo::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::AttackInfo& MsgAttackReq::attackinfo() const {
  return attackinfo_ != NULL ? *attackinfo_ : *default_instance_->attackinfo_;
}
inline ::IGameProto::AttackInfo* MsgAttackReq::mutable_attackinfo() {
  _set_bit(1);
  if (attackinfo_ == NULL) attackinfo_ = new ::IGameProto::AttackInfo;
  return attackinfo_;
}

// -------------------------------------------------------------------

// MsgAttackAck

// required uint32 attackId = 1;
inline bool MsgAttackAck::has_attackid() const {
  return _has_bit(0);
}
inline void MsgAttackAck::clear_attackid() {
  attackid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgAttackAck::attackid() const {
  return attackid_;
}
inline void MsgAttackAck::set_attackid(::google::protobuf::uint32 value) {
  _set_bit(0);
  attackid_ = value;
}

// required uint32 status = 2;
inline bool MsgAttackAck::has_status() const {
  return _has_bit(1);
}
inline void MsgAttackAck::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgAttackAck::status() const {
  return status_;
}
inline void MsgAttackAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgAttackNtf

// required .IGameProto.AttackInfo attackInfo = 1;
inline bool MsgAttackNtf::has_attackinfo() const {
  return _has_bit(0);
}
inline void MsgAttackNtf::clear_attackinfo() {
  if (attackinfo_ != NULL) attackinfo_->::IGameProto::AttackInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::AttackInfo& MsgAttackNtf::attackinfo() const {
  return attackinfo_ != NULL ? *attackinfo_ : *default_instance_->attackinfo_;
}
inline ::IGameProto::AttackInfo* MsgAttackNtf::mutable_attackinfo() {
  _set_bit(0);
  if (attackinfo_ == NULL) attackinfo_ = new ::IGameProto::AttackInfo;
  return attackinfo_;
}

// -------------------------------------------------------------------

// MsgRoundStartReq

// required uint64 fightId = 1;
inline bool MsgRoundStartReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgRoundStartReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgRoundStartReq::fightid() const {
  return fightid_;
}
inline void MsgRoundStartReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// -------------------------------------------------------------------

// MsgRoundEndReq

// required uint64 fightId = 1;
inline bool MsgRoundEndReq::has_fightid() const {
  return _has_bit(0);
}
inline void MsgRoundEndReq::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgRoundEndReq::fightid() const {
  return fightid_;
}
inline void MsgRoundEndReq::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(0);
  fightid_ = value;
}

// -------------------------------------------------------------------

// MsgBuildInfoNtf

// optional uint32 copperLeftTime = 1;
inline bool MsgBuildInfoNtf::has_copperlefttime() const {
  return _has_bit(0);
}
inline void MsgBuildInfoNtf::clear_copperlefttime() {
  copperlefttime_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::copperlefttime() const {
  return copperlefttime_;
}
inline void MsgBuildInfoNtf::set_copperlefttime(::google::protobuf::uint32 value) {
  _set_bit(0);
  copperlefttime_ = value;
}

// optional uint32 copper = 2;
inline bool MsgBuildInfoNtf::has_copper() const {
  return _has_bit(1);
}
inline void MsgBuildInfoNtf::clear_copper() {
  copper_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::copper() const {
  return copper_;
}
inline void MsgBuildInfoNtf::set_copper(::google::protobuf::uint32 value) {
  _set_bit(1);
  copper_ = value;
}

// optional uint32 taskId = 3;
inline bool MsgBuildInfoNtf::has_taskid() const {
  return _has_bit(2);
}
inline void MsgBuildInfoNtf::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::taskid() const {
  return taskid_;
}
inline void MsgBuildInfoNtf::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(2);
  taskid_ = value;
}

// optional uint32 taskLeftTime = 4;
inline bool MsgBuildInfoNtf::has_tasklefttime() const {
  return _has_bit(3);
}
inline void MsgBuildInfoNtf::clear_tasklefttime() {
  tasklefttime_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::tasklefttime() const {
  return tasklefttime_;
}
inline void MsgBuildInfoNtf::set_tasklefttime(::google::protobuf::uint32 value) {
  _set_bit(3);
  tasklefttime_ = value;
}

// optional uint32 isStart = 5;
inline bool MsgBuildInfoNtf::has_isstart() const {
  return _has_bit(4);
}
inline void MsgBuildInfoNtf::clear_isstart() {
  isstart_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::isstart() const {
  return isstart_;
}
inline void MsgBuildInfoNtf::set_isstart(::google::protobuf::uint32 value) {
  _set_bit(4);
  isstart_ = value;
}

// optional uint32 level = 6;
inline bool MsgBuildInfoNtf::has_level() const {
  return _has_bit(5);
}
inline void MsgBuildInfoNtf::clear_level() {
  level_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::level() const {
  return level_;
}
inline void MsgBuildInfoNtf::set_level(::google::protobuf::uint32 value) {
  _set_bit(5);
  level_ = value;
}

// optional uint32 starLevel = 7;
inline bool MsgBuildInfoNtf::has_starlevel() const {
  return _has_bit(6);
}
inline void MsgBuildInfoNtf::clear_starlevel() {
  starlevel_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::starlevel() const {
  return starlevel_;
}
inline void MsgBuildInfoNtf::set_starlevel(::google::protobuf::uint32 value) {
  _set_bit(6);
  starlevel_ = value;
}

// repeated uint32 heroIds = 8;
inline int MsgBuildInfoNtf::heroids_size() const {
  return heroids_.size();
}
inline void MsgBuildInfoNtf::clear_heroids() {
  heroids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgBuildInfoNtf::heroids() const {
  return heroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgBuildInfoNtf::mutable_heroids() {
  return &heroids_;
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::heroids(int index) const {
  return heroids_.Get(index);
}
inline void MsgBuildInfoNtf::set_heroids(int index, ::google::protobuf::uint32 value) {
  heroids_.Set(index, value);
}
inline void MsgBuildInfoNtf::add_heroids(::google::protobuf::uint32 value) {
  heroids_.Add(value);
}

// optional uint32 leftTimes = 9;
inline bool MsgBuildInfoNtf::has_lefttimes() const {
  return _has_bit(8);
}
inline void MsgBuildInfoNtf::clear_lefttimes() {
  lefttimes_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 MsgBuildInfoNtf::lefttimes() const {
  return lefttimes_;
}
inline void MsgBuildInfoNtf::set_lefttimes(::google::protobuf::uint32 value) {
  _set_bit(8);
  lefttimes_ = value;
}

// -------------------------------------------------------------------

// MsgGetBuildCoppperReq

// -------------------------------------------------------------------

// MsgGetBuildCoppperAck

// optional uint32 count = 1;
inline bool MsgGetBuildCoppperAck::has_count() const {
  return _has_bit(0);
}
inline void MsgGetBuildCoppperAck::clear_count() {
  count_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgGetBuildCoppperAck::count() const {
  return count_;
}
inline void MsgGetBuildCoppperAck::set_count(::google::protobuf::uint32 value) {
  _set_bit(0);
  count_ = value;
}

// -------------------------------------------------------------------

// MsgUpgradeInteriorBuildReq

// -------------------------------------------------------------------

// MsgUpgradeInteriorBuildAck

// optional uint32 level = 1;
inline bool MsgUpgradeInteriorBuildAck::has_level() const {
  return _has_bit(0);
}
inline void MsgUpgradeInteriorBuildAck::clear_level() {
  level_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUpgradeInteriorBuildAck::level() const {
  return level_;
}
inline void MsgUpgradeInteriorBuildAck::set_level(::google::protobuf::uint32 value) {
  _set_bit(0);
  level_ = value;
}

// optional uint32 status = 2;
inline bool MsgUpgradeInteriorBuildAck::has_status() const {
  return _has_bit(1);
}
inline void MsgUpgradeInteriorBuildAck::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgUpgradeInteriorBuildAck::status() const {
  return status_;
}
inline void MsgUpgradeInteriorBuildAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgInteriorTaskFinishedNtf

// optional uint32 taskId = 1;
inline bool MsgInteriorTaskFinishedNtf::has_taskid() const {
  return _has_bit(0);
}
inline void MsgInteriorTaskFinishedNtf::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgInteriorTaskFinishedNtf::taskid() const {
  return taskid_;
}
inline void MsgInteriorTaskFinishedNtf::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// -------------------------------------------------------------------

// MsgDispatchTaskReq

// optional uint32 taskId = 1;
inline bool MsgDispatchTaskReq::has_taskid() const {
  return _has_bit(0);
}
inline void MsgDispatchTaskReq::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgDispatchTaskReq::taskid() const {
  return taskid_;
}
inline void MsgDispatchTaskReq::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 task_star_level = 2;
inline bool MsgDispatchTaskReq::has_task_star_level() const {
  return _has_bit(1);
}
inline void MsgDispatchTaskReq::clear_task_star_level() {
  task_star_level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgDispatchTaskReq::task_star_level() const {
  return task_star_level_;
}
inline void MsgDispatchTaskReq::set_task_star_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  task_star_level_ = value;
}

// repeated uint32 heroIds = 3;
inline int MsgDispatchTaskReq::heroids_size() const {
  return heroids_.size();
}
inline void MsgDispatchTaskReq::clear_heroids() {
  heroids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgDispatchTaskReq::heroids() const {
  return heroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgDispatchTaskReq::mutable_heroids() {
  return &heroids_;
}
inline ::google::protobuf::uint32 MsgDispatchTaskReq::heroids(int index) const {
  return heroids_.Get(index);
}
inline void MsgDispatchTaskReq::set_heroids(int index, ::google::protobuf::uint32 value) {
  heroids_.Set(index, value);
}
inline void MsgDispatchTaskReq::add_heroids(::google::protobuf::uint32 value) {
  heroids_.Add(value);
}

// -------------------------------------------------------------------

// MsgDispatchTaskAck

// optional uint32 taskId = 1;
inline bool MsgDispatchTaskAck::has_taskid() const {
  return _has_bit(0);
}
inline void MsgDispatchTaskAck::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgDispatchTaskAck::taskid() const {
  return taskid_;
}
inline void MsgDispatchTaskAck::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 task_star_level = 2;
inline bool MsgDispatchTaskAck::has_task_star_level() const {
  return _has_bit(1);
}
inline void MsgDispatchTaskAck::clear_task_star_level() {
  task_star_level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgDispatchTaskAck::task_star_level() const {
  return task_star_level_;
}
inline void MsgDispatchTaskAck::set_task_star_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  task_star_level_ = value;
}

// repeated uint32 heroIds = 3;
inline int MsgDispatchTaskAck::heroids_size() const {
  return heroids_.size();
}
inline void MsgDispatchTaskAck::clear_heroids() {
  heroids_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MsgDispatchTaskAck::heroids() const {
  return heroids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MsgDispatchTaskAck::mutable_heroids() {
  return &heroids_;
}
inline ::google::protobuf::uint32 MsgDispatchTaskAck::heroids(int index) const {
  return heroids_.Get(index);
}
inline void MsgDispatchTaskAck::set_heroids(int index, ::google::protobuf::uint32 value) {
  heroids_.Set(index, value);
}
inline void MsgDispatchTaskAck::add_heroids(::google::protobuf::uint32 value) {
  heroids_.Add(value);
}

// optional uint32 status = 4;
inline bool MsgDispatchTaskAck::has_status() const {
  return _has_bit(3);
}
inline void MsgDispatchTaskAck::clear_status() {
  status_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 MsgDispatchTaskAck::status() const {
  return status_;
}
inline void MsgDispatchTaskAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(3);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgRefreshTaskReq

// -------------------------------------------------------------------

// MsgRefreshTaskAck

// optional uint32 taskId = 1;
inline bool MsgRefreshTaskAck::has_taskid() const {
  return _has_bit(0);
}
inline void MsgRefreshTaskAck::clear_taskid() {
  taskid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgRefreshTaskAck::taskid() const {
  return taskid_;
}
inline void MsgRefreshTaskAck::set_taskid(::google::protobuf::uint32 value) {
  _set_bit(0);
  taskid_ = value;
}

// optional uint32 taskStarLevel = 2;
inline bool MsgRefreshTaskAck::has_taskstarlevel() const {
  return _has_bit(1);
}
inline void MsgRefreshTaskAck::clear_taskstarlevel() {
  taskstarlevel_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgRefreshTaskAck::taskstarlevel() const {
  return taskstarlevel_;
}
inline void MsgRefreshTaskAck::set_taskstarlevel(::google::protobuf::uint32 value) {
  _set_bit(1);
  taskstarlevel_ = value;
}

// -------------------------------------------------------------------

// MsgUpgradeTaskStarLevelReq

// optional uint32 starLevel = 1;
inline bool MsgUpgradeTaskStarLevelReq::has_starlevel() const {
  return _has_bit(0);
}
inline void MsgUpgradeTaskStarLevelReq::clear_starlevel() {
  starlevel_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUpgradeTaskStarLevelReq::starlevel() const {
  return starlevel_;
}
inline void MsgUpgradeTaskStarLevelReq::set_starlevel(::google::protobuf::uint32 value) {
  _set_bit(0);
  starlevel_ = value;
}

// -------------------------------------------------------------------

// MsgUpgradeTaskStarLevelAck

// optional uint32 starLevel = 1;
inline bool MsgUpgradeTaskStarLevelAck::has_starlevel() const {
  return _has_bit(0);
}
inline void MsgUpgradeTaskStarLevelAck::clear_starlevel() {
  starlevel_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgUpgradeTaskStarLevelAck::starlevel() const {
  return starlevel_;
}
inline void MsgUpgradeTaskStarLevelAck::set_starlevel(::google::protobuf::uint32 value) {
  _set_bit(0);
  starlevel_ = value;
}

// -------------------------------------------------------------------

// MsgGetInteriorRewardReq

// -------------------------------------------------------------------

// MsgGetInteriorRewardAck

// optional uint32 status = 1;
inline bool MsgGetInteriorRewardAck::has_status() const {
  return _has_bit(0);
}
inline void MsgGetInteriorRewardAck::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgGetInteriorRewardAck::status() const {
  return status_;
}
inline void MsgGetInteriorRewardAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgCompleteInteriorTaskReq

// -------------------------------------------------------------------

// MsgCompleteInteriorTaskAck

// optional uint32 status = 1;
inline bool MsgCompleteInteriorTaskAck::has_status() const {
  return _has_bit(0);
}
inline void MsgCompleteInteriorTaskAck::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCompleteInteriorTaskAck::status() const {
  return status_;
}
inline void MsgCompleteInteriorTaskAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgCreateArmyReq

// -------------------------------------------------------------------

// MsgCreateArmyAck

// optional uint32 id = 1;
inline bool MsgCreateArmyAck::has_id() const {
  return _has_bit(0);
}
inline void MsgCreateArmyAck::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCreateArmyAck::id() const {
  return id_;
}
inline void MsgCreateArmyAck::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MsgJoinArmyReq

// optional uint32 id = 1;
inline bool MsgJoinArmyReq::has_id() const {
  return _has_bit(0);
}
inline void MsgJoinArmyReq::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgJoinArmyReq::id() const {
  return id_;
}
inline void MsgJoinArmyReq::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MsgJoinArmyAck

// optional uint32 id = 1;
inline bool MsgJoinArmyAck::has_id() const {
  return _has_bit(0);
}
inline void MsgJoinArmyAck::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgJoinArmyAck::id() const {
  return id_;
}
inline void MsgJoinArmyAck::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 status = 2;
inline bool MsgJoinArmyAck::has_status() const {
  return _has_bit(1);
}
inline void MsgJoinArmyAck::clear_status() {
  status_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgJoinArmyAck::status() const {
  return status_;
}
inline void MsgJoinArmyAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(1);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgApproveJoinArmyReq

// optional string roleName = 1;
inline bool MsgApproveJoinArmyReq::has_rolename() const {
  return _has_bit(0);
}
inline void MsgApproveJoinArmyReq::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgApproveJoinArmyReq::rolename() const {
  return *rolename_;
}
inline void MsgApproveJoinArmyReq::set_rolename(const ::std::string& value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgApproveJoinArmyReq::set_rolename(const char* value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgApproveJoinArmyReq::set_rolename(const char* value, size_t size) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgApproveJoinArmyReq::mutable_rolename() {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// MsgApproveJoinArmyAck

// -------------------------------------------------------------------

// MsgLeaveArmyReq

// -------------------------------------------------------------------

// MsgJoinCountryReq

// optional uint32 id = 1;
inline bool MsgJoinCountryReq::has_id() const {
  return _has_bit(0);
}
inline void MsgJoinCountryReq::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgJoinCountryReq::id() const {
  return id_;
}
inline void MsgJoinCountryReq::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// -------------------------------------------------------------------

// MsgLeaveCountryReq

// -------------------------------------------------------------------

// MsgCountryAssignReq

// optional string roleName = 1;
inline bool MsgCountryAssignReq::has_rolename() const {
  return _has_bit(0);
}
inline void MsgCountryAssignReq::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgCountryAssignReq::rolename() const {
  return *rolename_;
}
inline void MsgCountryAssignReq::set_rolename(const ::std::string& value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgCountryAssignReq::set_rolename(const char* value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgCountryAssignReq::set_rolename(const char* value, size_t size) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCountryAssignReq::mutable_rolename() {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional .IGameProto.OFFICER_TYPE office = 2;
inline bool MsgCountryAssignReq::has_office() const {
  return _has_bit(1);
}
inline void MsgCountryAssignReq::clear_office() {
  office_ = 0;
  _clear_bit(1);
}
inline IGameProto::OFFICER_TYPE MsgCountryAssignReq::office() const {
  return static_cast< IGameProto::OFFICER_TYPE >(office_);
}
inline void MsgCountryAssignReq::set_office(IGameProto::OFFICER_TYPE value) {
  GOOGLE_DCHECK(IGameProto::OFFICER_TYPE_IsValid(value));
  _set_bit(1);
  office_ = value;
}

// -------------------------------------------------------------------

// MsgArmyAssignReq

// optional string roleName = 1;
inline bool MsgArmyAssignReq::has_rolename() const {
  return _has_bit(0);
}
inline void MsgArmyAssignReq::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgArmyAssignReq::rolename() const {
  return *rolename_;
}
inline void MsgArmyAssignReq::set_rolename(const ::std::string& value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgArmyAssignReq::set_rolename(const char* value) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void MsgArmyAssignReq::set_rolename(const char* value, size_t size) {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgArmyAssignReq::mutable_rolename() {
  _set_bit(0);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// optional .IGameProto.ArmyOfficerType office = 2;
inline bool MsgArmyAssignReq::has_office() const {
  return _has_bit(1);
}
inline void MsgArmyAssignReq::clear_office() {
  office_ = 0;
  _clear_bit(1);
}
inline IGameProto::ArmyOfficerType MsgArmyAssignReq::office() const {
  return static_cast< IGameProto::ArmyOfficerType >(office_);
}
inline void MsgArmyAssignReq::set_office(IGameProto::ArmyOfficerType value) {
  GOOGLE_DCHECK(IGameProto::ArmyOfficerType_IsValid(value));
  _set_bit(1);
  office_ = value;
}

// -------------------------------------------------------------------

// officer

// optional uint32 officeType = 1;
inline bool officer::has_officetype() const {
  return _has_bit(0);
}
inline void officer::clear_officetype() {
  officetype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 officer::officetype() const {
  return officetype_;
}
inline void officer::set_officetype(::google::protobuf::uint32 value) {
  _set_bit(0);
  officetype_ = value;
}

// optional string roleName = 2;
inline bool officer::has_rolename() const {
  return _has_bit(1);
}
inline void officer::clear_rolename() {
  if (rolename_ != &_default_rolename_) {
    rolename_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& officer::rolename() const {
  return *rolename_;
}
inline void officer::set_rolename(const ::std::string& value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void officer::set_rolename(const char* value) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void officer::set_rolename(const char* value, size_t size) {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* officer::mutable_rolename() {
  _set_bit(1);
  if (rolename_ == &_default_rolename_) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}

// -------------------------------------------------------------------

// ArmyInfo

// optional uint32 id = 1;
inline bool ArmyInfo::has_id() const {
  return _has_bit(0);
}
inline void ArmyInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 ArmyInfo::id() const {
  return id_;
}
inline void ArmyInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 level = 2;
inline bool ArmyInfo::has_level() const {
  return _has_bit(1);
}
inline void ArmyInfo::clear_level() {
  level_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 ArmyInfo::level() const {
  return level_;
}
inline void ArmyInfo::set_level(::google::protobuf::uint32 value) {
  _set_bit(1);
  level_ = value;
}

// optional uint32 money = 3;
inline bool ArmyInfo::has_money() const {
  return _has_bit(2);
}
inline void ArmyInfo::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 ArmyInfo::money() const {
  return money_;
}
inline void ArmyInfo::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// repeated string members = 4;
inline int ArmyInfo::members_size() const {
  return members_.size();
}
inline void ArmyInfo::clear_members() {
  members_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArmyInfo::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArmyInfo::mutable_members() {
  return &members_;
}
inline const ::std::string& ArmyInfo::members(int index) const {
  return members_.Get(index);
}
inline ::std::string* ArmyInfo::mutable_members(int index) {
  return members_.Mutable(index);
}
inline void ArmyInfo::set_members(int index, const ::std::string& value) {
  members_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_members(int index, const char* value) {
  members_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArmyInfo::add_members() {
  return members_.Add();
}
inline void ArmyInfo::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
}
inline void ArmyInfo::add_members(const char* value) {
  members_.Add()->assign(value);
}
inline void ArmyInfo::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string newbies = 5;
inline int ArmyInfo::newbies_size() const {
  return newbies_.size();
}
inline void ArmyInfo::clear_newbies() {
  newbies_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArmyInfo::newbies() const {
  return newbies_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArmyInfo::mutable_newbies() {
  return &newbies_;
}
inline const ::std::string& ArmyInfo::newbies(int index) const {
  return newbies_.Get(index);
}
inline ::std::string* ArmyInfo::mutable_newbies(int index) {
  return newbies_.Mutable(index);
}
inline void ArmyInfo::set_newbies(int index, const ::std::string& value) {
  newbies_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_newbies(int index, const char* value) {
  newbies_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_newbies(int index, const char* value, size_t size) {
  newbies_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArmyInfo::add_newbies() {
  return newbies_.Add();
}
inline void ArmyInfo::add_newbies(const ::std::string& value) {
  newbies_.Add()->assign(value);
}
inline void ArmyInfo::add_newbies(const char* value) {
  newbies_.Add()->assign(value);
}
inline void ArmyInfo::add_newbies(const char* value, size_t size) {
  newbies_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// repeated string appliers = 6;
inline int ArmyInfo::appliers_size() const {
  return appliers_.size();
}
inline void ArmyInfo::clear_appliers() {
  appliers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ArmyInfo::appliers() const {
  return appliers_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ArmyInfo::mutable_appliers() {
  return &appliers_;
}
inline const ::std::string& ArmyInfo::appliers(int index) const {
  return appliers_.Get(index);
}
inline ::std::string* ArmyInfo::mutable_appliers(int index) {
  return appliers_.Mutable(index);
}
inline void ArmyInfo::set_appliers(int index, const ::std::string& value) {
  appliers_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_appliers(int index, const char* value) {
  appliers_.Mutable(index)->assign(value);
}
inline void ArmyInfo::set_appliers(int index, const char* value, size_t size) {
  appliers_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArmyInfo::add_appliers() {
  return appliers_.Add();
}
inline void ArmyInfo::add_appliers(const ::std::string& value) {
  appliers_.Add()->assign(value);
}
inline void ArmyInfo::add_appliers(const char* value) {
  appliers_.Add()->assign(value);
}
inline void ArmyInfo::add_appliers(const char* value, size_t size) {
  appliers_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// optional uint32 city = 7;
inline bool ArmyInfo::has_city() const {
  return _has_bit(6);
}
inline void ArmyInfo::clear_city() {
  city_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 ArmyInfo::city() const {
  return city_;
}
inline void ArmyInfo::set_city(::google::protobuf::uint32 value) {
  _set_bit(6);
  city_ = value;
}

// optional uint32 country = 8;
inline bool ArmyInfo::has_country() const {
  return _has_bit(7);
}
inline void ArmyInfo::clear_country() {
  country_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 ArmyInfo::country() const {
  return country_;
}
inline void ArmyInfo::set_country(::google::protobuf::uint32 value) {
  _set_bit(7);
  country_ = value;
}

// repeated .IGameProto.officer officers = 9;
inline int ArmyInfo::officers_size() const {
  return officers_.size();
}
inline void ArmyInfo::clear_officers() {
  officers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >&
ArmyInfo::officers() const {
  return officers_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >*
ArmyInfo::mutable_officers() {
  return &officers_;
}
inline const ::IGameProto::officer& ArmyInfo::officers(int index) const {
  return officers_.Get(index);
}
inline ::IGameProto::officer* ArmyInfo::mutable_officers(int index) {
  return officers_.Mutable(index);
}
inline ::IGameProto::officer* ArmyInfo::add_officers() {
  return officers_.Add();
}

// optional string general = 10;
inline bool ArmyInfo::has_general() const {
  return _has_bit(9);
}
inline void ArmyInfo::clear_general() {
  if (general_ != &_default_general_) {
    general_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& ArmyInfo::general() const {
  return *general_;
}
inline void ArmyInfo::set_general(const ::std::string& value) {
  _set_bit(9);
  if (general_ == &_default_general_) {
    general_ = new ::std::string;
  }
  general_->assign(value);
}
inline void ArmyInfo::set_general(const char* value) {
  _set_bit(9);
  if (general_ == &_default_general_) {
    general_ = new ::std::string;
  }
  general_->assign(value);
}
inline void ArmyInfo::set_general(const char* value, size_t size) {
  _set_bit(9);
  if (general_ == &_default_general_) {
    general_ = new ::std::string;
  }
  general_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArmyInfo::mutable_general() {
  _set_bit(9);
  if (general_ == &_default_general_) {
    general_ = new ::std::string;
  }
  return general_;
}

// -------------------------------------------------------------------

// CountryInfo

// optional uint32 id = 1;
inline bool CountryInfo::has_id() const {
  return _has_bit(0);
}
inline void CountryInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CountryInfo::id() const {
  return id_;
}
inline void CountryInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// repeated .IGameProto.ArmyInfo armies = 3;
inline int CountryInfo::armies_size() const {
  return armies_.size();
}
inline void CountryInfo::clear_armies() {
  armies_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::ArmyInfo >&
CountryInfo::armies() const {
  return armies_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::ArmyInfo >*
CountryInfo::mutable_armies() {
  return &armies_;
}
inline const ::IGameProto::ArmyInfo& CountryInfo::armies(int index) const {
  return armies_.Get(index);
}
inline ::IGameProto::ArmyInfo* CountryInfo::mutable_armies(int index) {
  return armies_.Mutable(index);
}
inline ::IGameProto::ArmyInfo* CountryInfo::add_armies() {
  return armies_.Add();
}

// optional uint32 money = 4;
inline bool CountryInfo::has_money() const {
  return _has_bit(2);
}
inline void CountryInfo::clear_money() {
  money_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 CountryInfo::money() const {
  return money_;
}
inline void CountryInfo::set_money(::google::protobuf::uint32 value) {
  _set_bit(2);
  money_ = value;
}

// optional uint32 popularity = 5;
inline bool CountryInfo::has_popularity() const {
  return _has_bit(3);
}
inline void CountryInfo::clear_popularity() {
  popularity_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 CountryInfo::popularity() const {
  return popularity_;
}
inline void CountryInfo::set_popularity(::google::protobuf::uint32 value) {
  _set_bit(3);
  popularity_ = value;
}

// optional .IGameProto.COUNTRY_STATE state = 6;
inline bool CountryInfo::has_state() const {
  return _has_bit(4);
}
inline void CountryInfo::clear_state() {
  state_ = 0;
  _clear_bit(4);
}
inline IGameProto::COUNTRY_STATE CountryInfo::state() const {
  return static_cast< IGameProto::COUNTRY_STATE >(state_);
}
inline void CountryInfo::set_state(IGameProto::COUNTRY_STATE value) {
  GOOGLE_DCHECK(IGameProto::COUNTRY_STATE_IsValid(value));
  _set_bit(4);
  state_ = value;
}

// repeated uint32 cities = 7;
inline int CountryInfo::cities_size() const {
  return cities_.size();
}
inline void CountryInfo::clear_cities() {
  cities_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CountryInfo::cities() const {
  return cities_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CountryInfo::mutable_cities() {
  return &cities_;
}
inline ::google::protobuf::uint32 CountryInfo::cities(int index) const {
  return cities_.Get(index);
}
inline void CountryInfo::set_cities(int index, ::google::protobuf::uint32 value) {
  cities_.Set(index, value);
}
inline void CountryInfo::add_cities(::google::protobuf::uint32 value) {
  cities_.Add(value);
}

// repeated uint32 friends = 8;
inline int CountryInfo::friends_size() const {
  return friends_.size();
}
inline void CountryInfo::clear_friends() {
  friends_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CountryInfo::friends() const {
  return friends_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CountryInfo::mutable_friends() {
  return &friends_;
}
inline ::google::protobuf::uint32 CountryInfo::friends(int index) const {
  return friends_.Get(index);
}
inline void CountryInfo::set_friends(int index, ::google::protobuf::uint32 value) {
  friends_.Set(index, value);
}
inline void CountryInfo::add_friends(::google::protobuf::uint32 value) {
  friends_.Add(value);
}

// repeated uint32 enemies = 9;
inline int CountryInfo::enemies_size() const {
  return enemies_.size();
}
inline void CountryInfo::clear_enemies() {
  enemies_.Clear();
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CountryInfo::enemies() const {
  return enemies_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CountryInfo::mutable_enemies() {
  return &enemies_;
}
inline ::google::protobuf::uint32 CountryInfo::enemies(int index) const {
  return enemies_.Get(index);
}
inline void CountryInfo::set_enemies(int index, ::google::protobuf::uint32 value) {
  enemies_.Set(index, value);
}
inline void CountryInfo::add_enemies(::google::protobuf::uint32 value) {
  enemies_.Add(value);
}

// optional uint32 power = 10;
inline bool CountryInfo::has_power() const {
  return _has_bit(8);
}
inline void CountryInfo::clear_power() {
  power_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 CountryInfo::power() const {
  return power_;
}
inline void CountryInfo::set_power(::google::protobuf::uint32 value) {
  _set_bit(8);
  power_ = value;
}

// optional string notice = 11;
inline bool CountryInfo::has_notice() const {
  return _has_bit(9);
}
inline void CountryInfo::clear_notice() {
  if (notice_ != &_default_notice_) {
    notice_->clear();
  }
  _clear_bit(9);
}
inline const ::std::string& CountryInfo::notice() const {
  return *notice_;
}
inline void CountryInfo::set_notice(const ::std::string& value) {
  _set_bit(9);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CountryInfo::set_notice(const char* value) {
  _set_bit(9);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(value);
}
inline void CountryInfo::set_notice(const char* value, size_t size) {
  _set_bit(9);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  notice_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CountryInfo::mutable_notice() {
  _set_bit(9);
  if (notice_ == &_default_notice_) {
    notice_ = new ::std::string;
  }
  return notice_;
}

// optional string name = 12;
inline bool CountryInfo::has_name() const {
  return _has_bit(10);
}
inline void CountryInfo::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(10);
}
inline const ::std::string& CountryInfo::name() const {
  return *name_;
}
inline void CountryInfo::set_name(const ::std::string& value) {
  _set_bit(10);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CountryInfo::set_name(const char* value) {
  _set_bit(10);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void CountryInfo::set_name(const char* value, size_t size) {
  _set_bit(10);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CountryInfo::mutable_name() {
  _set_bit(10);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// repeated .IGameProto.officer officers = 13;
inline int CountryInfo::officers_size() const {
  return officers_.size();
}
inline void CountryInfo::clear_officers() {
  officers_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >&
CountryInfo::officers() const {
  return officers_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::officer >*
CountryInfo::mutable_officers() {
  return &officers_;
}
inline const ::IGameProto::officer& CountryInfo::officers(int index) const {
  return officers_.Get(index);
}
inline ::IGameProto::officer* CountryInfo::mutable_officers(int index) {
  return officers_.Mutable(index);
}
inline ::IGameProto::officer* CountryInfo::add_officers() {
  return officers_.Add();
}

// optional string kingName = 14;
inline bool CountryInfo::has_kingname() const {
  return _has_bit(12);
}
inline void CountryInfo::clear_kingname() {
  if (kingname_ != &_default_kingname_) {
    kingname_->clear();
  }
  _clear_bit(12);
}
inline const ::std::string& CountryInfo::kingname() const {
  return *kingname_;
}
inline void CountryInfo::set_kingname(const ::std::string& value) {
  _set_bit(12);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CountryInfo::set_kingname(const char* value) {
  _set_bit(12);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(value);
}
inline void CountryInfo::set_kingname(const char* value, size_t size) {
  _set_bit(12);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  kingname_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* CountryInfo::mutable_kingname() {
  _set_bit(12);
  if (kingname_ == &_default_kingname_) {
    kingname_ = new ::std::string;
  }
  return kingname_;
}

// -------------------------------------------------------------------

// MsgCountryInofNtf

// repeated .IGameProto.CountryInfo countries = 1;
inline int MsgCountryInofNtf::countries_size() const {
  return countries_.size();
}
inline void MsgCountryInofNtf::clear_countries() {
  countries_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::CountryInfo >&
MsgCountryInofNtf::countries() const {
  return countries_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::CountryInfo >*
MsgCountryInofNtf::mutable_countries() {
  return &countries_;
}
inline const ::IGameProto::CountryInfo& MsgCountryInofNtf::countries(int index) const {
  return countries_.Get(index);
}
inline ::IGameProto::CountryInfo* MsgCountryInofNtf::mutable_countries(int index) {
  return countries_.Mutable(index);
}
inline ::IGameProto::CountryInfo* MsgCountryInofNtf::add_countries() {
  return countries_.Add();
}

// -------------------------------------------------------------------

// MsgCallWarReq

// optional uint32 countryId = 1;
inline bool MsgCallWarReq::has_countryid() const {
  return _has_bit(0);
}
inline void MsgCallWarReq::clear_countryid() {
  countryid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCallWarReq::countryid() const {
  return countryid_;
}
inline void MsgCallWarReq::set_countryid(::google::protobuf::uint32 value) {
  _set_bit(0);
  countryid_ = value;
}

// -------------------------------------------------------------------

// MsgCallWarAck

// -------------------------------------------------------------------

// CallWarInfo

// optional uint32 active_id = 1;
inline bool CallWarInfo::has_active_id() const {
  return _has_bit(0);
}
inline void CallWarInfo::clear_active_id() {
  active_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CallWarInfo::active_id() const {
  return active_id_;
}
inline void CallWarInfo::set_active_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  active_id_ = value;
}

// optional uint32 passive_id = 2;
inline bool CallWarInfo::has_passive_id() const {
  return _has_bit(1);
}
inline void CallWarInfo::clear_passive_id() {
  passive_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CallWarInfo::passive_id() const {
  return passive_id_;
}
inline void CallWarInfo::set_passive_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  passive_id_ = value;
}

// -------------------------------------------------------------------

// MsgCallWarInfoReq

// -------------------------------------------------------------------

// MsgCallWarInfoAck

// repeated .IGameProto.CallWarInfo call_war_info = 1;
inline int MsgCallWarInfoAck::call_war_info_size() const {
  return call_war_info_.size();
}
inline void MsgCallWarInfoAck::clear_call_war_info() {
  call_war_info_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::CallWarInfo >&
MsgCallWarInfoAck::call_war_info() const {
  return call_war_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::CallWarInfo >*
MsgCallWarInfoAck::mutable_call_war_info() {
  return &call_war_info_;
}
inline const ::IGameProto::CallWarInfo& MsgCallWarInfoAck::call_war_info(int index) const {
  return call_war_info_.Get(index);
}
inline ::IGameProto::CallWarInfo* MsgCallWarInfoAck::mutable_call_war_info(int index) {
  return call_war_info_.Mutable(index);
}
inline ::IGameProto::CallWarInfo* MsgCallWarInfoAck::add_call_war_info() {
  return call_war_info_.Add();
}

// optional uint32 timeLeft = 2;
inline bool MsgCallWarInfoAck::has_timeleft() const {
  return _has_bit(1);
}
inline void MsgCallWarInfoAck::clear_timeleft() {
  timeleft_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgCallWarInfoAck::timeleft() const {
  return timeleft_;
}
inline void MsgCallWarInfoAck::set_timeleft(::google::protobuf::uint32 value) {
  _set_bit(1);
  timeleft_ = value;
}

// -------------------------------------------------------------------

// MsgExchangeMoneyReq

// optional uint32 sourceMoneyType = 1;
inline bool MsgExchangeMoneyReq::has_sourcemoneytype() const {
  return _has_bit(0);
}
inline void MsgExchangeMoneyReq::clear_sourcemoneytype() {
  sourcemoneytype_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgExchangeMoneyReq::sourcemoneytype() const {
  return sourcemoneytype_;
}
inline void MsgExchangeMoneyReq::set_sourcemoneytype(::google::protobuf::uint32 value) {
  _set_bit(0);
  sourcemoneytype_ = value;
}

// optional uint64 sourceMoneyCount = 2;
inline bool MsgExchangeMoneyReq::has_sourcemoneycount() const {
  return _has_bit(1);
}
inline void MsgExchangeMoneyReq::clear_sourcemoneycount() {
  sourcemoneycount_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 MsgExchangeMoneyReq::sourcemoneycount() const {
  return sourcemoneycount_;
}
inline void MsgExchangeMoneyReq::set_sourcemoneycount(::google::protobuf::uint64 value) {
  _set_bit(1);
  sourcemoneycount_ = value;
}

// optional uint32 destMoneyType = 3;
inline bool MsgExchangeMoneyReq::has_destmoneytype() const {
  return _has_bit(2);
}
inline void MsgExchangeMoneyReq::clear_destmoneytype() {
  destmoneytype_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 MsgExchangeMoneyReq::destmoneytype() const {
  return destmoneytype_;
}
inline void MsgExchangeMoneyReq::set_destmoneytype(::google::protobuf::uint32 value) {
  _set_bit(2);
  destmoneytype_ = value;
}

// -------------------------------------------------------------------

// MsgExchangeMoneyAck

// optional uint64 totalGold = 1;
inline bool MsgExchangeMoneyAck::has_totalgold() const {
  return _has_bit(0);
}
inline void MsgExchangeMoneyAck::clear_totalgold() {
  totalgold_ = GOOGLE_ULONGLONG(0);
  _clear_bit(0);
}
inline ::google::protobuf::uint64 MsgExchangeMoneyAck::totalgold() const {
  return totalgold_;
}
inline void MsgExchangeMoneyAck::set_totalgold(::google::protobuf::uint64 value) {
  _set_bit(0);
  totalgold_ = value;
}

// optional uint64 totalSilver = 2;
inline bool MsgExchangeMoneyAck::has_totalsilver() const {
  return _has_bit(1);
}
inline void MsgExchangeMoneyAck::clear_totalsilver() {
  totalsilver_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 MsgExchangeMoneyAck::totalsilver() const {
  return totalsilver_;
}
inline void MsgExchangeMoneyAck::set_totalsilver(::google::protobuf::uint64 value) {
  _set_bit(1);
  totalsilver_ = value;
}

// optional uint64 totalCopper = 3;
inline bool MsgExchangeMoneyAck::has_totalcopper() const {
  return _has_bit(2);
}
inline void MsgExchangeMoneyAck::clear_totalcopper() {
  totalcopper_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 MsgExchangeMoneyAck::totalcopper() const {
  return totalcopper_;
}
inline void MsgExchangeMoneyAck::set_totalcopper(::google::protobuf::uint64 value) {
  _set_bit(2);
  totalcopper_ = value;
}

// optional int64 changedGold = 4;
inline bool MsgExchangeMoneyAck::has_changedgold() const {
  return _has_bit(3);
}
inline void MsgExchangeMoneyAck::clear_changedgold() {
  changedgold_ = GOOGLE_LONGLONG(0);
  _clear_bit(3);
}
inline ::google::protobuf::int64 MsgExchangeMoneyAck::changedgold() const {
  return changedgold_;
}
inline void MsgExchangeMoneyAck::set_changedgold(::google::protobuf::int64 value) {
  _set_bit(3);
  changedgold_ = value;
}

// optional int64 changedSilver = 5;
inline bool MsgExchangeMoneyAck::has_changedsilver() const {
  return _has_bit(4);
}
inline void MsgExchangeMoneyAck::clear_changedsilver() {
  changedsilver_ = GOOGLE_LONGLONG(0);
  _clear_bit(4);
}
inline ::google::protobuf::int64 MsgExchangeMoneyAck::changedsilver() const {
  return changedsilver_;
}
inline void MsgExchangeMoneyAck::set_changedsilver(::google::protobuf::int64 value) {
  _set_bit(4);
  changedsilver_ = value;
}

// optional int64 changedCopper = 6;
inline bool MsgExchangeMoneyAck::has_changedcopper() const {
  return _has_bit(5);
}
inline void MsgExchangeMoneyAck::clear_changedcopper() {
  changedcopper_ = GOOGLE_LONGLONG(0);
  _clear_bit(5);
}
inline ::google::protobuf::int64 MsgExchangeMoneyAck::changedcopper() const {
  return changedcopper_;
}
inline void MsgExchangeMoneyAck::set_changedcopper(::google::protobuf::int64 value) {
  _set_bit(5);
  changedcopper_ = value;
}

// optional uint32 status = 7;
inline bool MsgExchangeMoneyAck::has_status() const {
  return _has_bit(6);
}
inline void MsgExchangeMoneyAck::clear_status() {
  status_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 MsgExchangeMoneyAck::status() const {
  return status_;
}
inline void MsgExchangeMoneyAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(6);
  status_ = value;
}

// -------------------------------------------------------------------

// HpInfo

// optional uint32 id = 1;
inline bool HpInfo::has_id() const {
  return _has_bit(0);
}
inline void HpInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 HpInfo::id() const {
  return id_;
}
inline void HpInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 hp = 2;
inline bool HpInfo::has_hp() const {
  return _has_bit(1);
}
inline void HpInfo::clear_hp() {
  hp_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 HpInfo::hp() const {
  return hp_;
}
inline void HpInfo::set_hp(::google::protobuf::uint32 value) {
  _set_bit(1);
  hp_ = value;
}

// -------------------------------------------------------------------

// CityInfo

// optional uint32 id = 1;
inline bool CityInfo::has_id() const {
  return _has_bit(0);
}
inline void CityInfo::clear_id() {
  id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 CityInfo::id() const {
  return id_;
}
inline void CityInfo::set_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  id_ = value;
}

// optional uint32 isSelf = 2;
inline bool CityInfo::has_isself() const {
  return _has_bit(1);
}
inline void CityInfo::clear_isself() {
  isself_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 CityInfo::isself() const {
  return isself_;
}
inline void CityInfo::set_isself(::google::protobuf::uint32 value) {
  _set_bit(1);
  isself_ = value;
}

// optional .IGameProto.CITY_STATE state = 3;
inline bool CityInfo::has_state() const {
  return _has_bit(2);
}
inline void CityInfo::clear_state() {
  state_ = 1;
  _clear_bit(2);
}
inline IGameProto::CITY_STATE CityInfo::state() const {
  return static_cast< IGameProto::CITY_STATE >(state_);
}
inline void CityInfo::set_state(IGameProto::CITY_STATE value) {
  GOOGLE_DCHECK(IGameProto::CITY_STATE_IsValid(value));
  _set_bit(2);
  state_ = value;
}

// repeated .IGameProto.HpInfo hp = 4;
inline int CityInfo::hp_size() const {
  return hp_.size();
}
inline void CityInfo::clear_hp() {
  hp_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::HpInfo >&
CityInfo::hp() const {
  return hp_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::HpInfo >*
CityInfo::mutable_hp() {
  return &hp_;
}
inline const ::IGameProto::HpInfo& CityInfo::hp(int index) const {
  return hp_.Get(index);
}
inline ::IGameProto::HpInfo* CityInfo::mutable_hp(int index) {
  return hp_.Mutable(index);
}
inline ::IGameProto::HpInfo* CityInfo::add_hp() {
  return hp_.Add();
}

// -------------------------------------------------------------------

// MsgEnterCityVisionNtf

// optional .IGameProto.CityInfo city = 1;
inline bool MsgEnterCityVisionNtf::has_city() const {
  return _has_bit(0);
}
inline void MsgEnterCityVisionNtf::clear_city() {
  if (city_ != NULL) city_->::IGameProto::CityInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::CityInfo& MsgEnterCityVisionNtf::city() const {
  return city_ != NULL ? *city_ : *default_instance_->city_;
}
inline ::IGameProto::CityInfo* MsgEnterCityVisionNtf::mutable_city() {
  _set_bit(0);
  if (city_ == NULL) city_ = new ::IGameProto::CityInfo;
  return city_;
}

// -------------------------------------------------------------------

// MsgOutofCityVisionNtf

// optional uint32 cityId = 1;
inline bool MsgOutofCityVisionNtf::has_cityid() const {
  return _has_bit(0);
}
inline void MsgOutofCityVisionNtf::clear_cityid() {
  cityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgOutofCityVisionNtf::cityid() const {
  return cityid_;
}
inline void MsgOutofCityVisionNtf::set_cityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  cityid_ = value;
}

// -------------------------------------------------------------------

// MsgCityInfoNtf

// optional .IGameProto.CityInfo city = 1;
inline bool MsgCityInfoNtf::has_city() const {
  return _has_bit(0);
}
inline void MsgCityInfoNtf::clear_city() {
  if (city_ != NULL) city_->::IGameProto::CityInfo::Clear();
  _clear_bit(0);
}
inline const ::IGameProto::CityInfo& MsgCityInfoNtf::city() const {
  return city_ != NULL ? *city_ : *default_instance_->city_;
}
inline ::IGameProto::CityInfo* MsgCityInfoNtf::mutable_city() {
  _set_bit(0);
  if (city_ == NULL) city_ = new ::IGameProto::CityInfo;
  return city_;
}

// -------------------------------------------------------------------

// MsgEnterCityReq

// optional uint32 cityId = 1;
inline bool MsgEnterCityReq::has_cityid() const {
  return _has_bit(0);
}
inline void MsgEnterCityReq::clear_cityid() {
  cityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterCityReq::cityid() const {
  return cityid_;
}
inline void MsgEnterCityReq::set_cityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  cityid_ = value;
}

// -------------------------------------------------------------------

// MsgEnterCityAck

// optional uint32 cityId = 1;
inline bool MsgEnterCityAck::has_cityid() const {
  return _has_bit(0);
}
inline void MsgEnterCityAck::clear_cityid() {
  cityid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterCityAck::cityid() const {
  return cityid_;
}
inline void MsgEnterCityAck::set_cityid(::google::protobuf::uint32 value) {
  _set_bit(0);
  cityid_ = value;
}

// -------------------------------------------------------------------

// MsgCountryBattleEndNtf

// optional string msg = 1;
inline bool MsgCountryBattleEndNtf::has_msg() const {
  return _has_bit(0);
}
inline void MsgCountryBattleEndNtf::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgCountryBattleEndNtf::msg() const {
  return *msg_;
}
inline void MsgCountryBattleEndNtf::set_msg(const ::std::string& value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void MsgCountryBattleEndNtf::set_msg(const char* value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void MsgCountryBattleEndNtf::set_msg(const char* value, size_t size) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCountryBattleEndNtf::mutable_msg() {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// -------------------------------------------------------------------

// MsgCountryBattleStartNtf

// optional string msg = 1;
inline bool MsgCountryBattleStartNtf::has_msg() const {
  return _has_bit(0);
}
inline void MsgCountryBattleStartNtf::clear_msg() {
  if (msg_ != &_default_msg_) {
    msg_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgCountryBattleStartNtf::msg() const {
  return *msg_;
}
inline void MsgCountryBattleStartNtf::set_msg(const ::std::string& value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void MsgCountryBattleStartNtf::set_msg(const char* value) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(value);
}
inline void MsgCountryBattleStartNtf::set_msg(const char* value, size_t size) {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCountryBattleStartNtf::mutable_msg() {
  _set_bit(0);
  if (msg_ == &_default_msg_) {
    msg_ = new ::std::string;
  }
  return msg_;
}

// -------------------------------------------------------------------

// MsgSystemHintNtf

// optional int32 proir = 1;
inline bool MsgSystemHintNtf::has_proir() const {
  return _has_bit(0);
}
inline void MsgSystemHintNtf::clear_proir() {
  proir_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgSystemHintNtf::proir() const {
  return proir_;
}
inline void MsgSystemHintNtf::set_proir(::google::protobuf::int32 value) {
  _set_bit(0);
  proir_ = value;
}

// optional string notice_language_id = 2;
inline bool MsgSystemHintNtf::has_notice_language_id() const {
  return _has_bit(1);
}
inline void MsgSystemHintNtf::clear_notice_language_id() {
  if (notice_language_id_ != &_default_notice_language_id_) {
    notice_language_id_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgSystemHintNtf::notice_language_id() const {
  return *notice_language_id_;
}
inline void MsgSystemHintNtf::set_notice_language_id(const ::std::string& value) {
  _set_bit(1);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(value);
}
inline void MsgSystemHintNtf::set_notice_language_id(const char* value) {
  _set_bit(1);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(value);
}
inline void MsgSystemHintNtf::set_notice_language_id(const char* value, size_t size) {
  _set_bit(1);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSystemHintNtf::mutable_notice_language_id() {
  _set_bit(1);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  return notice_language_id_;
}

// optional int32 showPostion = 3;
inline bool MsgSystemHintNtf::has_showpostion() const {
  return _has_bit(2);
}
inline void MsgSystemHintNtf::clear_showpostion() {
  showpostion_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 MsgSystemHintNtf::showpostion() const {
  return showpostion_;
}
inline void MsgSystemHintNtf::set_showpostion(::google::protobuf::int32 value) {
  _set_bit(2);
  showpostion_ = value;
}

// repeated string parameters = 4;
inline int MsgSystemHintNtf::parameters_size() const {
  return parameters_.size();
}
inline void MsgSystemHintNtf::clear_parameters() {
  parameters_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgSystemHintNtf::parameters() const {
  return parameters_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgSystemHintNtf::mutable_parameters() {
  return &parameters_;
}
inline const ::std::string& MsgSystemHintNtf::parameters(int index) const {
  return parameters_.Get(index);
}
inline ::std::string* MsgSystemHintNtf::mutable_parameters(int index) {
  return parameters_.Mutable(index);
}
inline void MsgSystemHintNtf::set_parameters(int index, const ::std::string& value) {
  parameters_.Mutable(index)->assign(value);
}
inline void MsgSystemHintNtf::set_parameters(int index, const char* value) {
  parameters_.Mutable(index)->assign(value);
}
inline void MsgSystemHintNtf::set_parameters(int index, const char* value, size_t size) {
  parameters_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgSystemHintNtf::add_parameters() {
  return parameters_.Add();
}
inline void MsgSystemHintNtf::add_parameters(const ::std::string& value) {
  parameters_.Add()->assign(value);
}
inline void MsgSystemHintNtf::add_parameters(const char* value) {
  parameters_.Add()->assign(value);
}
inline void MsgSystemHintNtf::add_parameters(const char* value, size_t size) {
  parameters_.Add()->assign(reinterpret_cast<const char*>(value), size);
}

// -------------------------------------------------------------------

// MsgReconnectReq

// required uint32 roleId = 1;
inline bool MsgReconnectReq::has_roleid() const {
  return _has_bit(0);
}
inline void MsgReconnectReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgReconnectReq::roleid() const {
  return roleid_;
}
inline void MsgReconnectReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// MsgReconnectAck

// optional uint32 status = 1;
inline bool MsgReconnectAck::has_status() const {
  return _has_bit(0);
}
inline void MsgReconnectAck::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgReconnectAck::status() const {
  return status_;
}
inline void MsgReconnectAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgTransReq

// -------------------------------------------------------------------

// MsgTransAck

// optional uint32 status = 1;
inline bool MsgTransAck::has_status() const {
  return _has_bit(0);
}
inline void MsgTransAck::clear_status() {
  status_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgTransAck::status() const {
  return status_;
}
inline void MsgTransAck::set_status(::google::protobuf::uint32 value) {
  _set_bit(0);
  status_ = value;
}

// -------------------------------------------------------------------

// MsgTriggerMonsterNtf

// required uint32 againstFormId = 1;
inline bool MsgTriggerMonsterNtf::has_againstformid() const {
  return _has_bit(0);
}
inline void MsgTriggerMonsterNtf::clear_againstformid() {
  againstformid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgTriggerMonsterNtf::againstformid() const {
  return againstformid_;
}
inline void MsgTriggerMonsterNtf::set_againstformid(::google::protobuf::uint32 value) {
  _set_bit(0);
  againstformid_ = value;
}

// required int32 status = 2;
inline bool MsgTriggerMonsterNtf::has_status() const {
  return _has_bit(1);
}
inline void MsgTriggerMonsterNtf::clear_status() {
  status_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgTriggerMonsterNtf::status() const {
  return status_;
}
inline void MsgTriggerMonsterNtf::set_status(::google::protobuf::int32 value) {
  _set_bit(1);
  status_ = value;
}

// required uint64 fightId = 3;
inline bool MsgTriggerMonsterNtf::has_fightid() const {
  return _has_bit(2);
}
inline void MsgTriggerMonsterNtf::clear_fightid() {
  fightid_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 MsgTriggerMonsterNtf::fightid() const {
  return fightid_;
}
inline void MsgTriggerMonsterNtf::set_fightid(::google::protobuf::uint64 value) {
  _set_bit(2);
  fightid_ = value;
}

// required .IGameProto.FightSide enemySide = 4;
inline bool MsgTriggerMonsterNtf::has_enemyside() const {
  return _has_bit(3);
}
inline void MsgTriggerMonsterNtf::clear_enemyside() {
  if (enemyside_ != NULL) enemyside_->::IGameProto::FightSide::Clear();
  _clear_bit(3);
}
inline const ::IGameProto::FightSide& MsgTriggerMonsterNtf::enemyside() const {
  return enemyside_ != NULL ? *enemyside_ : *default_instance_->enemyside_;
}
inline ::IGameProto::FightSide* MsgTriggerMonsterNtf::mutable_enemyside() {
  _set_bit(3);
  if (enemyside_ == NULL) enemyside_ = new ::IGameProto::FightSide;
  return enemyside_;
}

// -------------------------------------------------------------------

// MsgChangeRoleModeReq

// optional .IGameProto.ROLE_MODE roleMode = 1;
inline bool MsgChangeRoleModeReq::has_rolemode() const {
  return _has_bit(0);
}
inline void MsgChangeRoleModeReq::clear_rolemode() {
  rolemode_ = 1;
  _clear_bit(0);
}
inline IGameProto::ROLE_MODE MsgChangeRoleModeReq::rolemode() const {
  return static_cast< IGameProto::ROLE_MODE >(rolemode_);
}
inline void MsgChangeRoleModeReq::set_rolemode(IGameProto::ROLE_MODE value) {
  GOOGLE_DCHECK(IGameProto::ROLE_MODE_IsValid(value));
  _set_bit(0);
  rolemode_ = value;
}

// -------------------------------------------------------------------

// RoleAttr

// optional .IGameProto.ROLE_ATTR_TYPE attrType = 1;
inline bool RoleAttr::has_attrtype() const {
  return _has_bit(0);
}
inline void RoleAttr::clear_attrtype() {
  attrtype_ = 1;
  _clear_bit(0);
}
inline IGameProto::ROLE_ATTR_TYPE RoleAttr::attrtype() const {
  return static_cast< IGameProto::ROLE_ATTR_TYPE >(attrtype_);
}
inline void RoleAttr::set_attrtype(IGameProto::ROLE_ATTR_TYPE value) {
  GOOGLE_DCHECK(IGameProto::ROLE_ATTR_TYPE_IsValid(value));
  _set_bit(0);
  attrtype_ = value;
}

// optional uint32 attrVal = 2;
inline bool RoleAttr::has_attrval() const {
  return _has_bit(1);
}
inline void RoleAttr::clear_attrval() {
  attrval_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 RoleAttr::attrval() const {
  return attrval_;
}
inline void RoleAttr::set_attrval(::google::protobuf::uint32 value) {
  _set_bit(1);
  attrval_ = value;
}

// optional uint32 roleId = 3;
inline bool RoleAttr::has_roleid() const {
  return _has_bit(2);
}
inline void RoleAttr::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 RoleAttr::roleid() const {
  return roleid_;
}
inline void RoleAttr::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(2);
  roleid_ = value;
}

// -------------------------------------------------------------------

// MsgRoleAttrChangeNtf

// repeated .IGameProto.RoleAttr attrs = 1;
inline int MsgRoleAttrChangeNtf::attrs_size() const {
  return attrs_.size();
}
inline void MsgRoleAttrChangeNtf::clear_attrs() {
  attrs_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleAttr >&
MsgRoleAttrChangeNtf::attrs() const {
  return attrs_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::RoleAttr >*
MsgRoleAttrChangeNtf::mutable_attrs() {
  return &attrs_;
}
inline const ::IGameProto::RoleAttr& MsgRoleAttrChangeNtf::attrs(int index) const {
  return attrs_.Get(index);
}
inline ::IGameProto::RoleAttr* MsgRoleAttrChangeNtf::mutable_attrs(int index) {
  return attrs_.Mutable(index);
}
inline ::IGameProto::RoleAttr* MsgRoleAttrChangeNtf::add_attrs() {
  return attrs_.Add();
}

// -------------------------------------------------------------------

// MonsterId

// optional uint32 creatureId = 1;
inline bool MonsterId::has_creatureid() const {
  return _has_bit(0);
}
inline void MonsterId::clear_creatureid() {
  creatureid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MonsterId::creatureid() const {
  return creatureid_;
}
inline void MonsterId::set_creatureid(::google::protobuf::uint32 value) {
  _set_bit(0);
  creatureid_ = value;
}

// optional uint32 NpcId = 2;
inline bool MonsterId::has_npcid() const {
  return _has_bit(1);
}
inline void MonsterId::clear_npcid() {
  npcid_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MonsterId::npcid() const {
  return npcid_;
}
inline void MonsterId::set_npcid(::google::protobuf::uint32 value) {
  _set_bit(1);
  npcid_ = value;
}

// -------------------------------------------------------------------

// MsgMonsterListNtf

// repeated .IGameProto.MonsterId monsterArray = 1;
inline int MsgMonsterListNtf::monsterarray_size() const {
  return monsterarray_.size();
}
inline void MsgMonsterListNtf::clear_monsterarray() {
  monsterarray_.Clear();
}
inline const ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterId >&
MsgMonsterListNtf::monsterarray() const {
  return monsterarray_;
}
inline ::google::protobuf::RepeatedPtrField< ::IGameProto::MonsterId >*
MsgMonsterListNtf::mutable_monsterarray() {
  return &monsterarray_;
}
inline const ::IGameProto::MonsterId& MsgMonsterListNtf::monsterarray(int index) const {
  return monsterarray_.Get(index);
}
inline ::IGameProto::MonsterId* MsgMonsterListNtf::mutable_monsterarray(int index) {
  return monsterarray_.Mutable(index);
}
inline ::IGameProto::MonsterId* MsgMonsterListNtf::add_monsterarray() {
  return monsterarray_.Add();
}

// -------------------------------------------------------------------

// MsgReleaseSkillReq

// optional uint32 skillId = 1;
inline bool MsgReleaseSkillReq::has_skillid() const {
  return _has_bit(0);
}
inline void MsgReleaseSkillReq::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgReleaseSkillReq::skillid() const {
  return skillid_;
}
inline void MsgReleaseSkillReq::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional float target_pos_x = 2;
inline bool MsgReleaseSkillReq::has_target_pos_x() const {
  return _has_bit(1);
}
inline void MsgReleaseSkillReq::clear_target_pos_x() {
  target_pos_x_ = 0;
  _clear_bit(1);
}
inline float MsgReleaseSkillReq::target_pos_x() const {
  return target_pos_x_;
}
inline void MsgReleaseSkillReq::set_target_pos_x(float value) {
  _set_bit(1);
  target_pos_x_ = value;
}

// optional float target_pos_y = 3;
inline bool MsgReleaseSkillReq::has_target_pos_y() const {
  return _has_bit(2);
}
inline void MsgReleaseSkillReq::clear_target_pos_y() {
  target_pos_y_ = 0;
  _clear_bit(2);
}
inline float MsgReleaseSkillReq::target_pos_y() const {
  return target_pos_y_;
}
inline void MsgReleaseSkillReq::set_target_pos_y(float value) {
  _set_bit(2);
  target_pos_y_ = value;
}

// optional uint32 target_id = 4;
inline bool MsgReleaseSkillReq::has_target_id() const {
  return _has_bit(3);
}
inline void MsgReleaseSkillReq::clear_target_id() {
  target_id_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 MsgReleaseSkillReq::target_id() const {
  return target_id_;
}
inline void MsgReleaseSkillReq::set_target_id(::google::protobuf::uint32 value) {
  _set_bit(3);
  target_id_ = value;
}

// optional .IGameProto.TARGET_TYPE target_type = 5;
inline bool MsgReleaseSkillReq::has_target_type() const {
  return _has_bit(4);
}
inline void MsgReleaseSkillReq::clear_target_type() {
  target_type_ = 1;
  _clear_bit(4);
}
inline IGameProto::TARGET_TYPE MsgReleaseSkillReq::target_type() const {
  return static_cast< IGameProto::TARGET_TYPE >(target_type_);
}
inline void MsgReleaseSkillReq::set_target_type(IGameProto::TARGET_TYPE value) {
  GOOGLE_DCHECK(IGameProto::TARGET_TYPE_IsValid(value));
  _set_bit(4);
  target_type_ = value;
}

// optional uint32 param = 6;
inline bool MsgReleaseSkillReq::has_param() const {
  return _has_bit(5);
}
inline void MsgReleaseSkillReq::clear_param() {
  param_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 MsgReleaseSkillReq::param() const {
  return param_;
}
inline void MsgReleaseSkillReq::set_param(::google::protobuf::uint32 value) {
  _set_bit(5);
  param_ = value;
}

// -------------------------------------------------------------------

// MsgReleaseSkillAck

// optional uint32 skillId = 1;
inline bool MsgReleaseSkillAck::has_skillid() const {
  return _has_bit(0);
}
inline void MsgReleaseSkillAck::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgReleaseSkillAck::skillid() const {
  return skillid_;
}
inline void MsgReleaseSkillAck::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 result = 2;
inline bool MsgReleaseSkillAck::has_result() const {
  return _has_bit(1);
}
inline void MsgReleaseSkillAck::clear_result() {
  result_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgReleaseSkillAck::result() const {
  return result_;
}
inline void MsgReleaseSkillAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(1);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgReleaseSkillNtf

// optional uint32 skillId = 1;
inline bool MsgReleaseSkillNtf::has_skillid() const {
  return _has_bit(0);
}
inline void MsgReleaseSkillNtf::clear_skillid() {
  skillid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgReleaseSkillNtf::skillid() const {
  return skillid_;
}
inline void MsgReleaseSkillNtf::set_skillid(::google::protobuf::uint32 value) {
  _set_bit(0);
  skillid_ = value;
}

// optional uint32 releaser_role_id = 2;
inline bool MsgReleaseSkillNtf::has_releaser_role_id() const {
  return _has_bit(1);
}
inline void MsgReleaseSkillNtf::clear_releaser_role_id() {
  releaser_role_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgReleaseSkillNtf::releaser_role_id() const {
  return releaser_role_id_;
}
inline void MsgReleaseSkillNtf::set_releaser_role_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  releaser_role_id_ = value;
}

// optional float target_pos_x = 3;
inline bool MsgReleaseSkillNtf::has_target_pos_x() const {
  return _has_bit(2);
}
inline void MsgReleaseSkillNtf::clear_target_pos_x() {
  target_pos_x_ = 0;
  _clear_bit(2);
}
inline float MsgReleaseSkillNtf::target_pos_x() const {
  return target_pos_x_;
}
inline void MsgReleaseSkillNtf::set_target_pos_x(float value) {
  _set_bit(2);
  target_pos_x_ = value;
}

// optional float target_pos_y = 4;
inline bool MsgReleaseSkillNtf::has_target_pos_y() const {
  return _has_bit(3);
}
inline void MsgReleaseSkillNtf::clear_target_pos_y() {
  target_pos_y_ = 0;
  _clear_bit(3);
}
inline float MsgReleaseSkillNtf::target_pos_y() const {
  return target_pos_y_;
}
inline void MsgReleaseSkillNtf::set_target_pos_y(float value) {
  _set_bit(3);
  target_pos_y_ = value;
}

// optional uint32 target_id = 5;
inline bool MsgReleaseSkillNtf::has_target_id() const {
  return _has_bit(4);
}
inline void MsgReleaseSkillNtf::clear_target_id() {
  target_id_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 MsgReleaseSkillNtf::target_id() const {
  return target_id_;
}
inline void MsgReleaseSkillNtf::set_target_id(::google::protobuf::uint32 value) {
  _set_bit(4);
  target_id_ = value;
}

// optional .IGameProto.TARGET_TYPE target_type = 6;
inline bool MsgReleaseSkillNtf::has_target_type() const {
  return _has_bit(5);
}
inline void MsgReleaseSkillNtf::clear_target_type() {
  target_type_ = 1;
  _clear_bit(5);
}
inline IGameProto::TARGET_TYPE MsgReleaseSkillNtf::target_type() const {
  return static_cast< IGameProto::TARGET_TYPE >(target_type_);
}
inline void MsgReleaseSkillNtf::set_target_type(IGameProto::TARGET_TYPE value) {
  GOOGLE_DCHECK(IGameProto::TARGET_TYPE_IsValid(value));
  _set_bit(5);
  target_type_ = value;
}

// optional uint32 param = 7;
inline bool MsgReleaseSkillNtf::has_param() const {
  return _has_bit(6);
}
inline void MsgReleaseSkillNtf::clear_param() {
  param_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 MsgReleaseSkillNtf::param() const {
  return param_;
}
inline void MsgReleaseSkillNtf::set_param(::google::protobuf::uint32 value) {
  _set_bit(6);
  param_ = value;
}

// -------------------------------------------------------------------

// MsgChangeModeReq

// optional .IGameProto.EM_PK_MODE mode = 1;
inline bool MsgChangeModeReq::has_mode() const {
  return _has_bit(0);
}
inline void MsgChangeModeReq::clear_mode() {
  mode_ = 1;
  _clear_bit(0);
}
inline IGameProto::EM_PK_MODE MsgChangeModeReq::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgChangeModeReq::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(0);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgChangeModeAck

// optional uint32 result = 1;
inline bool MsgChangeModeAck::has_result() const {
  return _has_bit(0);
}
inline void MsgChangeModeAck::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgChangeModeAck::result() const {
  return result_;
}
inline void MsgChangeModeAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgChangeModeNtf

// optional .IGameProto.EM_PK_MODE mode = 1;
inline bool MsgChangeModeNtf::has_mode() const {
  return _has_bit(0);
}
inline void MsgChangeModeNtf::clear_mode() {
  mode_ = 1;
  _clear_bit(0);
}
inline IGameProto::EM_PK_MODE MsgChangeModeNtf::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgChangeModeNtf::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(0);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillReq

// optional uint32 roleId = 1;
inline bool MsgPlayerKillReq::has_roleid() const {
  return _has_bit(0);
}
inline void MsgPlayerKillReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlayerKillReq::roleid() const {
  return roleid_;
}
inline void MsgPlayerKillReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional .IGameProto.EM_PK_MODE mode = 2;
inline bool MsgPlayerKillReq::has_mode() const {
  return _has_bit(1);
}
inline void MsgPlayerKillReq::clear_mode() {
  mode_ = 1;
  _clear_bit(1);
}
inline IGameProto::EM_PK_MODE MsgPlayerKillReq::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgPlayerKillReq::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(1);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillAck

// optional uint32 result = 1;
inline bool MsgPlayerKillAck::has_result() const {
  return _has_bit(0);
}
inline void MsgPlayerKillAck::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlayerKillAck::result() const {
  return result_;
}
inline void MsgPlayerKillAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillNtf

// optional uint32 roleId = 1;
inline bool MsgPlayerKillNtf::has_roleid() const {
  return _has_bit(0);
}
inline void MsgPlayerKillNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlayerKillNtf::roleid() const {
  return roleid_;
}
inline void MsgPlayerKillNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional string name = 2;
inline bool MsgPlayerKillNtf::has_name() const {
  return _has_bit(1);
}
inline void MsgPlayerKillNtf::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgPlayerKillNtf::name() const {
  return *name_;
}
inline void MsgPlayerKillNtf::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgPlayerKillNtf::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgPlayerKillNtf::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgPlayerKillNtf::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional .IGameProto.EM_PK_MODE mode = 3;
inline bool MsgPlayerKillNtf::has_mode() const {
  return _has_bit(2);
}
inline void MsgPlayerKillNtf::clear_mode() {
  mode_ = 1;
  _clear_bit(2);
}
inline IGameProto::EM_PK_MODE MsgPlayerKillNtf::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgPlayerKillNtf::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(2);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgCancelPlayerKillReq

// optional uint32 roleId = 1;
inline bool MsgCancelPlayerKillReq::has_roleid() const {
  return _has_bit(0);
}
inline void MsgCancelPlayerKillReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCancelPlayerKillReq::roleid() const {
  return roleid_;
}
inline void MsgCancelPlayerKillReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional string name = 2;
inline bool MsgCancelPlayerKillReq::has_name() const {
  return _has_bit(1);
}
inline void MsgCancelPlayerKillReq::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgCancelPlayerKillReq::name() const {
  return *name_;
}
inline void MsgCancelPlayerKillReq::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCancelPlayerKillReq::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCancelPlayerKillReq::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCancelPlayerKillReq::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional .IGameProto.EM_PK_MODE mode = 3;
inline bool MsgCancelPlayerKillReq::has_mode() const {
  return _has_bit(2);
}
inline void MsgCancelPlayerKillReq::clear_mode() {
  mode_ = 1;
  _clear_bit(2);
}
inline IGameProto::EM_PK_MODE MsgCancelPlayerKillReq::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgCancelPlayerKillReq::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(2);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgCancelPlayerKillAck

// optional uint32 result = 1;
inline bool MsgCancelPlayerKillAck::has_result() const {
  return _has_bit(0);
}
inline void MsgCancelPlayerKillAck::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCancelPlayerKillAck::result() const {
  return result_;
}
inline void MsgCancelPlayerKillAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgCancelPlayerKillNtf

// optional uint32 roleId = 1;
inline bool MsgCancelPlayerKillNtf::has_roleid() const {
  return _has_bit(0);
}
inline void MsgCancelPlayerKillNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgCancelPlayerKillNtf::roleid() const {
  return roleid_;
}
inline void MsgCancelPlayerKillNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional string name = 2;
inline bool MsgCancelPlayerKillNtf::has_name() const {
  return _has_bit(1);
}
inline void MsgCancelPlayerKillNtf::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& MsgCancelPlayerKillNtf::name() const {
  return *name_;
}
inline void MsgCancelPlayerKillNtf::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCancelPlayerKillNtf::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgCancelPlayerKillNtf::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgCancelPlayerKillNtf::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional .IGameProto.EM_PK_MODE mode = 3;
inline bool MsgCancelPlayerKillNtf::has_mode() const {
  return _has_bit(2);
}
inline void MsgCancelPlayerKillNtf::clear_mode() {
  mode_ = 1;
  _clear_bit(2);
}
inline IGameProto::EM_PK_MODE MsgCancelPlayerKillNtf::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgCancelPlayerKillNtf::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(2);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillAnswerReq

// optional uint32 roleId = 1;
inline bool MsgPlayerKillAnswerReq::has_roleid() const {
  return _has_bit(0);
}
inline void MsgPlayerKillAnswerReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlayerKillAnswerReq::roleid() const {
  return roleid_;
}
inline void MsgPlayerKillAnswerReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional uint32 answer_type = 2;
inline bool MsgPlayerKillAnswerReq::has_answer_type() const {
  return _has_bit(1);
}
inline void MsgPlayerKillAnswerReq::clear_answer_type() {
  answer_type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgPlayerKillAnswerReq::answer_type() const {
  return answer_type_;
}
inline void MsgPlayerKillAnswerReq::set_answer_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  answer_type_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillAnswerAck

// optional uint32 result = 1;
inline bool MsgPlayerKillAnswerAck::has_result() const {
  return _has_bit(0);
}
inline void MsgPlayerKillAnswerAck::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgPlayerKillAnswerAck::result() const {
  return result_;
}
inline void MsgPlayerKillAnswerAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgPlayerKillAnswerNtf

// optional string name = 1;
inline bool MsgPlayerKillAnswerNtf::has_name() const {
  return _has_bit(0);
}
inline void MsgPlayerKillAnswerNtf::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(0);
}
inline const ::std::string& MsgPlayerKillAnswerNtf::name() const {
  return *name_;
}
inline void MsgPlayerKillAnswerNtf::set_name(const ::std::string& value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgPlayerKillAnswerNtf::set_name(const char* value) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void MsgPlayerKillAnswerNtf::set_name(const char* value, size_t size) {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgPlayerKillAnswerNtf::mutable_name() {
  _set_bit(0);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// optional uint32 answer_type = 2;
inline bool MsgPlayerKillAnswerNtf::has_answer_type() const {
  return _has_bit(1);
}
inline void MsgPlayerKillAnswerNtf::clear_answer_type() {
  answer_type_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgPlayerKillAnswerNtf::answer_type() const {
  return answer_type_;
}
inline void MsgPlayerKillAnswerNtf::set_answer_type(::google::protobuf::uint32 value) {
  _set_bit(1);
  answer_type_ = value;
}

// -------------------------------------------------------------------

// MsgEnterFightReq

// optional uint32 roleId = 1;
inline bool MsgEnterFightReq::has_roleid() const {
  return _has_bit(0);
}
inline void MsgEnterFightReq::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterFightReq::roleid() const {
  return roleid_;
}
inline void MsgEnterFightReq::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional .IGameProto.EM_PK_MODE mode = 2;
inline bool MsgEnterFightReq::has_mode() const {
  return _has_bit(1);
}
inline void MsgEnterFightReq::clear_mode() {
  mode_ = 1;
  _clear_bit(1);
}
inline IGameProto::EM_PK_MODE MsgEnterFightReq::mode() const {
  return static_cast< IGameProto::EM_PK_MODE >(mode_);
}
inline void MsgEnterFightReq::set_mode(IGameProto::EM_PK_MODE value) {
  GOOGLE_DCHECK(IGameProto::EM_PK_MODE_IsValid(value));
  _set_bit(1);
  mode_ = value;
}

// -------------------------------------------------------------------

// MsgEnterFightAck

// optional uint32 result = 1;
inline bool MsgEnterFightAck::has_result() const {
  return _has_bit(0);
}
inline void MsgEnterFightAck::clear_result() {
  result_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgEnterFightAck::result() const {
  return result_;
}
inline void MsgEnterFightAck::set_result(::google::protobuf::uint32 value) {
  _set_bit(0);
  result_ = value;
}

// -------------------------------------------------------------------

// MsgQueryAgainstReq

// optional uint32 creatureId = 1;
inline bool MsgQueryAgainstReq::has_creatureid() const {
  return _has_bit(0);
}
inline void MsgQueryAgainstReq::clear_creatureid() {
  creatureid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgQueryAgainstReq::creatureid() const {
  return creatureid_;
}
inline void MsgQueryAgainstReq::set_creatureid(::google::protobuf::uint32 value) {
  _set_bit(0);
  creatureid_ = value;
}

// -------------------------------------------------------------------

// MsgQueryAgainstAck

// optional uint32 againstFormId = 1;
inline bool MsgQueryAgainstAck::has_againstformid() const {
  return _has_bit(0);
}
inline void MsgQueryAgainstAck::clear_againstformid() {
  againstformid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgQueryAgainstAck::againstformid() const {
  return againstformid_;
}
inline void MsgQueryAgainstAck::set_againstformid(::google::protobuf::uint32 value) {
  _set_bit(0);
  againstformid_ = value;
}

// optional .IGameProto.FightSide enemySide = 2;
inline bool MsgQueryAgainstAck::has_enemyside() const {
  return _has_bit(1);
}
inline void MsgQueryAgainstAck::clear_enemyside() {
  if (enemyside_ != NULL) enemyside_->::IGameProto::FightSide::Clear();
  _clear_bit(1);
}
inline const ::IGameProto::FightSide& MsgQueryAgainstAck::enemyside() const {
  return enemyside_ != NULL ? *enemyside_ : *default_instance_->enemyside_;
}
inline ::IGameProto::FightSide* MsgQueryAgainstAck::mutable_enemyside() {
  _set_bit(1);
  if (enemyside_ == NULL) enemyside_ = new ::IGameProto::FightSide;
  return enemyside_;
}

// -------------------------------------------------------------------

// MsgAreaIdNtf

// optional uint32 areaId = 1;
inline bool MsgAreaIdNtf::has_areaid() const {
  return _has_bit(0);
}
inline void MsgAreaIdNtf::clear_areaid() {
  areaid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgAreaIdNtf::areaid() const {
  return areaid_;
}
inline void MsgAreaIdNtf::set_areaid(::google::protobuf::uint32 value) {
  _set_bit(0);
  areaid_ = value;
}

// -------------------------------------------------------------------

// MsgMonsterLanguageNtf

// optional int32 creatureId = 3;
inline bool MsgMonsterLanguageNtf::has_creatureid() const {
  return _has_bit(0);
}
inline void MsgMonsterLanguageNtf::clear_creatureid() {
  creatureid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 MsgMonsterLanguageNtf::creatureid() const {
  return creatureid_;
}
inline void MsgMonsterLanguageNtf::set_creatureid(::google::protobuf::int32 value) {
  _set_bit(0);
  creatureid_ = value;
}

// optional int32 proir = 1;
inline bool MsgMonsterLanguageNtf::has_proir() const {
  return _has_bit(1);
}
inline void MsgMonsterLanguageNtf::clear_proir() {
  proir_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 MsgMonsterLanguageNtf::proir() const {
  return proir_;
}
inline void MsgMonsterLanguageNtf::set_proir(::google::protobuf::int32 value) {
  _set_bit(1);
  proir_ = value;
}

// optional string notice_language_id = 2;
inline bool MsgMonsterLanguageNtf::has_notice_language_id() const {
  return _has_bit(2);
}
inline void MsgMonsterLanguageNtf::clear_notice_language_id() {
  if (notice_language_id_ != &_default_notice_language_id_) {
    notice_language_id_->clear();
  }
  _clear_bit(2);
}
inline const ::std::string& MsgMonsterLanguageNtf::notice_language_id() const {
  return *notice_language_id_;
}
inline void MsgMonsterLanguageNtf::set_notice_language_id(const ::std::string& value) {
  _set_bit(2);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(value);
}
inline void MsgMonsterLanguageNtf::set_notice_language_id(const char* value) {
  _set_bit(2);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(value);
}
inline void MsgMonsterLanguageNtf::set_notice_language_id(const char* value, size_t size) {
  _set_bit(2);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  notice_language_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MsgMonsterLanguageNtf::mutable_notice_language_id() {
  _set_bit(2);
  if (notice_language_id_ == &_default_notice_language_id_) {
    notice_language_id_ = new ::std::string;
  }
  return notice_language_id_;
}

// -------------------------------------------------------------------

// MsgDeadNtf

// optional uint32 roleId = 1;
inline bool MsgDeadNtf::has_roleid() const {
  return _has_bit(0);
}
inline void MsgDeadNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgDeadNtf::roleid() const {
  return roleid_;
}
inline void MsgDeadNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// -------------------------------------------------------------------

// MsgRiviveReq

// optional .IGameProto.RIVIVE_MODE mode = 1;
inline bool MsgRiviveReq::has_mode() const {
  return _has_bit(0);
}
inline void MsgRiviveReq::clear_mode() {
  mode_ = 1;
  _clear_bit(0);
}
inline IGameProto::RIVIVE_MODE MsgRiviveReq::mode() const {
  return static_cast< IGameProto::RIVIVE_MODE >(mode_);
}
inline void MsgRiviveReq::set_mode(IGameProto::RIVIVE_MODE value) {
  GOOGLE_DCHECK(IGameProto::RIVIVE_MODE_IsValid(value));
  _set_bit(0);
  mode_ = value;
}

// optional uint32 country_id = 2;
inline bool MsgRiviveReq::has_country_id() const {
  return _has_bit(1);
}
inline void MsgRiviveReq::clear_country_id() {
  country_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 MsgRiviveReq::country_id() const {
  return country_id_;
}
inline void MsgRiviveReq::set_country_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  country_id_ = value;
}

// -------------------------------------------------------------------

// MsgRiviveNtf

// optional uint32 roleId = 1;
inline bool MsgRiviveNtf::has_roleid() const {
  return _has_bit(0);
}
inline void MsgRiviveNtf::clear_roleid() {
  roleid_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 MsgRiviveNtf::roleid() const {
  return roleid_;
}
inline void MsgRiviveNtf::set_roleid(::google::protobuf::uint32 value) {
  _set_bit(0);
  roleid_ = value;
}

// optional float x = 2;
inline bool MsgRiviveNtf::has_x() const {
  return _has_bit(1);
}
inline void MsgRiviveNtf::clear_x() {
  x_ = 0;
  _clear_bit(1);
}
inline float MsgRiviveNtf::x() const {
  return x_;
}
inline void MsgRiviveNtf::set_x(float value) {
  _set_bit(1);
  x_ = value;
}

// optional float y = 3;
inline bool MsgRiviveNtf::has_y() const {
  return _has_bit(2);
}
inline void MsgRiviveNtf::clear_y() {
  y_ = 0;
  _clear_bit(2);
}
inline float MsgRiviveNtf::y() const {
  return y_;
}
inline void MsgRiviveNtf::set_y(float value) {
  _set_bit(2);
  y_ = value;
}


}  // namespace IGameProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::ServerState>() {
  return IGameProto::ServerState_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::EM_PK_MODE>() {
  return IGameProto::EM_PK_MODE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::ActionType>() {
  return IGameProto::ActionType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::OFFICER_TYPE>() {
  return IGameProto::OFFICER_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::ArmyOfficerType>() {
  return IGameProto::ArmyOfficerType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::COUNTRY_STATE>() {
  return IGameProto::COUNTRY_STATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::MONEY_TYPE>() {
  return IGameProto::MONEY_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::CITY_STATE>() {
  return IGameProto::CITY_STATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::ROLE_MODE>() {
  return IGameProto::ROLE_MODE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::ROLE_ATTR_TYPE>() {
  return IGameProto::ROLE_ATTR_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::TARGET_TYPE>() {
  return IGameProto::TARGET_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::EM_PKRESULT>() {
  return IGameProto::EM_PKRESULT_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< IGameProto::RIVIVE_MODE>() {
  return IGameProto::RIVIVE_MODE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

#endif  // PROTOBUF_IGame_2eproto__INCLUDED
